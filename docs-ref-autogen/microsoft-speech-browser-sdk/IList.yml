### YamlMime:UniversalReference
items:
  - uid: microsoft-speech-browser-sdk.IList
    name: IList
    fullName: IList<TItem>
    children:
      - microsoft-speech-browser-sdk.IList.Add
      - microsoft-speech-browser-sdk.IList.All
      - microsoft-speech-browser-sdk.IList.Any
      - microsoft-speech-browser-sdk.IList.Clear
      - microsoft-speech-browser-sdk.IList.Clone
      - microsoft-speech-browser-sdk.IList.Concat
      - microsoft-speech-browser-sdk.IList.ConcatArray
      - microsoft-speech-browser-sdk.IList.First
      - microsoft-speech-browser-sdk.IList.ForEach
      - microsoft-speech-browser-sdk.IList.Get
      - microsoft-speech-browser-sdk.IList.InsertAt
      - microsoft-speech-browser-sdk.IList.Join
      - microsoft-speech-browser-sdk.IList.Last
      - microsoft-speech-browser-sdk.IList.Length
      - microsoft-speech-browser-sdk.IList.OnAdded
      - microsoft-speech-browser-sdk.IList.OnDisposed
      - microsoft-speech-browser-sdk.IList.OnRemoved
      - microsoft-speech-browser-sdk.IList.OrderBy
      - microsoft-speech-browser-sdk.IList.OrderByDesc
      - microsoft-speech-browser-sdk.IList.Remove
      - microsoft-speech-browser-sdk.IList.RemoveAt
      - microsoft-speech-browser-sdk.IList.RemoveFirst
      - microsoft-speech-browser-sdk.IList.RemoveLast
      - microsoft-speech-browser-sdk.IList.Select
      - microsoft-speech-browser-sdk.IList.ToArray
      - microsoft-speech-browser-sdk.IList.Where
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: microsoft-speech-browser-sdk.IDisposable
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Add
    name: Add
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function Add(item: TItem)'
      parameters:
        - id: item
          type:
            - TItem
          description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.All
    name: All
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function All(callback: (item: TItem) => boolean)'
      parameters:
        - id: callback
          type:
            - '(item: TItem) => boolean'
          description: ''
      return:
        type:
          - boolean
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Any
    name: Any
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function Any(callback?: (item: TItem, index: number) => boolean)'
      parameters:
        - id: callback
          type:
            - '(item: TItem, index: number) => boolean'
          description: ''
          optional: true
      return:
        type:
          - boolean
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Clear
    name: Clear
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function Clear()
      parameters: []
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Clone
    name: Clone
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function Clone()
      parameters: []
      return:
        type:
          - microsoft-speech-browser-sdk.List<TItem>
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Concat
    name: Concat
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function Concat(list: List<TItem>)'
      parameters:
        - id: list
          type:
            - microsoft-speech-browser-sdk.List<TItem>
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.List<TItem>
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.ConcatArray
    name: ConcatArray
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function ConcatArray(array: TItem[])'
      parameters:
        - id: array
          type:
            - 'TItem[]'
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.List<TItem>
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.First
    name: First
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function First()
      parameters: []
      return:
        type:
          - TItem
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.ForEach
    name: ForEach
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function ForEach(callback: (item: TItem, index: number) => void)'
      parameters:
        - id: callback
          type:
            - '(item: TItem, index: number) => void'
          description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Get
    name: Get
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function Get(itemIndex: number)'
      parameters:
        - id: itemIndex
          type:
            - number
          description: ''
      return:
        type:
          - TItem
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.InsertAt
    name: InsertAt
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function InsertAt(index: number, item: TItem)'
      parameters:
        - id: index
          type:
            - number
          description: ''
        - id: item
          type:
            - TItem
          description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Join
    name: Join
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function Join(seperator?: string)'
      parameters:
        - id: seperator
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - string
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Last
    name: Last
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function Last()
      parameters: []
      return:
        type:
          - TItem
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Length
    name: Length
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function Length()
      parameters: []
      return:
        type:
          - number
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.OnAdded
    name: OnAdded
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function OnAdded(addedCallback: () => void)'
      parameters:
        - id: addedCallback
          type:
            - () => void
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.IDetachable
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.OnDisposed
    name: OnDisposed
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function OnDisposed(disposedCallback: () => void)'
      parameters:
        - id: disposedCallback
          type:
            - () => void
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.IDetachable
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.OnRemoved
    name: OnRemoved
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function OnRemoved(removedCallback: () => void)'
      parameters:
        - id: removedCallback
          type:
            - () => void
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.IDetachable
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.OrderBy
    name: OrderBy
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function OrderBy(compareFn: (a: TItem, b: TItem) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: TItem, b: TItem) => number'
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.List<TItem>
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.OrderByDesc
    name: OrderByDesc
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function OrderByDesc(compareFn: (a: TItem, b: TItem) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: TItem, b: TItem) => number'
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.List<TItem>
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Remove
    name: Remove
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function Remove(index: number, count: number)'
      parameters:
        - id: index
          type:
            - number
          description: ''
        - id: count
          type:
            - number
          description: ''
      return:
        type:
          - 'TItem[]'
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.RemoveAt
    name: RemoveAt
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function RemoveAt(index: number)'
      parameters:
        - id: index
          type:
            - number
          description: ''
      return:
        type:
          - TItem
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.RemoveFirst
    name: RemoveFirst
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function RemoveFirst()
      parameters: []
      return:
        type:
          - TItem
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.RemoveLast
    name: RemoveLast
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function RemoveLast()
      parameters: []
      return:
        type:
          - TItem
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Select
    name: Select
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function Select<T2>(callback: (item: TItem, index: number) => T2)'
      parameters:
        - id: callback
          type:
            - '(item: TItem, index: number) => T2'
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.List<T2>
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.ToArray
    name: ToArray
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function ToArray()
      parameters: []
      return:
        type:
          - 'TItem[]'
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.IList.Where
    name: Where
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function Where(callback: (item: TItem, index: number) => boolean)'
      parameters:
        - id: callback
          type:
            - '(item: TItem, index: number) => boolean'
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.List<TItem>
    package: microsoft-speech-browser-sdk
references:
  - uid: microsoft-speech-browser-sdk.IDisposable
    name: IDisposable
    spec.typeScript:
      - name: IDisposable
        fullName: IDisposable
        uid: microsoft-speech-browser-sdk.IDisposable
  - uid: microsoft-speech-browser-sdk.List<TItem>
    name: List<TItem>
    spec.typeScript:
      - name: List
        fullName: List
        uid: microsoft-speech-browser-sdk.List
      - name: <TItem>
        fullName: <TItem>
  - uid: microsoft-speech-browser-sdk.IDetachable
    name: IDetachable
    spec.typeScript:
      - name: IDetachable
        fullName: IDetachable
        uid: microsoft-speech-browser-sdk.IDetachable
  - uid: microsoft-speech-browser-sdk.List<T2>
    name: List<T2>
    spec.typeScript:
      - name: List
        fullName: List
        uid: microsoft-speech-browser-sdk.List
      - name: <T2>
        fullName: <T2>
