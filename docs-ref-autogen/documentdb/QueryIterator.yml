### YamlMime:UniversalReference
items:
  - uid: documentdb.QueryIterator
    id: documentdb.QueryIterator
    name: QueryIterator
    summary: "Represents a QueryIterator Object, an implmenetation of feed or query response that enables traversal and iterating over the response\rin the Azure Cosmos DB database service."
    fullName: documentdb.QueryIterator
    type: Class
    children:
      - 'documentdb.QueryIterator.#ctor'
      - 'documentdb.QueryIterator#forEach'
      - 'documentdb.QueryIterator#nextItem'
      - 'documentdb.QueryIterator#current'
      - 'documentdb.QueryIterator#hasMoreResults'
      - 'documentdb.QueryIterator#toArray'
      - 'documentdb.QueryIterator#executeNext'
      - 'documentdb.QueryIterator#reset'
    langs:
      - js
  - id: 'documentdb.QueryIterator.#ctor'
    uid: 'documentdb.QueryIterator.#ctor'
    parent: documentdb.QueryIterator
    name: >-
      QueryIterator(documentclient, query, options, fetchFunctions,
      resourceLink)
    fullName: >-
      documentdb.QueryIterator.QueryIterator(documentclient, query, options,
      fetchFunctions, resourceLink)
    summary: "Represents a QueryIterator Object, an implmenetation of feed or query response that enables traversal and iterating over the response\rin the Azure Cosmos DB database service."
    type: Constructor
    syntax:
      parameters:
        - id: documentclient
          type:
            - object
          description: The documentclient object.
        - id: query
          type:
            - undefinedSqlQuerySpec
            - string
          description: A SQL query.
        - id: options
          type:
            - undefinedFeedOptions
          description: Represents the feed options.
        - id: fetchFunctions
          type:
            - undefinedcallback
            - undefinedArray.<callback>
          description: >-
            A function to retrieve each page of data. An array of functions may
            be used to query more than one partition.
        - id: resourceLink
          type:
            - string
          description: >-
            An optional parameter that represents the resourceLink (will be used
            in orderby/top/parallel query)
          optional: true
      content: >-
        new QueryIterator(documentclient, query, options, fetchFunctions,
        resourceLink)
    langs:
      - js
  - uid: 'documentdb.QueryIterator#forEach'
    id: 'documentdb.QueryIterator#forEach'
    parent: documentdb.QueryIterator
    name: forEach(callback)
    summary: Execute a provided function once per feed element.
    fullName: documentdb.QueryIterator.forEach(callback)
    type: Function
    syntax:
      parameters:
        - id: callback
          type:
            - documentdb.callback
          description: "Function to execute for each element. the function takes two parameters error, element.\rNote: the last element the callback will be called on will be undefined.\rIf the callback explicitly returned false, the loop gets stopped."
      content: function forEach(callback)
    langs:
      - js
  - uid: 'documentdb.QueryIterator#nextItem'
    id: 'documentdb.QueryIterator#nextItem'
    parent: documentdb.QueryIterator
    name: nextItem(callback)
    summary: Execute a provided function on the next element in the QueryIterator.
    fullName: documentdb.QueryIterator.nextItem(callback)
    type: Function
    syntax:
      parameters:
        - id: callback
          type:
            - documentdb.callback
          description: >-
            Function to execute for each element. the function takes two
            parameters error, element.
      content: function nextItem(callback)
    langs:
      - js
  - uid: 'documentdb.QueryIterator#current'
    id: 'documentdb.QueryIterator#current'
    parent: documentdb.QueryIterator
    name: current(callback)
    summary: Retrieve the current element on the QueryIterator.
    fullName: documentdb.QueryIterator.current(callback)
    type: Function
    syntax:
      parameters:
        - id: callback
          type:
            - documentdb.callback
          description: >-
            Function to execute for the current element. the function takes two
            parameters error, element.
      content: function current(callback)
    langs:
      - js
  - uid: 'documentdb.QueryIterator#hasMoreResults'
    id: 'documentdb.QueryIterator#hasMoreResults'
    parent: documentdb.QueryIterator
    name: hasMoreResults()
    summary: ''
    fullName: documentdb.QueryIterator.hasMoreResults()
    type: Function
    syntax:
      return:
        type:
          - Boolean
        description: true if there is other elements to process in the QueryIterator.
      content: function hasMoreResults()
    langs:
      - js
  - uid: 'documentdb.QueryIterator#toArray'
    id: 'documentdb.QueryIterator#toArray'
    parent: documentdb.QueryIterator
    name: toArray(callback)
    summary: >-
      Retrieve all the elements of the feed and pass them as an array to a
      function
    fullName: documentdb.QueryIterator.toArray(callback)
    type: Function
    syntax:
      parameters:
        - id: callback
          type:
            - documentdb.callback
          description: >-
            Function execute on the feed response, takes two parameters error,
            resourcesList
      content: function toArray(callback)
    langs:
      - js
  - uid: 'documentdb.QueryIterator#executeNext'
    id: 'documentdb.QueryIterator#executeNext'
    parent: documentdb.QueryIterator
    name: executeNext(callback)
    summary: >-
      Retrieve the next batch of the feed and pass them as an array to a
      function
    fullName: documentdb.QueryIterator.executeNext(callback)
    type: Function
    syntax:
      parameters:
        - id: callback
          type:
            - documentdb.callback
          description: >-
            Function execute on the feed response, takes two parameters error,
            resourcesList
      content: function executeNext(callback)
    langs:
      - js
  - uid: 'documentdb.QueryIterator#reset'
    id: 'documentdb.QueryIterator#reset'
    parent: documentdb.QueryIterator
    name: reset()
    summary: >-
      Reset the QueryIterator to the beginning and clear all the resources
      inside it
    fullName: documentdb.QueryIterator.reset()
    type: Function
    syntax:
      content: function reset()
    langs:
      - js
