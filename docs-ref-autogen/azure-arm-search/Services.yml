### YamlMime:UniversalReference
items:
  - uid: azure-arm-search.Services
    name: Services
    fullName: Services
    children:
      - azure-arm-search.Services.beginCreateOrUpdate
      - azure-arm-search.Services.beginCreateOrUpdate_2
      - azure-arm-search.Services.beginCreateOrUpdate_1
      - azure-arm-search.Services.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-search.Services.checkNameAvailability
      - azure-arm-search.Services.checkNameAvailability_2
      - azure-arm-search.Services.checkNameAvailability_1
      - azure-arm-search.Services.checkNameAvailabilityWithHttpOperationResponse
      - azure-arm-search.Services.createOrUpdate
      - azure-arm-search.Services.createOrUpdate_2
      - azure-arm-search.Services.createOrUpdate_1
      - azure-arm-search.Services.createOrUpdateWithHttpOperationResponse
      - azure-arm-search.Services.deleteMethod
      - azure-arm-search.Services.deleteMethod_2
      - azure-arm-search.Services.deleteMethod_1
      - azure-arm-search.Services.deleteMethodWithHttpOperationResponse
      - azure-arm-search.Services.get
      - azure-arm-search.Services.get_2
      - azure-arm-search.Services.get_1
      - azure-arm-search.Services.getWithHttpOperationResponse
      - azure-arm-search.Services.listByResourceGroup
      - azure-arm-search.Services.listByResourceGroup_2
      - azure-arm-search.Services.listByResourceGroup_1
      - azure-arm-search.Services.listByResourceGroupWithHttpOperationResponse
      - azure-arm-search.Services.update
      - azure-arm-search.Services.update_2
      - azure-arm-search.Services.update_1
      - azure-arm-search.Services.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-search
  - uid: azure-arm-search.Services.beginCreateOrUpdate
    name: 'beginCreateOrUpdate(string, string, SearchService, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a Search service in the given resource group. If the

      Search service already exists, all properties will be updated with the
      given

      values.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        searchServiceName: string, service: SearchService, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: >
            The name of the Azure Search service to

            create or update. Search service names must only contain lowercase
            letters,

            digits or dashes, cannot use dash as the first two or last one
            characters,

            cannot contain consecutive dashes, and must be between 2 and 60
            characters

            in length. Search service names must be globally unique since they
            are part

            of the service URI (https://<name>.search.windows.net). You cannot
            change

            the service name after the service is created.
        - id: service
          type:
            - azure-arm-search.SearchService
          description: |
            The definition of the Search service to create or
            update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.beginCreateOrUpdate_2
    name: >-
      beginCreateOrUpdate(string, string, SearchService, Object,
      ServiceCallback<SearchService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a Search service in the given resource group. If the

      Search service already exists, all properties will be updated with the
      given

      values.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        searchServiceName: string, service: SearchService, options: Object,
        callback: ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: searchServiceName
          type:
            - string
          description: ''
        - id: service
          type:
            - azure-arm-search.SearchService
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.SearchService>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.beginCreateOrUpdate_1
    name: >-
      beginCreateOrUpdate(string, string, SearchService,
      ServiceCallback<SearchService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a Search service in the given resource group. If the

      Search service already exists, all properties will be updated with the
      given

      values.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        searchServiceName: string, service: SearchService, callback:
        ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: searchServiceName
          type:
            - string
          description: ''
        - id: service
          type:
            - azure-arm-search.SearchService
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.SearchService>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.beginCreateOrUpdateWithHttpOperationResponse
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string,
      SearchService, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a Search service in the given resource group. If the

      Search service already exists, all properties will be updated with the
      given

      values.
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, searchServiceName: string, service: SearchService, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: >
            The name of the Azure Search service to

            create or update. Search service names must only contain lowercase
            letters,

            digits or dashes, cannot use dash as the first two or last one
            characters,

            cannot contain consecutive dashes, and must be between 2 and 60
            characters

            in length. Search service names must be globally unique since they
            are part

            of the service URI (https://<name>.search.windows.net). You cannot
            change

            the service name after the service is created.
        - id: service
          type:
            - azure-arm-search.SearchService
          description: |
            The definition of the Search service to create or
            update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-search.SearchService>>
    package: azure-arm-search
  - uid: azure-arm-search.Services.checkNameAvailability
    name: 'checkNameAvailability(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Checks whether or not the given Search service name is available for use.
      Search service names must be globally unique since they are part of the
      service URI (https://<name>.search.windows.net).
    syntax:
      content: 'function checkNameAvailability(name: string, options?: Object)'
      parameters:
        - id: name
          type:
            - string
          description: >
            The Search service name to validate. Search service

            names must only contain lowercase letters, digits or dashes, cannot
            use dash

            as the first two or last one characters, cannot contain consecutive
            dashes,

            and must be between 2 and 60 characters in length.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-search.CheckNameAvailabilityOutput>
    package: azure-arm-search
  - uid: azure-arm-search.Services.checkNameAvailability_2
    name: >-
      checkNameAvailability(string, Object,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Checks whether or not the given Search service name is available for use.
      Search service names must be globally unique since they are part of the
      service URI (https://<name>.search.windows.net).
    syntax:
      content: >-
        function checkNameAvailability(name: string, options: Object, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.CheckNameAvailabilityOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.CheckNameAvailabilityOutput>
    package: azure-arm-search
  - uid: azure-arm-search.Services.checkNameAvailability_1
    name: >-
      checkNameAvailability(string,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Checks whether or not the given Search service name is available for use.
      Search service names must be globally unique since they are part of the
      service URI (https://<name>.search.windows.net).
    syntax:
      content: >-
        function checkNameAvailability(name: string, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.CheckNameAvailabilityOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.CheckNameAvailabilityOutput>
    package: azure-arm-search
  - uid: azure-arm-search.Services.checkNameAvailabilityWithHttpOperationResponse
    name: 'checkNameAvailabilityWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Checks whether or not the given Search service name is available for use.
      Search service names must be globally unique since they are part of the
      service URI (https://<name>.search.windows.net).
    syntax:
      content: >-
        function checkNameAvailabilityWithHttpOperationResponse(name: string,
        options?: Object)
      parameters:
        - id: name
          type:
            - string
          description: >
            The Search service name to validate. Search service

            names must only contain lowercase letters, digits or dashes, cannot
            use dash

            as the first two or last one characters, cannot contain consecutive
            dashes,

            and must be between 2 and 60 characters in length.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-search.CheckNameAvailabilityOutput>>
    package: azure-arm-search
  - uid: azure-arm-search.Services.createOrUpdate
    name: 'createOrUpdate(string, string, SearchService, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a Search service in the given resource group. If the

      Search service already exists, all properties will be updated with the
      given

      values.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, searchServiceName:
        string, service: SearchService, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: >
            The name of the Azure Search service to

            create or update. Search service names must only contain lowercase
            letters,

            digits or dashes, cannot use dash as the first two or last one
            characters,

            cannot contain consecutive dashes, and must be between 2 and 60
            characters

            in length. Search service names must be globally unique since they
            are part

            of the service URI (https://<name>.search.windows.net). You cannot
            change

            the service name after the service is created.
        - id: service
          type:
            - azure-arm-search.SearchService
          description: |
            The definition of the Search service to create or
            update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, SearchService, Object,
      ServiceCallback<SearchService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a Search service in the given resource group. If the

      Search service already exists, all properties will be updated with the
      given

      values.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, searchServiceName:
        string, service: SearchService, options: Object, callback:
        ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: searchServiceName
          type:
            - string
          description: ''
        - id: service
          type:
            - azure-arm-search.SearchService
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.SearchService>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, SearchService,
      ServiceCallback<SearchService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a Search service in the given resource group. If the

      Search service already exists, all properties will be updated with the
      given

      values.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, searchServiceName:
        string, service: SearchService, callback:
        ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: searchServiceName
          type:
            - string
          description: ''
        - id: service
          type:
            - azure-arm-search.SearchService
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.SearchService>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, SearchService,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates a Search service in the given resource group. If the

      Search service already exists, all properties will be updated with the
      given

      values.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, searchServiceName: string, service: SearchService, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: >
            The name of the Azure Search service to

            create or update. Search service names must only contain lowercase
            letters,

            digits or dashes, cannot use dash as the first two or last one
            characters,

            cannot contain consecutive dashes, and must be between 2 and 60
            characters

            in length. Search service names must be globally unique since they
            are part

            of the service URI (https://<name>.search.windows.net). You cannot
            change

            the service name after the service is created.
        - id: service
          type:
            - azure-arm-search.SearchService
          description: |
            The definition of the Search service to create or
            update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-search.SearchService>>
    package: azure-arm-search
  - uid: azure-arm-search.Services.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a Search service in the given resource group, along with its
      associated resources.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, searchServiceName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |
            The name of the Azure Search service
            associated with the specified resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-search
  - uid: azure-arm-search.Services.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a Search service in the given resource group, along with its
      associated resources.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, searchServiceName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: searchServiceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-search
  - uid: azure-arm-search.Services.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a Search service in the given resource group, along with its
      associated resources.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, searchServiceName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: searchServiceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-search
  - uid: azure-arm-search.Services.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a Search service in the given resource group, along with its
      associated resources.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, searchServiceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |
            The name of the Azure Search service
            associated with the specified resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-search
  - uid: azure-arm-search.Services.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Search service with the given name in the given resource group.
    syntax:
      content: >-
        function get(resourceGroupName: string, searchServiceName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |
            The name of the Azure Search service
            associated with the specified resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.get_2
    name: 'get(string, string, Object, ServiceCallback<SearchService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Search service with the given name in the given resource group.
    syntax:
      content: >-
        function get(resourceGroupName: string, searchServiceName: string,
        options: Object, callback: ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: searchServiceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.SearchService>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.get_1
    name: 'get(string, string, ServiceCallback<SearchService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Search service with the given name in the given resource group.
    syntax:
      content: >-
        function get(resourceGroupName: string, searchServiceName: string,
        callback: ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: searchServiceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.SearchService>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the Search service with the given name in the given resource group.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        searchServiceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |
            The name of the Azure Search service
            associated with the specified resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-search.SearchService>>
    package: azure-arm-search
  - uid: azure-arm-search.Services.listByResourceGroup
    name: 'listByResourceGroup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all Search services in the given resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-search.SearchServiceListResult>
    package: azure-arm-search
  - uid: azure-arm-search.Services.listByResourceGroup_2
    name: >-
      listByResourceGroup(string, Object,
      ServiceCallback<SearchServiceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all Search services in the given resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options: Object,
        callback: ServiceCallback<SearchServiceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.SearchServiceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.SearchServiceListResult>
    package: azure-arm-search
  - uid: azure-arm-search.Services.listByResourceGroup_1
    name: 'listByResourceGroup(string, ServiceCallback<SearchServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all Search services in the given resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<SearchServiceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.SearchServiceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.SearchServiceListResult>
    package: azure-arm-search
  - uid: azure-arm-search.Services.listByResourceGroupWithHttpOperationResponse
    name: 'listByResourceGroupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all Search services in the given resource group.
    syntax:
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-search.SearchServiceListResult>>
    package: azure-arm-search
  - uid: azure-arm-search.Services.update
    name: 'update(string, string, SearchService, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing Search service in the given resource group.
    syntax:
      content: >-
        function update(resourceGroupName: string, searchServiceName: string,
        service: SearchService, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |
            The name of the Azure Search service to
            update.
        - id: service
          type:
            - azure-arm-search.SearchService
          description: |
            The definition of the Search service to update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.update_2
    name: >-
      update(string, string, SearchService, Object,
      ServiceCallback<SearchService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing Search service in the given resource group.
    syntax:
      content: >-
        function update(resourceGroupName: string, searchServiceName: string,
        service: SearchService, options: Object, callback:
        ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: searchServiceName
          type:
            - string
          description: ''
        - id: service
          type:
            - azure-arm-search.SearchService
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.SearchService>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.update_1
    name: 'update(string, string, SearchService, ServiceCallback<SearchService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing Search service in the given resource group.
    syntax:
      content: >-
        function update(resourceGroupName: string, searchServiceName: string,
        service: SearchService, callback: ServiceCallback<SearchService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: searchServiceName
          type:
            - string
          description: ''
        - id: service
          type:
            - azure-arm-search.SearchService
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-search.SearchService>
          description: ''
      return:
        type:
          - Promise<azure-arm-search.SearchService>
    package: azure-arm-search
  - uid: azure-arm-search.Services.updateWithHttpOperationResponse
    name: 'updateWithHttpOperationResponse(string, string, SearchService, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing Search service in the given resource group.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        searchServiceName: string, service: SearchService, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group within the

            current subscription. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: searchServiceName
          type:
            - string
          description: |
            The name of the Azure Search service to
            update.
        - id: service
          type:
            - azure-arm-search.SearchService
          description: |
            The definition of the Search service to update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-search.SearchService>>
    package: azure-arm-search
references:
  - uid: azure-arm-search.SearchService
    name: SearchService
    spec.typeScript:
      - name: SearchService
        fullName: SearchService
        uid: azure-arm-search.SearchService
  - uid: Promise<azure-arm-search.SearchService>
    name: SearchService>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchService
        fullName: SearchService
        uid: azure-arm-search.SearchService
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-search.SearchService>
    name: SearchService>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SearchService
        fullName: SearchService
        uid: azure-arm-search.SearchService
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-search.SearchService>>
    name: SearchService>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SearchService
        fullName: SearchService
        uid: azure-arm-search.SearchService
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-search.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: azure-arm-search.CheckNameAvailabilityOutput
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-search.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: azure-arm-search.CheckNameAvailabilityOutput
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-search.CheckNameAvailabilityOutput>>
    name: CheckNameAvailabilityOutput>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: azure-arm-search.CheckNameAvailabilityOutput
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-search.SearchServiceListResult>
    name: SearchServiceListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SearchServiceListResult
        fullName: SearchServiceListResult
        uid: azure-arm-search.SearchServiceListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-search.SearchServiceListResult>
    name: SearchServiceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SearchServiceListResult
        fullName: SearchServiceListResult
        uid: azure-arm-search.SearchServiceListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-search.SearchServiceListResult>>
    name: SearchServiceListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SearchServiceListResult
        fullName: SearchServiceListResult
        uid: azure-arm-search.SearchServiceListResult
      - name: '>>'
        fullName: '>>'
