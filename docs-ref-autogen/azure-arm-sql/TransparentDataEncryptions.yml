### YamlMime:UniversalReference
items:
  - uid: azure-arm-sql.TransparentDataEncryptions
    name: TransparentDataEncryptions
    fullName: TransparentDataEncryptions
    children:
      - azure-arm-sql.TransparentDataEncryptions.createOrUpdate
      - azure-arm-sql.TransparentDataEncryptions.createOrUpdate_2
      - azure-arm-sql.TransparentDataEncryptions.createOrUpdate_1
      - >-
        azure-arm-sql.TransparentDataEncryptions.createOrUpdateWithHttpOperationResponse
      - azure-arm-sql.TransparentDataEncryptions.get
      - azure-arm-sql.TransparentDataEncryptions.get_2
      - azure-arm-sql.TransparentDataEncryptions.get_1
      - azure-arm-sql.TransparentDataEncryptions.getWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-sql
  - uid: azure-arm-sql.TransparentDataEncryptions.createOrUpdate
    name: 'createOrUpdate(string, string, string, TransparentDataEncryption, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a database's transparent data encryption configuration.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: TransparentDataEncryption, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: databaseName
          type:
            - string
          description: |
            The name of the database for which setting the
            transparent data encryption applies.
        - id: parameters
          type:
            - azure-arm-sql.TransparentDataEncryption
          description: |
            The required parameters for creating or updating
            transparent data encryption.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sql.TransparentDataEncryption>
    package: azure-arm-sql
  - uid: azure-arm-sql.TransparentDataEncryptions.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, string, TransparentDataEncryption, Object,
      ServiceCallback<TransparentDataEncryption>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a database's transparent data encryption configuration.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: TransparentDataEncryption, options:
        Object, callback: ServiceCallback<TransparentDataEncryption>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: databaseName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sql.TransparentDataEncryption
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sql.TransparentDataEncryption>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.TransparentDataEncryption>
    package: azure-arm-sql
  - uid: azure-arm-sql.TransparentDataEncryptions.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, string, TransparentDataEncryption,
      ServiceCallback<TransparentDataEncryption>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a database's transparent data encryption configuration.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: TransparentDataEncryption, callback:
        ServiceCallback<TransparentDataEncryption>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: databaseName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-sql.TransparentDataEncryption
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sql.TransparentDataEncryption>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.TransparentDataEncryption>
    package: azure-arm-sql
  - uid: >-
      azure-arm-sql.TransparentDataEncryptions.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, string,
      TransparentDataEncryption, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a database's transparent data encryption configuration.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, serverName: string, databaseName: string, parameters:
        TransparentDataEncryption, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: databaseName
          type:
            - string
          description: |
            The name of the database for which setting the
            transparent data encryption applies.
        - id: parameters
          type:
            - azure-arm-sql.TransparentDataEncryption
          description: |
            The required parameters for creating or updating
            transparent data encryption.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sql.TransparentDataEncryption>>
    package: azure-arm-sql
  - uid: azure-arm-sql.TransparentDataEncryptions.get
    name: 'get(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a database's transparent data encryption configuration.
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: databaseName
          type:
            - string
          description: |
            The name of the database for which the
            transparent data encryption applies.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-sql.TransparentDataEncryption>
    package: azure-arm-sql
  - uid: azure-arm-sql.TransparentDataEncryptions.get_2
    name: >-
      get(string, string, string, Object,
      ServiceCallback<TransparentDataEncryption>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a database's transparent data encryption configuration.
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options: Object, callback:
        ServiceCallback<TransparentDataEncryption>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: databaseName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sql.TransparentDataEncryption>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.TransparentDataEncryption>
    package: azure-arm-sql
  - uid: azure-arm-sql.TransparentDataEncryptions.get_1
    name: 'get(string, string, string, ServiceCallback<TransparentDataEncryption>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a database's transparent data encryption configuration.
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, callback:
        ServiceCallback<TransparentDataEncryption>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serverName
          type:
            - string
          description: ''
        - id: databaseName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-sql.TransparentDataEncryption>
          description: ''
      return:
        type:
          - Promise<azure-arm-sql.TransparentDataEncryption>
    package: azure-arm-sql
  - uid: azure-arm-sql.TransparentDataEncryptions.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a database's transparent data encryption configuration.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        serverName: string, databaseName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >
            The name of the resource group that

            contains the resource. You can obtain this value from the Azure
            Resource

            Manager API or the portal.
        - id: serverName
          type:
            - string
          description: |
            The name of the server.
        - id: databaseName
          type:
            - string
          description: |
            The name of the database for which the
            transparent data encryption applies.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-sql.TransparentDataEncryption>>
    package: azure-arm-sql
references:
  - uid: azure-arm-sql.TransparentDataEncryption
    name: TransparentDataEncryption
    spec.typeScript:
      - name: TransparentDataEncryption
        fullName: TransparentDataEncryption
        uid: azure-arm-sql.TransparentDataEncryption
  - uid: Promise<azure-arm-sql.TransparentDataEncryption>
    name: TransparentDataEncryption>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TransparentDataEncryption
        fullName: TransparentDataEncryption
        uid: azure-arm-sql.TransparentDataEncryption
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-sql.TransparentDataEncryption>
    name: TransparentDataEncryption>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TransparentDataEncryption
        fullName: TransparentDataEncryption
        uid: azure-arm-sql.TransparentDataEncryption
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-sql.TransparentDataEncryption>>
    name: TransparentDataEncryption>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: TransparentDataEncryption
        fullName: TransparentDataEncryption
        uid: azure-arm-sql.TransparentDataEncryption
      - name: '>>'
        fullName: '>>'
