### YamlMime:UniversalReference
items:
  - uid: botbuilder-core-extensions.UserState
    id: botbuilder-core-extensions.UserState
    name: UserState
    summary: ":package: **botbuilder-core-extensions**\r\rReads and writes user state for your bot to storage. Each user your bot communicates with will\rhave its own isolated storage object that can be used to persist information about the user\racross all of the conversation you have with that user.\r\rSince the `UserState` class derives from `BotState` it can be used as middleware to automatically\rread and write the bots user state for each turn. And it also means it can be passed to a\r`BotStateSet` middleware instance to be managed in parallel with other state providers.\r\r**Usage Example**\r\r```JavaScript\rconst { UserState, MemoryStorage } = require('botbuilder');\r\rconst userState = new UserState(new MemoryStorage());\radapter.use(userState);\r\rserver.post('/api/messages', (req, res) => {\r   adapter.processActivity(req, res, async (context) => {\r      // Get loaded user state\r      const user = userState.get(context);\r\r      // ... route activity ...\r\r   });\r});\r```"
    fullName: botbuilder-core-extensions.UserState
    source:
      id: botbuilder-core-extensions.UserState
      path: libraries\botbuilder-core-extensions\lib\userState.js
      startLine: 36
      remote:
        branch: master
        path: libraries\botbuilder-core-extensions\lib\userState.js
        repo: 'https://github.com/Microsoft/botbuilder-js.git'
    type: Class
    children:
      - 'botbuilder-core-extensions.UserState.#ctor'
      - 'botbuilder-core-extensions.UserState#getStorageKey'
    langs:
      - js
  - id: 'botbuilder-core-extensions.UserState.#ctor'
    uid: 'botbuilder-core-extensions.UserState.#ctor'
    parent: botbuilder-core-extensions.UserState
    name: 'UserState(storage, namespace)'
    fullName: 'botbuilder-core-extensions.UserState.UserState(storage, namespace)'
    summary: Creates a new UserState instance.
    type: Constructor
    syntax:
      parameters:
        - id: storage
          description: Storage provider to persist user state to.
        - id: namespace
          description: >-
            (Optional) namespace to append to storage keys. Defaults to an empty
            string.
      content: 'new UserState(storage, namespace)'
    langs:
      - js
  - uid: 'botbuilder-core-extensions.UserState#getStorageKey'
    id: 'botbuilder-core-extensions.UserState#getStorageKey'
    parent: botbuilder-core-extensions.UserState
    name: getStorageKey(context)
    summary: Returns the storage key for the current user state.
    fullName: botbuilder-core-extensions.UserState.getStorageKey(context)
    type: Function
    syntax:
      parameters:
        - id: context
          description: Context for current turn of conversation with the user.
      content: function getStorageKey(context)
    langs:
      - js
