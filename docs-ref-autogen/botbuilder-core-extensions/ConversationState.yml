### YamlMime:UniversalReference
items:
  - uid: botbuilder-core-extensions.ConversationState
    id: botbuilder-core-extensions.ConversationState
    name: ConversationState
    summary: ":package: **botbuilder-core-extensions**\r\rReads and writes conversation state for your bot to storage. Each conversation your bot has\rwith a user or group will have its own isolated storage object that can be used to persist\rconversation tracking information between turns of the conversation.  This state information\rcan be reset at any point by calling [clear()](#clear).\r\rSince the `ConversationState` class derives from `BotState` it can be used as middleware to\rautomatically read and write the bots conversation state for each turn. And it also means it\rcan be passed to a `BotStateSet` middleware instance to be managed in parallel with other state\rproviders.\r\r**Usage Example**\r\r```JavaScript\rconst { ConversationState, MemoryStorage } = require('botbuilder');\r\rconst conversationState = new ConversationState(new MemoryStorage());\radapter.use(conversationState);\r\rserver.post('/api/messages', (req, res) => {\r   adapter.processActivity(req, res, async (context) => {\r      // Get loaded conversation state\r      const convo = conversationState.get(context);\r\r      // ... route activity ...\r\r   });\r});\r```"
    fullName: botbuilder-core-extensions.ConversationState
    source:
      id: botbuilder-core-extensions.ConversationState
      path: libraries\botbuilder-core-extensions\lib\conversationState.js
      startLine: 38
      remote:
        branch: master
        path: libraries\botbuilder-core-extensions\lib\conversationState.js
        repo: 'https://github.com/Microsoft/botbuilder-js.git'
    type: Class
    children:
      - 'botbuilder-core-extensions.ConversationState.#ctor'
      - 'botbuilder-core-extensions.ConversationState#getStorageKey'
    langs:
      - js
  - id: 'botbuilder-core-extensions.ConversationState.#ctor'
    uid: 'botbuilder-core-extensions.ConversationState.#ctor'
    parent: botbuilder-core-extensions.ConversationState
    name: 'ConversationState(storage, namespace)'
    fullName: >-
      botbuilder-core-extensions.ConversationState.ConversationState(storage,
      namespace)
    summary: Creates a new ConversationState instance.
    type: Constructor
    syntax:
      parameters:
        - id: storage
          description: Storage provider to persist conversation state to.
        - id: namespace
          description: >-
            (Optional) namespace to append to storage keys. Defaults to an empty
            string.
      content: 'new ConversationState(storage, namespace)'
    langs:
      - js
  - uid: 'botbuilder-core-extensions.ConversationState#getStorageKey'
    id: 'botbuilder-core-extensions.ConversationState#getStorageKey'
    parent: botbuilder-core-extensions.ConversationState
    name: getStorageKey(context)
    summary: Returns the storage key for the current conversation state.
    fullName: botbuilder-core-extensions.ConversationState.getStorageKey(context)
    type: Function
    syntax:
      parameters:
        - id: context
          description: Context for current turn of conversation with the user.
      content: function getStorageKey(context)
    langs:
      - js
