### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceListOperations'
    name: FaceListOperations
    fullName: FaceListOperations
    children:
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.FaceListOperations.create_2'
      - '@azure/cognitiveservices-face.FaceListOperations.create'
      - '@azure/cognitiveservices-face.FaceListOperations.create_1'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace_2'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace_1'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.FaceListOperations.constructor'
      - '@azure/cognitiveservices-face.FaceListOperations.get_2'
      - '@azure/cognitiveservices-face.FaceListOperations.get'
      - '@azure/cognitiveservices-face.FaceListOperations.get_1'
      - '@azure/cognitiveservices-face.FaceListOperations.list_2'
      - '@azure/cognitiveservices-face.FaceListOperations.list'
      - '@azure/cognitiveservices-face.FaceListOperations.list_1'
      - '@azure/cognitiveservices-face.FaceListOperations.update_2'
      - '@azure/cognitiveservices-face.FaceListOperations.update'
      - '@azure/cognitiveservices-face.FaceListOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a FaceListOperations.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_2'
    name: >-
      addFaceFromStream(string, msRest.HttpRequestBody,
      FaceListAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromStream(faceListId: string, image:
        msRest.HttpRequestBody, options:
        FaceListAddFaceFromStreamOptionalParams, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: An image stream.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream'
    name: >-
      addFaceFromStream(string, msRest.HttpRequestBody,
      Models.FaceListAddFaceFromStreamOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a face to a face list. The input face is specified as an image with a
      targetFace rectangle.

      It returns a persistedFaceId representing the added face, and
      persistedFaceId will not expire.
    syntax:
      content: >-
        function addFaceFromStream(faceListId: string, image:
        msRest.HttpRequestBody, options?:
        Models.FaceListAddFaceFromStreamOptionalParams)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: An image stream.
        - id: options
          type:
            - Models.FaceListAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_1'
    name: >-
      addFaceFromStream(string, msRest.HttpRequestBody,
      ServiceCallback<PersistedFace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromStream(faceListId: string, image:
        msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: An image stream.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_2'
    name: >-
      addFaceFromUrl(string, string, FaceListAddFaceFromUrlOptionalParams,
      ServiceCallback<PersistedFace>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromUrl(faceListId: string, url: string, options:
        FaceListAddFaceFromUrlOptionalParams, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: url
          type:
            - string
          description: Publicly reachable URL of an image
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl'
    name: >-
      addFaceFromUrl(string, string,
      Models.FaceListAddFaceFromUrlOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a face to a face list. The input face is specified as an image with a
      targetFace rectangle.

      It returns a persistedFaceId representing the added face, and
      persistedFaceId will not expire.
    syntax:
      content: >-
        function addFaceFromUrl(faceListId: string, url: string, options?:
        Models.FaceListAddFaceFromUrlOptionalParams)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: url
          type:
            - string
          description: Publicly reachable URL of an image
        - id: options
          type:
            - Models.FaceListAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addFaceFromUrl(faceListId: string, url: string, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: url
          type:
            - string
          description: Publicly reachable URL of an image
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            The callback
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create_2'
    name: 'create(string, FaceListCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(faceListId: string, options:
        FaceListCreateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create'
    name: 'create(string, Models.FaceListCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create an empty face list with user-specified faceListId, name, an
      optional userData and

      recognitionModel. Up to 64 face lists are allowed in one subscription.

      <br /> Face list is a list of faces, up to 1,000 faces, and used by [Face
      - Find

      Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).

      <br /> After creation, user should use [FaceList - Add

      Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395250)
      to import the

      faces. Faces are stored on server until [FaceList -

      Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f)
      is called.

      <br /> Find Similar is used for scenario like finding celebrity-like
      faces, similar face

      filtering, or as a light way face identification. But if the actual use is
      to identify person,

      please use

      [PersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244)
      /

      [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d)

      and [Face -

      Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).

      <br /> Please consider

      [LargeFaceList](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc)

      when the face number is large. It can support up to 1,000,000 faces.
      'recognitionModel' should

      be specified to associate with this face list. The default value for
      'recognitionModel' is

      'recognition_01', if the latest model needed, please explicitly specify
      the model you need in

      this parameter. New faces that are added to an existing face list will use
      the recognition model

      that's already associated with the collection. Existing face features in a
      face list can't be

      updated to features extracted by another version of recognition model.
    syntax:
      content: >-
        function create(faceListId: string, options?:
        Models.FaceListCreateOptionalParams)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: options
          type:
            - Models.FaceListCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace'
    name: 'deleteFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing face from a face list (given by a persistedFaceId and a
      faceListId).

      Persisted image related to the face will also be deleted.
    syntax:
      content: >-
        function deleteFace(faceListId: string, persistedFaceId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_2'
    name: 'deleteFace(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteFace(faceListId: string, persistedFaceId: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_1'
    name: 'deleteFace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteFace(faceListId: string, persistedFaceId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: persistedFaceId
          type:
            - string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete an existing face list according to faceListId. Persisted face
      images in the face list

      will also be deleted.
    syntax:
      content: >-
        function deleteMethod(faceListId: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(faceListId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(faceListId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.constructor'
    name: FaceListOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a FaceListOperations.
    syntax:
      content: 'new FaceListOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get_2'
    name: 'get(string, FaceListGetOptionalParams, ServiceCallback<FaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(faceListId: string, options: FaceListGetOptionalParams,
        callback: ServiceCallback<FaceList>)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.FaceList>
          description: |
            The callback
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get'
    name: 'get(string, Models.FaceListGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieve a face list’s faceListId, name, userData, recognitionModel and
      faces in the face list.
    syntax:
      content: >-
        function get(faceListId: string, options?:
        Models.FaceListGetOptionalParams)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: options
          type:
            - Models.FaceListGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get_1'
    name: 'get(string, ServiceCallback<FaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(faceListId: string, callback: ServiceCallback<FaceList>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.FaceList>
          description: |
            The callback
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list_2'
    name: 'list(FaceListListOptionalParams, ServiceCallback<FaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: FaceListListOptionalParams, callback:
        ServiceCallback<FaceList[]>)
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
          description: |
            The callback
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list'
    name: list(Models.FaceListListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      List face lists’ faceListId, name, userData and recognitionModel. <br />

      To get face information inside faceList use [FaceList -

      Get](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524c)
    syntax:
      content: 'function list(options?: Models.FaceListListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.FaceListListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list_1'
    name: 'list(ServiceCallback<FaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<FaceList[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
          description: |
            The callback
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update_2'
    name: 'update(string, FaceListUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(faceListId: string, options:
        FaceListUpdateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update'
    name: 'update(string, Models.FaceListUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update information of a face list.
    syntax:
      content: >-
        function update(faceListId: string, options?:
        Models.FaceListUpdateOptionalParams)
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: options
          type:
            - Models.FaceListUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: Id referencing a particular face list.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
    name: FaceListAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: FaceListAddFaceFromStreamOptionalParams
        fullName: FaceListAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
    name: FaceListAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: FaceListAddFaceFromUrlOptionalParams
        fullName: FaceListAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
    name: FaceListCreateOptionalParams
    spec.typeScript:
      - name: FaceListCreateOptionalParams
        fullName: FaceListCreateOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.FaceList>
    name: FaceList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FaceList
        fullName: FaceList
        uid: '@azure/cognitiveservices-face.FaceList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceListGetOptionalParams'
    name: FaceListGetOptionalParams
    spec.typeScript:
      - name: FaceListGetOptionalParams
        fullName: FaceListGetOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListGetOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
    name: 'FaceList[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FaceList
        fullName: FaceList
        uid: '@azure/cognitiveservices-face.FaceList'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceListListOptionalParams'
    name: FaceListListOptionalParams
    spec.typeScript:
      - name: FaceListListOptionalParams
        fullName: FaceListListOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListListOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'
    name: FaceListUpdateOptionalParams
    spec.typeScript:
      - name: FaceListUpdateOptionalParams
        fullName: FaceListUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'
