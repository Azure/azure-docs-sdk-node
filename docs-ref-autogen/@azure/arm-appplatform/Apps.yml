### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-appplatform.Apps'
    name: Apps
    fullName: Apps
    children:
      - '@azure/arm-appplatform.Apps.constructor'
      - '@azure/arm-appplatform.Apps.beginCreateOrUpdate'
      - '@azure/arm-appplatform.Apps.beginDeleteMethod'
      - '@azure/arm-appplatform.Apps.beginUpdate'
      - '@azure/arm-appplatform.Apps.createOrUpdate'
      - '@azure/arm-appplatform.Apps.deleteMethod'
      - '@azure/arm-appplatform.Apps.get_2'
      - '@azure/arm-appplatform.Apps.get'
      - '@azure/arm-appplatform.Apps.get_1'
      - '@azure/arm-appplatform.Apps.getResourceUploadUrl'
      - '@azure/arm-appplatform.Apps.getResourceUploadUrl_2'
      - '@azure/arm-appplatform.Apps.getResourceUploadUrl_1'
      - '@azure/arm-appplatform.Apps.list'
      - '@azure/arm-appplatform.Apps.list_2'
      - '@azure/arm-appplatform.Apps.list_1'
      - '@azure/arm-appplatform.Apps.listNext'
      - '@azure/arm-appplatform.Apps.listNext_2'
      - '@azure/arm-appplatform.Apps.listNext_1'
      - '@azure/arm-appplatform.Apps.update'
      - '@azure/arm-appplatform.Apps.validateDomain'
      - '@azure/arm-appplatform.Apps.validateDomain_2'
      - '@azure/arm-appplatform.Apps.validateDomain_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Apps.
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.constructor'
    name: Apps(AppPlatformManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Apps.
    syntax:
      content: 'new Apps(client: AppPlatformManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-appplatform.AppPlatformManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string, AppResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a new App or update an exiting App.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serviceName:
        string, appName: string, appResource: AppResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: appResource
          type:
            - '@azure/arm-appplatform.AppResource'
          description: Parameters for the create or update operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Operation to delete an App.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, serviceName:
        string, appName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.beginUpdate'
    name: >-
      beginUpdate(string, string, string, AppResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Operation to update an exiting App.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, serviceName: string,
        appName: string, appResource: AppResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: appResource
          type:
            - '@azure/arm-appplatform.AppResource'
          description: Parameters for the update operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, AppResource,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a new App or update an exiting App.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        appName: string, appResource: AppResource, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: appResource
          type:
            - '@azure/arm-appplatform.AppResource'
          description: Parameters for the create or update operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppsCreateOrUpdateResponse>
        description: Promise<Models.AppsCreateOrUpdateResponse>
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Operation to delete an App.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        appName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.get_2'
    name: >-
      get(string, string, string, AppsGetOptionalParams,
      ServiceCallback<AppResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, appName:
        string, options: AppsGetOptionalParams, callback:
        ServiceCallback<AppResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: options
          type:
            - '@azure/arm-appplatform.AppsGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appplatform.AppResource>
          description: |
            The callback
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.get'
    name: 'get(string, string, string, Models.AppsGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get an App and its properties.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, appName:
        string, options?: Models.AppsGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: options
          type:
            - Models.AppsGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppsGetResponse>
        description: Promise<Models.AppsGetResponse>
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.get_1'
    name: 'get(string, string, string, ServiceCallback<AppResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, appName:
        string, callback: ServiceCallback<AppResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appplatform.AppResource>
          description: |
            The callback
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.getResourceUploadUrl'
    name: 'getResourceUploadUrl(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get an resource upload URL for an App, which may be artifacts or source
      archive.
    syntax:
      content: >-
        function getResourceUploadUrl(resourceGroupName: string, serviceName:
        string, appName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppsGetResourceUploadUrlResponse>
        description: Promise<Models.AppsGetResourceUploadUrlResponse>
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.getResourceUploadUrl_2'
    name: >-
      getResourceUploadUrl(string, string, string, RequestOptionsBase,
      ServiceCallback<ResourceUploadDefinition>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getResourceUploadUrl(resourceGroupName: string, serviceName:
        string, appName: string, options: RequestOptionsBase, callback:
        ServiceCallback<ResourceUploadDefinition>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appplatform.ResourceUploadDefinition>
          description: |
            The callback
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.getResourceUploadUrl_1'
    name: >-
      getResourceUploadUrl(string, string, string,
      ServiceCallback<ResourceUploadDefinition>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getResourceUploadUrl(resourceGroupName: string, serviceName:
        string, appName: string, callback:
        ServiceCallback<ResourceUploadDefinition>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appplatform.ResourceUploadDefinition>
          description: |
            The callback
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.list'
    name: 'list(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Handles requests to list all resources in a Service.
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppsListResponse>
        description: Promise<Models.AppsListResponse>
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.list_2'
    name: >-
      list(string, string, RequestOptionsBase,
      ServiceCallback<AppResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<AppResourceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appplatform.AppResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.list_1'
    name: 'list(string, string, ServiceCallback<AppResourceCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, callback:
        ServiceCallback<AppResourceCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appplatform.AppResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Handles requests to list all resources in a Service.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppsListNextResponse>
        description: Promise<Models.AppsListNextResponse>
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<AppResourceCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<AppResourceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appplatform.AppResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.listNext_1'
    name: 'listNext(string, ServiceCallback<AppResourceCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<AppResourceCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appplatform.AppResourceCollection>
          description: |
            The callback
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.update'
    name: 'update(string, string, string, AppResource, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Operation to update an exiting App.
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, appName:
        string, appResource: AppResource, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: appResource
          type:
            - '@azure/arm-appplatform.AppResource'
          description: Parameters for the update operation
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppsUpdateResponse>
        description: Promise<Models.AppsUpdateResponse>
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.validateDomain'
    name: >-
      validateDomain(string, string, string, CustomDomainValidatePayload,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Check the resource name is valid as well as not in use.
    syntax:
      content: >-
        function validateDomain(resourceGroupName: string, serviceName: string,
        appName: string, validatePayload: CustomDomainValidatePayload, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: validatePayload
          type:
            - '@azure/arm-appplatform.CustomDomainValidatePayload'
          description: Custom domain payload to be validated
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AppsValidateDomainResponse>
        description: Promise<Models.AppsValidateDomainResponse>
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.validateDomain_2'
    name: >-
      validateDomain(string, string, string, CustomDomainValidatePayload,
      RequestOptionsBase, ServiceCallback<CustomDomainValidateResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validateDomain(resourceGroupName: string, serviceName: string,
        appName: string, validatePayload: CustomDomainValidatePayload, options:
        RequestOptionsBase, callback:
        ServiceCallback<CustomDomainValidateResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: validatePayload
          type:
            - '@azure/arm-appplatform.CustomDomainValidatePayload'
          description: Custom domain payload to be validated
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appplatform.CustomDomainValidateResult>
          description: |
            The callback
    package: '@azure/arm-appplatform'
  - uid: '@azure/arm-appplatform.Apps.validateDomain_1'
    name: >-
      validateDomain(string, string, string, CustomDomainValidatePayload,
      ServiceCallback<CustomDomainValidateResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validateDomain(resourceGroupName: string, serviceName: string,
        appName: string, validatePayload: CustomDomainValidatePayload, callback:
        ServiceCallback<CustomDomainValidateResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serviceName
          type:
            - string
          description: The name of the Service resource.
        - id: appName
          type:
            - string
          description: The name of the App resource.
        - id: validatePayload
          type:
            - '@azure/arm-appplatform.CustomDomainValidatePayload'
          description: Custom domain payload to be validated
        - id: callback
          type:
            - ServiceCallback<@azure/arm-appplatform.CustomDomainValidateResult>
          description: |
            The callback
    package: '@azure/arm-appplatform'
references:
  - uid: '@azure/arm-appplatform.AppPlatformManagementClientContext'
    name: AppPlatformManagementClientContext
    spec.typeScript:
      - name: AppPlatformManagementClientContext
        fullName: AppPlatformManagementClientContext
        uid: '@azure/arm-appplatform.AppPlatformManagementClientContext'
  - uid: '@azure/arm-appplatform.AppResource'
    name: AppResource
    spec.typeScript:
      - name: AppResource
        fullName: AppResource
        uid: '@azure/arm-appplatform.AppResource'
  - uid: ServiceCallback<@azure/arm-appplatform.AppResource>
    name: AppResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AppResource
        fullName: AppResource
        uid: '@azure/arm-appplatform.AppResource'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appplatform.AppsGetOptionalParams'
    name: AppsGetOptionalParams
    spec.typeScript:
      - name: AppsGetOptionalParams
        fullName: AppsGetOptionalParams
        uid: '@azure/arm-appplatform.AppsGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-appplatform.ResourceUploadDefinition>
    name: ResourceUploadDefinition>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceUploadDefinition
        fullName: ResourceUploadDefinition
        uid: '@azure/arm-appplatform.ResourceUploadDefinition'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-appplatform.AppResourceCollection>
    name: AppResourceCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AppResourceCollection
        fullName: AppResourceCollection
        uid: '@azure/arm-appplatform.AppResourceCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-appplatform.CustomDomainValidatePayload'
    name: CustomDomainValidatePayload
    spec.typeScript:
      - name: CustomDomainValidatePayload
        fullName: CustomDomainValidatePayload
        uid: '@azure/arm-appplatform.CustomDomainValidatePayload'
  - uid: ServiceCallback<@azure/arm-appplatform.CustomDomainValidateResult>
    name: CustomDomainValidateResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CustomDomainValidateResult
        fullName: CustomDomainValidateResult
        uid: '@azure/arm-appplatform.CustomDomainValidateResult'
      - name: '>'
        fullName: '>'
