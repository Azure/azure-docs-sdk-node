### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-marketplaceordering.MarketplaceAgreements'
    name: MarketplaceAgreements
    fullName: MarketplaceAgreements
    children:
      - '@azure/arm-marketplaceordering.MarketplaceAgreements.create'
      - '@azure/arm-marketplaceordering.MarketplaceAgreements.create_2'
      - '@azure/arm-marketplaceordering.MarketplaceAgreements.create_1'
      - '@azure/arm-marketplaceordering.MarketplaceAgreements.get'
      - '@azure/arm-marketplaceordering.MarketplaceAgreements.get_2'
      - '@azure/arm-marketplaceordering.MarketplaceAgreements.get_1'
      - '@azure/arm-marketplaceordering.MarketplaceAgreements.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a MarketplaceAgreements.
    package: '@azure/arm-marketplaceordering'
  - uid: '@azure/arm-marketplaceordering.MarketplaceAgreements.create'
    name: 'create(string, string, string, AgreementTerms, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Save marketplace terms.
    syntax:
      content: >-
        function create(publisherId: string, offerId: string, planId: string,
        parameters: AgreementTerms, options?: msRest.RequestOptionsBase)
      parameters:
        - id: publisherId
          type:
            - string
          description: Publisher identifier string of image being deployed.
        - id: offerId
          type:
            - string
          description: Offer identifier string of image being deployed.
        - id: planId
          type:
            - string
          description: Plan identifier string of image being deployed.
        - id: parameters
          type:
            - '@azure/arm-marketplaceordering.AgreementTerms'
          description: Parameters supplied to the Create Marketplace Terms operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MarketplaceAgreementsCreateResponse>
    package: '@azure/arm-marketplaceordering'
  - uid: '@azure/arm-marketplaceordering.MarketplaceAgreements.create_2'
    name: >-
      create(string, string, string, AgreementTerms, RequestOptionsBase,
      ServiceCallback<AgreementTerms>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(publisherId: string, offerId: string, planId: string,
        parameters: AgreementTerms, options: RequestOptionsBase, callback:
        ServiceCallback<AgreementTerms>)
      parameters:
        - id: publisherId
          type:
            - string
          description: Publisher identifier string of image being deployed.
        - id: offerId
          type:
            - string
          description: Offer identifier string of image being deployed.
        - id: planId
          type:
            - string
          description: Plan identifier string of image being deployed.
        - id: parameters
          type:
            - '@azure/arm-marketplaceordering.AgreementTerms'
          description: Parameters supplied to the Create Marketplace Terms operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-marketplaceordering.AgreementTerms>
          description: |
            The callback
      return:
        type:
          - Promise<Models.MarketplaceAgreementsCreateResponse>
    package: '@azure/arm-marketplaceordering'
  - uid: '@azure/arm-marketplaceordering.MarketplaceAgreements.create_1'
    name: >-
      create(string, string, string, AgreementTerms,
      ServiceCallback<AgreementTerms>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(publisherId: string, offerId: string, planId: string,
        parameters: AgreementTerms, callback: ServiceCallback<AgreementTerms>)
      parameters:
        - id: publisherId
          type:
            - string
          description: Publisher identifier string of image being deployed.
        - id: offerId
          type:
            - string
          description: Offer identifier string of image being deployed.
        - id: planId
          type:
            - string
          description: Plan identifier string of image being deployed.
        - id: parameters
          type:
            - '@azure/arm-marketplaceordering.AgreementTerms'
          description: Parameters supplied to the Create Marketplace Terms operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-marketplaceordering.AgreementTerms>
          description: |
            The callback
      return:
        type:
          - Promise<Models.MarketplaceAgreementsCreateResponse>
    package: '@azure/arm-marketplaceordering'
  - uid: '@azure/arm-marketplaceordering.MarketplaceAgreements.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get marketplace terms.
    syntax:
      content: >-
        function get(publisherId: string, offerId: string, planId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: publisherId
          type:
            - string
          description: Publisher identifier string of image being deployed.
        - id: offerId
          type:
            - string
          description: Offer identifier string of image being deployed.
        - id: planId
          type:
            - string
          description: Plan identifier string of image being deployed.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MarketplaceAgreementsGetResponse>
    package: '@azure/arm-marketplaceordering'
  - uid: '@azure/arm-marketplaceordering.MarketplaceAgreements.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<AgreementTerms>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(publisherId: string, offerId: string, planId: string,
        options: RequestOptionsBase, callback: ServiceCallback<AgreementTerms>)
      parameters:
        - id: publisherId
          type:
            - string
          description: Publisher identifier string of image being deployed.
        - id: offerId
          type:
            - string
          description: Offer identifier string of image being deployed.
        - id: planId
          type:
            - string
          description: Plan identifier string of image being deployed.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-marketplaceordering.AgreementTerms>
          description: |
            The callback
      return:
        type:
          - Promise<Models.MarketplaceAgreementsGetResponse>
    package: '@azure/arm-marketplaceordering'
  - uid: '@azure/arm-marketplaceordering.MarketplaceAgreements.get_1'
    name: 'get(string, string, string, ServiceCallback<AgreementTerms>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(publisherId: string, offerId: string, planId: string,
        callback: ServiceCallback<AgreementTerms>)
      parameters:
        - id: publisherId
          type:
            - string
          description: Publisher identifier string of image being deployed.
        - id: offerId
          type:
            - string
          description: Offer identifier string of image being deployed.
        - id: planId
          type:
            - string
          description: Plan identifier string of image being deployed.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-marketplaceordering.AgreementTerms>
          description: |
            The callback
      return:
        type:
          - Promise<Models.MarketplaceAgreementsGetResponse>
    package: '@azure/arm-marketplaceordering'
  - uid: '@azure/arm-marketplaceordering.MarketplaceAgreements.constructor'
    name: MarketplaceAgreements(MarketplaceOrderingAgreementsContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a MarketplaceAgreements.
    syntax:
      content: 'new MarketplaceAgreements(client: MarketplaceOrderingAgreementsContext)'
      parameters:
        - id: client
          type:
            - >-
              @azure/arm-marketplaceordering.MarketplaceOrderingAgreementsContext
          description: |
            Reference to the service client.
    package: '@azure/arm-marketplaceordering'
references:
  - uid: '@azure/arm-marketplaceordering.MarketplaceOrderingAgreementsContext'
    name: MarketplaceOrderingAgreementsContext
    spec.typeScript:
      - name: MarketplaceOrderingAgreementsContext
        fullName: MarketplaceOrderingAgreementsContext
        uid: '@azure/arm-marketplaceordering.MarketplaceOrderingAgreementsContext'
  - uid: '@azure/arm-marketplaceordering.AgreementTerms'
    name: AgreementTerms
    spec.typeScript:
      - name: AgreementTerms
        fullName: AgreementTerms
        uid: '@azure/arm-marketplaceordering.AgreementTerms'
  - uid: ServiceCallback<@azure/arm-marketplaceordering.AgreementTerms>
    name: AgreementTerms>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AgreementTerms
        fullName: AgreementTerms
        uid: '@azure/arm-marketplaceordering.AgreementTerms'
      - name: '>'
        fullName: '>'
