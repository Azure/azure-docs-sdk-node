### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-luis-runtime.Prediction'
    name: Prediction
    fullName: Prediction
    children:
      - '@azure/cognitiveservices-luis-runtime.Prediction.constructor'
      - '@azure/cognitiveservices-luis-runtime.Prediction.resolve'
      - '@azure/cognitiveservices-luis-runtime.Prediction.resolve_2'
      - '@azure/cognitiveservices-luis-runtime.Prediction.resolve_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Prediction.
    package: '@azure/cognitiveservices-luis-runtime'
  - uid: '@azure/cognitiveservices-luis-runtime.Prediction.constructor'
    name: Prediction(LUISRuntimeClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Prediction.
    syntax:
      content: 'new Prediction(client: LUISRuntimeClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-luis-runtime.LUISRuntimeClientContext'
          description: |
            Reference to the service client.
    package: '@azure/cognitiveservices-luis-runtime'
  - uid: '@azure/cognitiveservices-luis-runtime.Prediction.resolve'
    name: 'resolve(string, string, Models.PredictionResolveOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets predictions for a given utterance, in the form of intents and
      entities. The current maximum

      query size is 500 characters.
    syntax:
      content: >-
        function resolve(appId: string, query: string, options?:
        Models.PredictionResolveOptionalParams)
      parameters:
        - id: appId
          type:
            - string
          description: The LUIS application ID (Guid).
        - id: query
          type:
            - string
          description: The utterance to predict.
        - id: options
          type:
            - Models.PredictionResolveOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PredictionResolveResponse>
    package: '@azure/cognitiveservices-luis-runtime'
  - uid: '@azure/cognitiveservices-luis-runtime.Prediction.resolve_2'
    name: >-
      resolve(string, string, PredictionResolveOptionalParams,
      ServiceCallback<LuisResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resolve(appId: string, query: string, options:
        PredictionResolveOptionalParams, callback: ServiceCallback<LuisResult>)
      parameters:
        - id: appId
          type:
            - string
          description: The LUIS application ID (Guid).
        - id: query
          type:
            - string
          description: The utterance to predict.
        - id: options
          type:
            - >-
              @azure/cognitiveservices-luis-runtime.PredictionResolveOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-runtime.LuisResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.PredictionResolveResponse>
    package: '@azure/cognitiveservices-luis-runtime'
  - uid: '@azure/cognitiveservices-luis-runtime.Prediction.resolve_1'
    name: 'resolve(string, string, ServiceCallback<LuisResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resolve(appId: string, query: string, callback:
        ServiceCallback<LuisResult>)
      parameters:
        - id: appId
          type:
            - string
          description: The LUIS application ID (Guid).
        - id: query
          type:
            - string
          description: The utterance to predict.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-runtime.LuisResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.PredictionResolveResponse>
    package: '@azure/cognitiveservices-luis-runtime'
references:
  - uid: '@azure/cognitiveservices-luis-runtime.LUISRuntimeClientContext'
    name: LUISRuntimeClientContext
    spec.typeScript:
      - name: LUISRuntimeClientContext
        fullName: LUISRuntimeClientContext
        uid: '@azure/cognitiveservices-luis-runtime.LUISRuntimeClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-luis-runtime.LuisResult>
    name: LuisResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LuisResult
        fullName: LuisResult
        uid: '@azure/cognitiveservices-luis-runtime.LuisResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-luis-runtime.PredictionResolveOptionalParams'
    name: PredictionResolveOptionalParams
    spec.typeScript:
      - name: PredictionResolveOptionalParams
        fullName: PredictionResolveOptionalParams
        uid: '@azure/cognitiveservices-luis-runtime.PredictionResolveOptionalParams'
