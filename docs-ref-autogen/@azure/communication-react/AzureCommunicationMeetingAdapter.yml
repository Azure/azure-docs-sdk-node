### YamlMime:TSType
name: AzureCommunicationMeetingAdapter
uid: '@azure/communication-react.AzureCommunicationMeetingAdapter'
package: '@azure/communication-react'
summary: |-
  Meeting adapter backed by Azure Communication Services.
  Created for easy use with the Meeting Composite.
fullName: AzureCommunicationMeetingAdapter
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'AzureCommunicationMeetingAdapter(CallAdapter, ChatAdapter)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.constructor'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new AzureCommunicationMeetingAdapter(callAdapter: CallAdapter,
        chatAdapter: ChatAdapter)
      parameters:
        - id: callAdapter
          type: <xref uid="@azure/communication-react.CallAdapter" />
          description: ''
        - id: chatAdapter
          type: <xref uid="@azure/communication-react.ChatAdapter" />
          description: ''
methods:
  - name: askDevicePermission(PermissionConstraints)
    uid: >-
      @azure/communication-react.AzureCommunicationMeetingAdapter.askDevicePermission
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function askDevicePermission(constraints: PermissionConstraints)'
      parameters:
        - id: constraints
          type: PermissionConstraints
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'createStreamView(string, VideoStreamOptions)'
    uid: >-
      @azure/communication-react.AzureCommunicationMeetingAdapter.createStreamView
    package: '@azure/communication-react'
    summary: Create a stream view for a remote participants video feed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createStreamView(remoteUserId?: string, options?:
        VideoStreamOptions)
      parameters:
        - id: remoteUserId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: deleteMessage(string)
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.deleteMessage'
    package: '@azure/communication-react'
    summary: Delete an existing message.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteMessage(messageId: string)'
      parameters:
        - id: messageId
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: dispose()
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.dispose'
    package: '@azure/communication-react'
    summary: Dispose of the current Meeting Adapter.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function dispose()
  - name: 'disposeStreamView(string, VideoStreamOptions)'
    uid: >-
      @azure/communication-react.AzureCommunicationMeetingAdapter.disposeStreamView
    package: '@azure/communication-react'
    summary: Dispose of a created stream view of a remote participants video feed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function disposeStreamView(remoteUserId?: string, options?:
        VideoStreamOptions)
      parameters:
        - id: remoteUserId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: fetchInitialData()
    uid: >-
      @azure/communication-react.AzureCommunicationMeetingAdapter.fetchInitialData
    package: '@azure/communication-react'
    summary: Fetch initial Meeting data such as chat messages.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function fetchInitialData()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getState()
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.getState'
    package: '@azure/communication-react'
    summary: Get current Meeting state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getState()
      return:
        type: <xref uid="@azure/communication-react.MeetingAdapterState" />
        description: ''
  - name: joinMeeting(boolean)
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.joinMeeting'
    package: '@azure/communication-react'
    summary: Join existing Meeting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function joinMeeting(microphoneOn?: boolean)'
      parameters:
        - id: microphoneOn
          type: boolean
          description: ''
      return:
        type: Call | undefined
        description: ''
  - name: leaveMeeting()
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.leaveMeeting'
    package: '@azure/communication-react'
    summary: Leave current Meeting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function leaveMeeting()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: loadPreviousChatMessages(number)
    uid: >-
      @azure/communication-react.AzureCommunicationMeetingAdapter.loadPreviousChatMessages
    package: '@azure/communication-react'
    summary: Load previous Meeting chat messages.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function loadPreviousChatMessages(messagesToLoad: number)'
      parameters:
        - id: messagesToLoad
          type: number
          description: ''
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: mute()
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.mute'
    package: '@azure/communication-react'
    summary: Mute the user in the Meeting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function mute()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'off("callIdChanged", CallIdChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
  - name: 'off("displayNameChanged", DisplayNameChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off_7'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
  - name: 'off("error", (e: Error) => void)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "error", listener: (e: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: Error) =&gt; void'
          description: ''
  - name: >-
      off("isLocalScreenSharingActiveChanged",
      IsLocalScreenSharingActiveChangedListener)
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isLocalScreenSharingActiveChanged", listener:
        IsLocalScreenSharingActiveChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsLocalScreenSharingActiveChangedListener"
            />
          description: ''
  - name: 'off("isMutedChanged", IsMutedChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "isMutedChanged", listener: IsMutedChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMutedChangedListener" />
          description: ''
  - name: 'off("isSpeakingChanged", IsSpeakingChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off_8'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
  - name: 'off("meetingEnded", CallEndedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "meetingEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"meetingEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
  - name: 'off("messageRead", MessageReadListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off_11'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
  - name: 'off("messageReceived", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off_9'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "messageReceived", listener:
        MessageReceivedListener)
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'off("messageSent", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off_10'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'off("participantsJoined", ParticipantsJoinedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsJoined", listener:
        ParticipantsJoinedListener)
      parameters:
        - id: event
          type: '"participantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsJoinedListener" />
          description: ''
  - name: 'off("participantsLeft", ParticipantsLeftListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.off_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsLeft", listener:
        ParticipantsLeftListener)
      parameters:
        - id: event
          type: '"participantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsLeftListener" />
          description: ''
  - name: 'offStateChange((state: MeetingAdapterState) => void)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.offStateChange'
    package: '@azure/communication-react'
    summary: Unsubscribe to state change events.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function offStateChange(handler: (state: MeetingAdapterState) => void)'
      parameters:
        - id: handler
          type: '(state: MeetingAdapterState) =&gt; void'
          description: |
            handler to be no longer called when state changes.
  - name: 'on("callIdChanged", CallIdChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
  - name: 'on("displayNameChanged", DisplayNameChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on_7'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
  - name: 'on("error", (e: Error) => void)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "error", listener: (e: Error) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: Error) =&gt; void'
          description: ''
  - name: >-
      on("isLocalScreenSharingActiveChanged",
      IsLocalScreenSharingActiveChangedListener)
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isLocalScreenSharingActiveChanged", listener:
        IsLocalScreenSharingActiveChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsLocalScreenSharingActiveChangedListener"
            />
          description: ''
  - name: 'on("isMutedChanged", IsMutedChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "isMutedChanged", listener: IsMutedChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMutedChangedListener" />
          description: ''
  - name: 'on("isSpeakingChanged", IsSpeakingChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on_8'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
  - name: 'on("meetingEnded", CallEndedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "meetingEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"meetingEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
  - name: 'on("messageRead", MessageReadListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on_11'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
  - name: 'on("messageReceived", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on_9'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageReceived", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'on("messageSent", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on_10'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'on("participantsJoined", ParticipantsJoinedListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsJoined", listener:
        ParticipantsJoinedListener)
      parameters:
        - id: event
          type: '"participantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsJoinedListener" />
          description: ''
  - name: 'on("participantsLeft", ParticipantsLeftListener)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.on_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsLeft", listener:
        ParticipantsLeftListener)
      parameters:
        - id: event
          type: '"participantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsLeftListener" />
          description: ''
  - name: 'onStateChange((state: MeetingAdapterState) => void)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.onStateChange'
    package: '@azure/communication-react'
    summary: Subscribe to state change events.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onStateChange(handler: (state: MeetingAdapterState) => void)'
      parameters:
        - id: handler
          type: '(state: MeetingAdapterState) =&gt; void'
          description: >
            handler to be called when the state changes. This is passed the new
            state.
  - name: onToggleCamera(VideoStreamOptions)
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.onToggleCamera'
    package: '@azure/communication-react'
    summary: Toggle the camera for the user in the Meeting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onToggleCamera(options?: VideoStreamOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: queryCameras()
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.queryCameras'
    package: '@azure/communication-react'
    summary: Query for available cameras.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function queryCameras()
      return:
        type: 'Promise&lt;VideoDeviceInfo[]&gt;'
        description: ''
  - name: queryMicrophones()
    uid: >-
      @azure/communication-react.AzureCommunicationMeetingAdapter.queryMicrophones
    package: '@azure/communication-react'
    summary: Query for available microphones.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function queryMicrophones()
      return:
        type: 'Promise&lt;AudioDeviceInfo[]&gt;'
        description: ''
  - name: querySpeakers()
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.querySpeakers'
    package: '@azure/communication-react'
    summary: Query for available speakers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function querySpeakers()
      return:
        type: 'Promise&lt;AudioDeviceInfo[]&gt;'
        description: ''
  - name: removeParticipant(string)
    uid: >-
      @azure/communication-react.AzureCommunicationMeetingAdapter.removeParticipant
    package: '@azure/communication-react'
    summary: Remove a participant from the Meeting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeParticipant(userId: string)'
      parameters:
        - id: userId
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: sendMessage(string)
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.sendMessage'
    package: '@azure/communication-react'
    summary: Send a chat message.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendMessage(content: string)'
      parameters:
        - id: content
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: sendReadReceipt(string)
    uid: >-
      @azure/communication-react.AzureCommunicationMeetingAdapter.sendReadReceipt
    package: '@azure/communication-react'
    summary: Send a chat read receipt.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendReadReceipt(chatMessageId: string)'
      parameters:
        - id: chatMessageId
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: sendTypingIndicator()
    uid: >-
      @azure/communication-react.AzureCommunicationMeetingAdapter.sendTypingIndicator
    package: '@azure/communication-react'
    summary: Send an isTyping indicator.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function sendTypingIndicator()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'setCamera(VideoDeviceInfo, VideoStreamOptions)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.setCamera'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCamera(device: VideoDeviceInfo, options?:
        VideoStreamOptions)
      parameters:
        - id: device
          type: VideoDeviceInfo
          description: ''
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: setMicrophone(AudioDeviceInfo)
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.setMicrophone'
    package: '@azure/communication-react'
    summary: Set the microphone to be used in the meeting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setMicrophone(device: AudioDeviceInfo)'
      parameters:
        - id: device
          type: AudioDeviceInfo
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: setPage(MeetingCompositePage)
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.setPage'
    package: '@azure/communication-react'
    summary: Set the page of the Meeting Composite.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setPage(page: MeetingCompositePage)'
      parameters:
        - id: page
          type: <xref uid="@azure/communication-react.MeetingCompositePage" />
          description: ''
  - name: setSpeaker(AudioDeviceInfo)
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.setSpeaker'
    package: '@azure/communication-react'
    summary: Set the speaker to be used in the meeting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setSpeaker(device: AudioDeviceInfo)'
      parameters:
        - id: device
          type: AudioDeviceInfo
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: startCamera()
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.startCamera'
    package: '@azure/communication-react'
    summary: Start the camera for the user in the Meeting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function startCamera()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'startMeeting(string[])'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.startMeeting'
    package: '@azure/communication-react'
    summary: Start a new Meeting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function startMeeting(participants: string[])'
      parameters:
        - id: participants
          type: 'string[]'
          description: ''
      return:
        type: Call | undefined
        description: ''
  - name: startScreenShare()
    uid: >-
      @azure/communication-react.AzureCommunicationMeetingAdapter.startScreenShare
    package: '@azure/communication-react'
    summary: Trigger the user to start screen share.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function startScreenShare()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: stopCamera()
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.stopCamera'
    package: '@azure/communication-react'
    summary: Stop the camera for the user in the Meeting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function stopCamera()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: stopScreenShare()
    uid: >-
      @azure/communication-react.AzureCommunicationMeetingAdapter.stopScreenShare
    package: '@azure/communication-react'
    summary: Stop the current active screen share.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function stopScreenShare()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: unmute()
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.unmute'
    package: '@azure/communication-react'
    summary: Unmute the user in the Meeting.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function unmute()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'updateMessage(string, string)'
    uid: '@azure/communication-react.AzureCommunicationMeetingAdapter.updateMessage'
    package: '@azure/communication-react'
    summary: Update an existing message.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function updateMessage(messageId: string, content: string)'
      parameters:
        - id: messageId
          type: string
          description: ''
        - id: content
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
