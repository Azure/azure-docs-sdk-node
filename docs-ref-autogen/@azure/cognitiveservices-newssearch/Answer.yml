### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-newssearch.Answer'
    name: Answer
    fullName: Answer
    children:
      - '@azure/cognitiveservices-newssearch.Answer.followUpQueries'
      - '@azure/cognitiveservices-newssearch.Answer.id'
      - '@azure/cognitiveservices-newssearch.Answer.webSearchUrl'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.Answer.followUpQueries'
    name: followUpQueries
    fullName: followUpQueries
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'followUpQueries?: Query[]'
      return:
        type:
          - '@azure/cognitiveservices-newssearch.Query[]'
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.Answer.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.Answer.webSearchUrl'
    name: webSearchUrl
    fullName: webSearchUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'webSearchUrl?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
references:
  - uid: '@azure/cognitiveservices-newssearch.Query[]'
    name: 'Query[]'
    spec.typeScript:
      - name: Query
        fullName: Query
        uid: '@azure/cognitiveservices-newssearch.Query'
      - name: '[]'
        fullName: '[]'
