### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams'
    name: NewsSearchOptionalParams
    fullName: NewsSearchOptionalParams
    children:
      - >-
        @azure/cognitiveservices-newssearch.NewsSearchOptionalParams.acceptLanguage
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.clientId'
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.clientIp'
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.count'
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.countryCode'
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.freshness'
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.location'
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.market'
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.offset'
      - >-
        @azure/cognitiveservices-newssearch.NewsSearchOptionalParams.originalImage
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.safeSearch'
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.setLang'
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.sortBy'
      - >-
        @azure/cognitiveservices-newssearch.NewsSearchOptionalParams.textDecorations
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.textFormat'
      - '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.userAgent'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-newssearch'
  - uid: >-
      @azure/cognitiveservices-newssearch.NewsSearchOptionalParams.acceptLanguage
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'acceptLanguage?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.clientId'
    name: clientId
    fullName: clientId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'clientId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.clientIp'
    name: clientIp
    fullName: clientIp
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'clientIp?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.count'
    name: count
    fullName: count
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'count?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.countryCode'
    name: countryCode
    fullName: countryCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'countryCode?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.freshness'
    name: freshness
    fullName: freshness
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'freshness?: Freshness'
      return:
        type:
          - '@azure/cognitiveservices-newssearch.Freshness'
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.location'
    name: location
    fullName: location
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'location?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.market'
    name: market
    fullName: market
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'market?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.offset'
    name: offset
    fullName: offset
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'offset?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.originalImage'
    name: originalImage
    fullName: originalImage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'originalImage?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.safeSearch'
    name: safeSearch
    fullName: safeSearch
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'safeSearch?: SafeSearch'
      return:
        type:
          - '@azure/cognitiveservices-newssearch.SafeSearch'
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.setLang'
    name: setLang
    fullName: setLang
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'setLang?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.sortBy'
    name: sortBy
    fullName: sortBy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'sortBy?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
  - uid: >-
      @azure/cognitiveservices-newssearch.NewsSearchOptionalParams.textDecorations
    name: textDecorations
    fullName: textDecorations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'textDecorations?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.textFormat'
    name: textFormat
    fullName: textFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'textFormat?: TextFormat'
      return:
        type:
          - '@azure/cognitiveservices-newssearch.TextFormat'
    package: '@azure/cognitiveservices-newssearch'
  - uid: '@azure/cognitiveservices-newssearch.NewsSearchOptionalParams.userAgent'
    name: userAgent
    fullName: userAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'userAgent?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-newssearch'
references:
  - uid: '@azure/cognitiveservices-newssearch.Freshness'
    name: Freshness
    spec.typeScript:
      - name: Freshness
        fullName: Freshness
        uid: '@azure/cognitiveservices-newssearch.Freshness'
  - uid: '@azure/cognitiveservices-newssearch.SafeSearch'
    name: SafeSearch
    spec.typeScript:
      - name: SafeSearch
        fullName: SafeSearch
        uid: '@azure/cognitiveservices-newssearch.SafeSearch'
  - uid: '@azure/cognitiveservices-newssearch.TextFormat'
    name: TextFormat
    spec.typeScript:
      - name: TextFormat
        fullName: TextFormat
        uid: '@azure/cognitiveservices-newssearch.TextFormat'
