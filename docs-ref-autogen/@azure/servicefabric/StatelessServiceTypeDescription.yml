### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription'
    name: StatelessServiceTypeDescription
    fullName: StatelessServiceTypeDescription
    children:
      - '@azure/servicefabric.StatelessServiceTypeDescription.extensions'
      - '@azure/servicefabric.StatelessServiceTypeDescription.isStateful'
      - '@azure/servicefabric.StatelessServiceTypeDescription.kind'
      - '@azure/servicefabric.StatelessServiceTypeDescription.loadMetrics'
      - >-
        @azure/servicefabric.StatelessServiceTypeDescription.placementConstraints
      - >-
        @azure/servicefabric.StatelessServiceTypeDescription.servicePlacementPolicies
      - '@azure/servicefabric.StatelessServiceTypeDescription.serviceTypeName'
      - '@azure/servicefabric.StatelessServiceTypeDescription.useImplicitHost'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.extensions'
    name: extensions
    fullName: extensions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'extensions?: ServiceTypeExtensionDescription[]'
      return:
        type:
          - '@azure/servicefabric.ServiceTypeExtensionDescription[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.isStateful'
    name: isStateful
    fullName: isStateful
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isStateful?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.kind'
    name: kind
    fullName: kind
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'kind: "Stateless"'
      return:
        type:
          - '"Stateless"'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.loadMetrics'
    name: loadMetrics
    fullName: loadMetrics
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'loadMetrics?: ServiceLoadMetricDescription[]'
      return:
        type:
          - '@azure/servicefabric.ServiceLoadMetricDescription[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.placementConstraints'
    name: placementConstraints
    fullName: placementConstraints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'placementConstraints?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.StatelessServiceTypeDescription.servicePlacementPolicies
    name: servicePlacementPolicies
    fullName: servicePlacementPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'servicePlacementPolicies?: ServicePlacementPolicyDescriptionUnion[]'
      return:
        type:
          - '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.serviceTypeName'
    name: serviceTypeName
    fullName: serviceTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'serviceTypeName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceTypeDescription.useImplicitHost'
    name: useImplicitHost
    fullName: useImplicitHost
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'useImplicitHost?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ServiceTypeExtensionDescription[]'
    name: 'ServiceTypeExtensionDescription[]'
    spec.typeScript:
      - name: ServiceTypeExtensionDescription
        fullName: ServiceTypeExtensionDescription
        uid: '@azure/servicefabric.ServiceTypeExtensionDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.ServiceLoadMetricDescription[]'
    name: 'ServiceLoadMetricDescription[]'
    spec.typeScript:
      - name: ServiceLoadMetricDescription
        fullName: ServiceLoadMetricDescription
        uid: '@azure/servicefabric.ServiceLoadMetricDescription'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion[]'
    name: 'ServicePlacementPolicyDescriptionUnion[]'
    spec.typeScript:
      - name: ServicePlacementPolicyDescriptionUnion
        fullName: ServicePlacementPolicyDescriptionUnion
        uid: '@azure/servicefabric.ServicePlacementPolicyDescriptionUnion'
      - name: '[]'
        fullName: '[]'
