### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ChaosParameters'
    name: ChaosParameters
    fullName: ChaosParameters
    children:
      - '@azure/servicefabric.ChaosParameters.chaosTargetFilter'
      - '@azure/servicefabric.ChaosParameters.clusterHealthPolicy'
      - '@azure/servicefabric.ChaosParameters.context'
      - '@azure/servicefabric.ChaosParameters.enableMoveReplicaFaults'
      - >-
        @azure/servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds
      - '@azure/servicefabric.ChaosParameters.maxConcurrentFaults'
      - '@azure/servicefabric.ChaosParameters.timeToRunInSeconds'
      - '@azure/servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds'
      - '@azure/servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.chaosTargetFilter'
    name: chaosTargetFilter
    fullName: chaosTargetFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'chaosTargetFilter?: ChaosTargetFilter'
      return:
        type:
          - '@azure/servicefabric.ChaosTargetFilter'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.clusterHealthPolicy'
    name: clusterHealthPolicy
    fullName: clusterHealthPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'clusterHealthPolicy?: ClusterHealthPolicy'
      return:
        type:
          - '@azure/servicefabric.ClusterHealthPolicy'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.context'
    name: context
    fullName: context
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'context?: ChaosContext'
      return:
        type:
          - '@azure/servicefabric.ChaosContext'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.enableMoveReplicaFaults'
    name: enableMoveReplicaFaults
    fullName: enableMoveReplicaFaults
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'enableMoveReplicaFaults?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
  - uid: >-
      @azure/servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds
    name: maxClusterStabilizationTimeoutInSeconds
    fullName: maxClusterStabilizationTimeoutInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxClusterStabilizationTimeoutInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.maxConcurrentFaults'
    name: maxConcurrentFaults
    fullName: maxConcurrentFaults
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxConcurrentFaults?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.timeToRunInSeconds'
    name: timeToRunInSeconds
    fullName: timeToRunInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'timeToRunInSeconds?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds'
    name: waitTimeBetweenFaultsInSeconds
    fullName: waitTimeBetweenFaultsInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'waitTimeBetweenFaultsInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds'
    name: waitTimeBetweenIterationsInSeconds
    fullName: waitTimeBetweenIterationsInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'waitTimeBetweenIterationsInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ChaosTargetFilter'
    name: ChaosTargetFilter
    spec.typeScript:
      - name: ChaosTargetFilter
        fullName: ChaosTargetFilter
        uid: '@azure/servicefabric.ChaosTargetFilter'
  - uid: '@azure/servicefabric.ClusterHealthPolicy'
    name: ClusterHealthPolicy
    spec.typeScript:
      - name: ClusterHealthPolicy
        fullName: ClusterHealthPolicy
        uid: '@azure/servicefabric.ClusterHealthPolicy'
  - uid: '@azure/servicefabric.ChaosContext'
    name: ChaosContext
    spec.typeScript:
      - name: ChaosContext
        fullName: ChaosContext
        uid: '@azure/servicefabric.ChaosContext'
