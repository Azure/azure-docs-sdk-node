### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventgrid.Topic'
    name: Topic
    fullName: Topic
    children:
      - '@azure/arm-eventgrid.Topic.endpoint'
      - '@azure/arm-eventgrid.Topic.inputSchema'
      - '@azure/arm-eventgrid.Topic.inputSchemaMapping'
      - '@azure/arm-eventgrid.Topic.provisioningState'
    langs:
      - typeScript
    type: interface
    summary: EventGrid Topic
    extends:
      name: '@azure/arm-eventgrid.TrackedResource'
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topic.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Endpoint for the topic.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'endpoint?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topic.inputSchema'
    name: inputSchema
    fullName: inputSchema
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This determines the format that Event Grid should expect for incoming
      events published to the

      topic. Possible values include: 'EventGridSchema', 'CustomEventSchema',
      'CloudEventV01Schema'.

      Default value: 'EventGridSchema'.
    optional: true
    syntax:
      content: 'inputSchema?: InputSchema'
      return:
        type:
          - '@azure/arm-eventgrid.InputSchema'
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topic.inputSchemaMapping'
    name: inputSchemaMapping
    fullName: inputSchemaMapping
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This enables publishing using custom event schemas. An InputSchemaMapping
      can be specified to

      map various properties of a source schema to various required properties
      of the EventGridEvent

      schema.
    optional: true
    syntax:
      content: 'inputSchemaMapping?: InputSchemaMappingUnion'
      return:
        type:
          - '@azure/arm-eventgrid.InputSchemaMappingUnion'
    package: '@azure/arm-eventgrid'
  - uid: '@azure/arm-eventgrid.Topic.provisioningState'
    name: provisioningState
    fullName: provisioningState
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Provisioning state of the topic. Possible values include: 'Creating',
      'Updating', 'Deleting',

      'Succeeded', 'Canceled', 'Failed'

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'provisioningState?: TopicProvisioningState'
      return:
        type:
          - '@azure/arm-eventgrid.TopicProvisioningState'
    package: '@azure/arm-eventgrid'
references:
  - uid: '@azure/arm-eventgrid.TrackedResource'
    name: TrackedResource
    spec.typeScript:
      - name: TrackedResource
        fullName: TrackedResource
        uid: '@azure/arm-eventgrid.TrackedResource'
  - uid: '@azure/arm-eventgrid.InputSchema'
    name: InputSchema
    spec.typeScript:
      - name: InputSchema
        fullName: InputSchema
        uid: '@azure/arm-eventgrid.InputSchema'
  - uid: '@azure/arm-eventgrid.InputSchemaMappingUnion'
    name: InputSchemaMappingUnion
    spec.typeScript:
      - name: InputSchemaMappingUnion
        fullName: InputSchemaMappingUnion
        uid: '@azure/arm-eventgrid.InputSchemaMappingUnion'
  - uid: '@azure/arm-eventgrid.TopicProvisioningState'
    name: TopicProvisioningState
    spec.typeScript:
      - name: TopicProvisioningState
        fullName: TopicProvisioningState
        uid: '@azure/arm-eventgrid.TopicProvisioningState'
