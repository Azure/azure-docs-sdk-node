### YamlMime:UniversalReference
items:
  - uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams
    name: TrainingAPIClientGetImageCountOptionalParams
    fullName: TrainingAPIClientGetImageCountOptionalParams
    children:
      - >-
        @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.abortSignal
      - >-
        @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.customHeaders
      - >-
        @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.filter
      - >-
        @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.iterationId
      - >-
        @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.onDownloadProgress
      - >-
        @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.onUploadProgress
      - >-
        @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.taggingStatus
      - >-
        @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.tagIds
      - >-
        @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.timeout
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-customvision-training'
  - uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/cognitiveservices-customvision-training'
  - uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/cognitiveservices-customvision-training'
  - uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.filter
    name: filter
    fullName: filter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An expression to filter the images against image metadata. Only images
      where the expression

      evaluates to true are included in the response.

      The expression supports eq (Equal), ne (Not equal), and (Logical and), or
      (Logical or)

      operators.

      Here is an example, metadata=key1 eq 'value1' and key2 ne 'value2'.
    optional: true
    syntax:
      content: 'filter?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-customvision-training'
  - uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.iterationId
    name: iterationId
    fullName: iterationId
    children: []
    langs:
      - typeScript
    type: property
    summary: The iteration id. Defaults to workspace.
    optional: true
    syntax:
      content: 'iterationId?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/cognitiveservices-customvision-training'
  - uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/cognitiveservices-customvision-training'
  - uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/cognitiveservices-customvision-training'
  - uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.taggingStatus
    name: taggingStatus
    fullName: taggingStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The tagging status filter. It can be 'All', 'Tagged', or 'Untagged'.
      Defaults to 'All'.

      Possible values include: 'All', 'Tagged', 'Untagged'
    optional: true
    syntax:
      content: 'taggingStatus?: TaggingStatus1'
      return:
        type:
          - '@azure/cognitiveservices-customvision-training.TaggingStatus1'
        description: ''
    package: '@azure/cognitiveservices-customvision-training'
  - uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.tagIds
    name: tagIds
    fullName: tagIds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A list of tags ids to filter the images to count. Defaults to all tags
      when null.
    optional: true
    syntax:
      content: 'tagIds?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/cognitiveservices-customvision-training'
  - uid: >-
      @azure/cognitiveservices-customvision-training.TrainingAPIClientGetImageCountOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/cognitiveservices-customvision-training'
references:
  - uid: '@azure/cognitiveservices-customvision-training.TaggingStatus1'
    name: TaggingStatus1
    spec.typeScript:
      - name: TaggingStatus1
        fullName: TaggingStatus1
        uid: '@azure/cognitiveservices-customvision-training.TaggingStatus1'
