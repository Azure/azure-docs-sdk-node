### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-cdn.CdnManagementClient'
    name: CdnManagementClient
    fullName: CdnManagementClient
    children:
      - '@azure/arm-cdn.CdnManagementClient.constructor'
      - '@azure/arm-cdn.CdnManagementClient.checkNameAvailability'
      - '@azure/arm-cdn.CdnManagementClient.checkNameAvailability_2'
      - '@azure/arm-cdn.CdnManagementClient.checkNameAvailability_1'
      - '@azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription'
      - >-
        @azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_2
      - >-
        @azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_1
      - '@azure/arm-cdn.CdnManagementClient.customDomains'
      - '@azure/arm-cdn.CdnManagementClient.edgeNodes'
      - '@azure/arm-cdn.CdnManagementClient.endpoints'
      - '@azure/arm-cdn.CdnManagementClient.operations'
      - '@azure/arm-cdn.CdnManagementClient.origins'
      - '@azure/arm-cdn.CdnManagementClient.profiles'
      - '@azure/arm-cdn.CdnManagementClient.resourceUsage'
      - '@azure/arm-cdn.CdnManagementClient.validateProbe'
      - '@azure/arm-cdn.CdnManagementClient.validateProbe_2'
      - '@azure/arm-cdn.CdnManagementClient.validateProbe_1'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-cdn.CdnManagementClientContext'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.constructor'
    name: >-
      CdnManagementClient(ServiceClientCredentials, string,
      Models.CdnManagementClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the CdnManagementClient class.
    syntax:
      content: >-
        new CdnManagementClient(credentials: ServiceClientCredentials,
        subscriptionId: string, options?: Models.CdnManagementClientOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type:
            - string
          description: Azure Subscription ID.
        - id: options
          type:
            - Models.CdnManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailability'
    name: 'checkNameAvailability(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Check the availability of a resource name. This is needed for resources
      where name is globally

      unique, such as a CDN endpoint.
    syntax:
      content: >-
        function checkNameAvailability(name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: name
          type:
            - string
          description: The resource name to validate.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailability_2'
    name: >-
      checkNameAvailability(string, RequestOptionsBase,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(name: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: name
          type:
            - string
          description: The resource name to validate.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.CheckNameAvailabilityOutput>
          description: |
            The callback
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailability_1'
    name: >-
      checkNameAvailability(string,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(name: string, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: name
          type:
            - string
          description: The resource name to validate.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.CheckNameAvailabilityOutput>
          description: |
            The callback
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription'
    name: 'checkNameAvailabilityWithSubscription(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Check the availability of a resource name. This is needed for resources
      where name is globally

      unique, such as a CDN endpoint.
    syntax:
      content: >-
        function checkNameAvailabilityWithSubscription(name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: name
          type:
            - string
          description: The resource name to validate.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CheckNameAvailabilityWithSubscriptionResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_2'
    name: >-
      checkNameAvailabilityWithSubscription(string, RequestOptionsBase,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailabilityWithSubscription(name: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: name
          type:
            - string
          description: The resource name to validate.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.CheckNameAvailabilityOutput>
          description: |
            The callback
      return:
        type:
          - Promise<Models.CheckNameAvailabilityWithSubscriptionResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.checkNameAvailabilityWithSubscription_1'
    name: >-
      checkNameAvailabilityWithSubscription(string,
      ServiceCallback<CheckNameAvailabilityOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailabilityWithSubscription(name: string, callback:
        ServiceCallback<CheckNameAvailabilityOutput>)
      parameters:
        - id: name
          type:
            - string
          description: The resource name to validate.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.CheckNameAvailabilityOutput>
          description: |
            The callback
      return:
        type:
          - Promise<Models.CheckNameAvailabilityWithSubscriptionResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.customDomains'
    name: customDomains
    fullName: customDomains
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'customDomains: CustomDomains'
      return:
        type:
          - '@azure/arm-cdn.CustomDomains'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.edgeNodes'
    name: edgeNodes
    fullName: edgeNodes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'edgeNodes: EdgeNodes'
      return:
        type:
          - '@azure/arm-cdn.EdgeNodes'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.endpoints'
    name: endpoints
    fullName: endpoints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoints: Endpoints'
      return:
        type:
          - '@azure/arm-cdn.Endpoints'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-cdn.Operations'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.origins'
    name: origins
    fullName: origins
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'origins: Origins'
      return:
        type:
          - '@azure/arm-cdn.Origins'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.profiles'
    name: profiles
    fullName: profiles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'profiles: Profiles'
      return:
        type:
          - '@azure/arm-cdn.Profiles'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.resourceUsage'
    name: resourceUsage
    fullName: resourceUsage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'resourceUsage: ResourceUsageOperations'
      return:
        type:
          - '@azure/arm-cdn.ResourceUsageOperations'
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.validateProbe'
    name: 'validateProbe(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Check if the probe path is a valid path and the file can be accessed.
      Probe path is the path to

      a file hosted on the origin server to help accelerate the delivery of
      dynamic content via the

      CDN endpoint. This path is relative to the origin path specified in the
      endpoint configuration.
    syntax:
      content: >-
        function validateProbe(probeURL: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: probeURL
          type:
            - string
          description: The probe URL to validate.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ValidateProbeResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.validateProbe_2'
    name: >-
      validateProbe(string, RequestOptionsBase,
      ServiceCallback<ValidateProbeOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validateProbe(probeURL: string, options: RequestOptionsBase,
        callback: ServiceCallback<ValidateProbeOutput>)
      parameters:
        - id: probeURL
          type:
            - string
          description: The probe URL to validate.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.ValidateProbeOutput>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ValidateProbeResponse>
    package: '@azure/arm-cdn'
  - uid: '@azure/arm-cdn.CdnManagementClient.validateProbe_1'
    name: 'validateProbe(string, ServiceCallback<ValidateProbeOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validateProbe(probeURL: string, callback:
        ServiceCallback<ValidateProbeOutput>)
      parameters:
        - id: probeURL
          type:
            - string
          description: The probe URL to validate.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cdn.ValidateProbeOutput>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ValidateProbeResponse>
    package: '@azure/arm-cdn'
references:
  - uid: '@azure/arm-cdn.CdnManagementClientContext'
    name: CdnManagementClientContext
    spec.typeScript:
      - name: CdnManagementClientContext
        fullName: CdnManagementClientContext
        uid: '@azure/arm-cdn.CdnManagementClientContext'
  - uid: '@azure/arm-cdn.CustomDomains'
    name: CustomDomains
    spec.typeScript:
      - name: CustomDomains
        fullName: CustomDomains
        uid: '@azure/arm-cdn.CustomDomains'
  - uid: '@azure/arm-cdn.EdgeNodes'
    name: EdgeNodes
    spec.typeScript:
      - name: EdgeNodes
        fullName: EdgeNodes
        uid: '@azure/arm-cdn.EdgeNodes'
  - uid: '@azure/arm-cdn.Endpoints'
    name: Endpoints
    spec.typeScript:
      - name: Endpoints
        fullName: Endpoints
        uid: '@azure/arm-cdn.Endpoints'
  - uid: '@azure/arm-cdn.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-cdn.Operations'
  - uid: '@azure/arm-cdn.Origins'
    name: Origins
    spec.typeScript:
      - name: Origins
        fullName: Origins
        uid: '@azure/arm-cdn.Origins'
  - uid: '@azure/arm-cdn.Profiles'
    name: Profiles
    spec.typeScript:
      - name: Profiles
        fullName: Profiles
        uid: '@azure/arm-cdn.Profiles'
  - uid: '@azure/arm-cdn.ResourceUsageOperations'
    name: ResourceUsageOperations
    spec.typeScript:
      - name: ResourceUsageOperations
        fullName: ResourceUsageOperations
        uid: '@azure/arm-cdn.ResourceUsageOperations'
  - uid: ServiceCallback<@azure/arm-cdn.CheckNameAvailabilityOutput>
    name: CheckNameAvailabilityOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityOutput
        fullName: CheckNameAvailabilityOutput
        uid: '@azure/arm-cdn.CheckNameAvailabilityOutput'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cdn.ValidateProbeOutput>
    name: ValidateProbeOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ValidateProbeOutput
        fullName: ValidateProbeOutput
        uid: '@azure/arm-cdn.ValidateProbeOutput'
      - name: '>'
        fullName: '>'
