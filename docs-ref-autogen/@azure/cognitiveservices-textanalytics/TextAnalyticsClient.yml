### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient'
    name: TextAnalyticsClient
    fullName: TextAnalyticsClient
    children:
      - >-
        @azure/cognitiveservices-textanalytics.TextAnalyticsClient.detectLanguage
      - >-
        @azure/cognitiveservices-textanalytics.TextAnalyticsClient.detectLanguage_2
      - >-
        @azure/cognitiveservices-textanalytics.TextAnalyticsClient.detectLanguage_1
      - '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.entities'
      - '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.entities_2'
      - '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.entities_1'
      - '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.keyPhrases'
      - '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.keyPhrases_2'
      - '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.keyPhrases_1'
      - '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.sentiment'
      - '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.sentiment_2'
      - '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.sentiment_1'
      - '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.constructor'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-textanalytics.TextAnalyticsClientContext'
    package: '@azure/cognitiveservices-textanalytics'
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.detectLanguage'
    name: 'detectLanguage(BatchInput, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Scores close to 1 indicate 100% certainty that the identified language is
      true. A total of 120

      languages are supported.
    syntax:
      content: >-
        function detectLanguage(input: BatchInput, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.BatchInput'
          description: Collection of documents to analyze.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectLanguageResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: >-
      @azure/cognitiveservices-textanalytics.TextAnalyticsClient.detectLanguage_2
    name: >-
      detectLanguage(BatchInput, RequestOptionsBase,
      ServiceCallback<LanguageBatchResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectLanguage(input: BatchInput, options: RequestOptionsBase,
        callback: ServiceCallback<LanguageBatchResult>)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.BatchInput'
          description: Collection of documents to analyze.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-textanalytics.LanguageBatchResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.DetectLanguageResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: >-
      @azure/cognitiveservices-textanalytics.TextAnalyticsClient.detectLanguage_1
    name: 'detectLanguage(BatchInput, ServiceCallback<LanguageBatchResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function detectLanguage(input: BatchInput, callback:
        ServiceCallback<LanguageBatchResult>)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.BatchInput'
          description: Collection of documents to analyze.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-textanalytics.LanguageBatchResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.DetectLanguageResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.entities'
    name: 'entities(MultiLanguageBatchInput, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      To get even more information on each recognized entity we recommend using
      the Bing Entity Search

      API by querying for the recognized entities names. See the <a

      href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/text-analytics-supported-languages">Supported

      languages in Text Analytics API</a> for the list of enabled languages.
    syntax:
      content: >-
        function entities(input: MultiLanguageBatchInput, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.MultiLanguageBatchInput'
          description: Collection of documents to analyze.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EntitiesResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.entities_2'
    name: >-
      entities(MultiLanguageBatchInput, RequestOptionsBase,
      ServiceCallback<EntitiesBatchResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function entities(input: MultiLanguageBatchInput, options:
        RequestOptionsBase, callback: ServiceCallback<EntitiesBatchResult>)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.MultiLanguageBatchInput'
          description: Collection of documents to analyze.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-textanalytics.EntitiesBatchResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.EntitiesResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.entities_1'
    name: 'entities(MultiLanguageBatchInput, ServiceCallback<EntitiesBatchResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function entities(input: MultiLanguageBatchInput, callback:
        ServiceCallback<EntitiesBatchResult>)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.MultiLanguageBatchInput'
          description: Collection of documents to analyze.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-textanalytics.EntitiesBatchResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.EntitiesResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.keyPhrases'
    name: 'keyPhrases(MultiLanguageBatchInput, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      See the <a

      href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages">Text

      Analytics Documentation</a> for details about the languages that are
      supported by key phrase

      extraction.
    syntax:
      content: >-
        function keyPhrases(input: MultiLanguageBatchInput, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.MultiLanguageBatchInput'
          description: >-
            Collection of documents to analyze. Documents can now contain a
            language field to

            indicate the text language
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.KeyPhrasesResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.keyPhrases_2'
    name: >-
      keyPhrases(MultiLanguageBatchInput, RequestOptionsBase,
      ServiceCallback<KeyPhraseBatchResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function keyPhrases(input: MultiLanguageBatchInput, options:
        RequestOptionsBase, callback: ServiceCallback<KeyPhraseBatchResult>)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.MultiLanguageBatchInput'
          description: >-
            Collection of documents to analyze. Documents can now contain a
            language field to

            indicate the text language
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-textanalytics.KeyPhraseBatchResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.KeyPhrasesResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.keyPhrases_1'
    name: 'keyPhrases(MultiLanguageBatchInput, ServiceCallback<KeyPhraseBatchResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function keyPhrases(input: MultiLanguageBatchInput, callback:
        ServiceCallback<KeyPhraseBatchResult>)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.MultiLanguageBatchInput'
          description: >-
            Collection of documents to analyze. Documents can now contain a
            language field to

            indicate the text language
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-textanalytics.KeyPhraseBatchResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.KeyPhrasesResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.sentiment'
    name: 'sentiment(MultiLanguageBatchInput, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Scores close to 1 indicate positive sentiment, while scores close to 0
      indicate negative

      sentiment. A score of 0.5 indicates the lack of sentiment (e.g. a factoid
      statement). See the <a

      href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages">Text

      Analytics Documentation</a> for details about the languages that are
      supported by sentiment

      analysis.
    syntax:
      content: >-
        function sentiment(input: MultiLanguageBatchInput, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.MultiLanguageBatchInput'
          description: Collection of documents to analyze.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SentimentResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.sentiment_2'
    name: >-
      sentiment(MultiLanguageBatchInput, RequestOptionsBase,
      ServiceCallback<SentimentBatchResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sentiment(input: MultiLanguageBatchInput, options:
        RequestOptionsBase, callback: ServiceCallback<SentimentBatchResult>)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.MultiLanguageBatchInput'
          description: Collection of documents to analyze.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-textanalytics.SentimentBatchResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.SentimentResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.sentiment_1'
    name: 'sentiment(MultiLanguageBatchInput, ServiceCallback<SentimentBatchResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sentiment(input: MultiLanguageBatchInput, callback:
        ServiceCallback<SentimentBatchResult>)
      parameters:
        - id: input
          type:
            - '@azure/cognitiveservices-textanalytics.MultiLanguageBatchInput'
          description: Collection of documents to analyze.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/cognitiveservices-textanalytics.SentimentBatchResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.SentimentResponse>
    package: '@azure/cognitiveservices-textanalytics'
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClient.constructor'
    name: >-
      TextAnalyticsClient(string, ServiceClientCredentials,
      msRest.ServiceClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the TextAnalyticsClient class.
    syntax:
      content: >-
        new TextAnalyticsClient(endpoint: string, credentials:
        ServiceClientCredentials, options?: msRest.ServiceClientOptions)
      parameters:
        - id: endpoint
          type:
            - string
          description: >-
            Supported Cognitive Services endpoints (protocol and hostname, for
            example:

            https://westus.api.cognitive.microsoft.com).
        - id: credentials
          type:
            - ServiceClientCredentials
          description: >-
            Subscription credentials which uniquely identify client
            subscription.
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-textanalytics'
references:
  - uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClientContext'
    name: TextAnalyticsClientContext
    spec.typeScript:
      - name: TextAnalyticsClientContext
        fullName: TextAnalyticsClientContext
        uid: '@azure/cognitiveservices-textanalytics.TextAnalyticsClientContext'
  - uid: '@azure/cognitiveservices-textanalytics.BatchInput'
    name: BatchInput
    spec.typeScript:
      - name: BatchInput
        fullName: BatchInput
        uid: '@azure/cognitiveservices-textanalytics.BatchInput'
  - uid: >-
      ServiceCallback<@azure/cognitiveservices-textanalytics.LanguageBatchResult>
    name: LanguageBatchResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LanguageBatchResult
        fullName: LanguageBatchResult
        uid: '@azure/cognitiveservices-textanalytics.LanguageBatchResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-textanalytics.MultiLanguageBatchInput'
    name: MultiLanguageBatchInput
    spec.typeScript:
      - name: MultiLanguageBatchInput
        fullName: MultiLanguageBatchInput
        uid: '@azure/cognitiveservices-textanalytics.MultiLanguageBatchInput'
  - uid: >-
      ServiceCallback<@azure/cognitiveservices-textanalytics.EntitiesBatchResult>
    name: EntitiesBatchResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EntitiesBatchResult
        fullName: EntitiesBatchResult
        uid: '@azure/cognitiveservices-textanalytics.EntitiesBatchResult'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/cognitiveservices-textanalytics.KeyPhraseBatchResult>
    name: KeyPhraseBatchResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: KeyPhraseBatchResult
        fullName: KeyPhraseBatchResult
        uid: '@azure/cognitiveservices-textanalytics.KeyPhraseBatchResult'
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<@azure/cognitiveservices-textanalytics.SentimentBatchResult>
    name: SentimentBatchResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SentimentBatchResult
        fullName: SentimentBatchResult
        uid: '@azure/cognitiveservices-textanalytics.SentimentBatchResult'
      - name: '>'
        fullName: '>'
