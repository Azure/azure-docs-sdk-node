### YamlMime:TSType
name: Configurations
uid: '@azure/arm-nginx.Configurations'
package: '@azure/arm-nginx'
summary: Interface representing a Configurations.
fullName: Configurations
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string,
      ConfigurationsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-nginx.Configurations.beginCreateOrUpdate'
    package: '@azure/arm-nginx'
    summary: Create or update the Nginx configuration for given Nginx deployment
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, deploymentName:
        string, configurationName: string, options?:
        ConfigurationsCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<ConfigurationsCreateOrUpdateResponse>,
        ConfigurationsCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: configurationName
          type: string
          description: >-
            The name of configuration, only 'default' is supported value due to
            the
                                     singleton of Nginx conf
        - id: options
          type: >-
            <xref
            uid="@azure/arm-nginx.ConfigurationsCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-nginx.ConfigurationsCreateOrUpdateResponse" />&gt;,
          <xref uid="@azure/arm-nginx.ConfigurationsCreateOrUpdateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string,
      ConfigurationsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-nginx.Configurations.beginCreateOrUpdateAndWait'
    package: '@azure/arm-nginx'
    summary: Create or update the Nginx configuration for given Nginx deployment
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        deploymentName: string, configurationName: string, options?:
        ConfigurationsCreateOrUpdateOptionalParams):
        Promise<ConfigurationsCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: configurationName
          type: string
          description: >-
            The name of configuration, only 'default' is supported value due to
            the
                                     singleton of Nginx conf
        - id: options
          type: >-
            <xref
            uid="@azure/arm-nginx.ConfigurationsCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-nginx.ConfigurationsCreateOrUpdateResponse" />&gt;
  - name: 'beginDelete(string, string, string, ConfigurationsDeleteOptionalParams)'
    uid: '@azure/arm-nginx.Configurations.beginDelete'
    package: '@azure/arm-nginx'
    summary: Reset the Nginx configuration of given Nginx deployment to default
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, deploymentName: string,
        configurationName: string, options?:
        ConfigurationsDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: configurationName
          type: string
          description: >-
            The name of configuration, only 'default' is supported value due to
            the
                                     singleton of Nginx conf
        - id: options
          type: <xref uid="@azure/arm-nginx.ConfigurationsDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginDeleteAndWait(string, string, string,
      ConfigurationsDeleteOptionalParams)
    uid: '@azure/arm-nginx.Configurations.beginDeleteAndWait'
    package: '@azure/arm-nginx'
    summary: Reset the Nginx configuration of given Nginx deployment to default
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, deploymentName:
        string, configurationName: string, options?:
        ConfigurationsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: configurationName
          type: string
          description: >-
            The name of configuration, only 'default' is supported value due to
            the
                                     singleton of Nginx conf
        - id: options
          type: <xref uid="@azure/arm-nginx.ConfigurationsDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, string, string, ConfigurationsGetOptionalParams)'
    uid: '@azure/arm-nginx.Configurations.get'
    package: '@azure/arm-nginx'
    summary: Get the Nginx configuration of given Nginx deployment
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, deploymentName: string,
        configurationName: string, options?: ConfigurationsGetOptionalParams):
        Promise<ConfigurationsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: configurationName
          type: string
          description: >-
            The name of configuration, only 'default' is supported value due to
            the
                                     singleton of Nginx conf
        - id: options
          type: <xref uid="@azure/arm-nginx.ConfigurationsGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-nginx.ConfigurationsGetResponse"
          />&gt;
  - name: 'list(string, string, ConfigurationsListOptionalParams)'
    uid: '@azure/arm-nginx.Configurations.list'
    package: '@azure/arm-nginx'
    summary: List the Nginx configuration of given Nginx deployment.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, deploymentName: string,
        options?: ConfigurationsListOptionalParams):
        PagedAsyncIterableIterator<NginxConfiguration>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: options
          type: <xref uid="@azure/arm-nginx.ConfigurationsListOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-nginx.NginxConfiguration" />&gt;
