### YamlMime:TSType
name: Certificates
uid: '@azure/arm-nginx.Certificates'
package: '@azure/arm-nginx'
summary: Interface representing a Certificates.
fullName: Certificates
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'beginCreate(string, string, string, CertificatesCreateOptionalParams)'
    uid: '@azure/arm-nginx.Certificates.beginCreate'
    package: '@azure/arm-nginx'
    summary: Create or update the Nginx certificates for given Nginx deployment
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, deploymentName: string,
        certificateName: string, options?: CertificatesCreateOptionalParams):
        Promise<PollerLike<PollOperationState<CertificatesCreateResponse>,
        CertificatesCreateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: certificateName
          type: string
          description: The name of certificate
        - id: options
          type: <xref uid="@azure/arm-nginx.CertificatesCreateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-nginx.CertificatesCreateResponse" />&gt;, <xref
          uid="@azure/arm-nginx.CertificatesCreateResponse" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, string,
      CertificatesCreateOptionalParams)
    uid: '@azure/arm-nginx.Certificates.beginCreateAndWait'
    package: '@azure/arm-nginx'
    summary: Create or update the Nginx certificates for given Nginx deployment
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, deploymentName:
        string, certificateName: string, options?:
        CertificatesCreateOptionalParams): Promise<CertificatesCreateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: certificateName
          type: string
          description: The name of certificate
        - id: options
          type: <xref uid="@azure/arm-nginx.CertificatesCreateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-nginx.CertificatesCreateResponse"
          />&gt;
  - name: 'beginDelete(string, string, string, CertificatesDeleteOptionalParams)'
    uid: '@azure/arm-nginx.Certificates.beginDelete'
    package: '@azure/arm-nginx'
    summary: Deletes a certificate from the nginx deployment
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, deploymentName: string,
        certificateName: string, options?: CertificatesDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: certificateName
          type: string
          description: The name of certificate
        - id: options
          type: <xref uid="@azure/arm-nginx.CertificatesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginDeleteAndWait(string, string, string,
      CertificatesDeleteOptionalParams)
    uid: '@azure/arm-nginx.Certificates.beginDeleteAndWait'
    package: '@azure/arm-nginx'
    summary: Deletes a certificate from the nginx deployment
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, deploymentName:
        string, certificateName: string, options?:
        CertificatesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: certificateName
          type: string
          description: The name of certificate
        - id: options
          type: <xref uid="@azure/arm-nginx.CertificatesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, string, string, CertificatesGetOptionalParams)'
    uid: '@azure/arm-nginx.Certificates.get'
    package: '@azure/arm-nginx'
    summary: Get a certificate of given Nginx deployment
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, deploymentName: string,
        certificateName: string, options?: CertificatesGetOptionalParams):
        Promise<CertificatesGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: certificateName
          type: string
          description: The name of certificate
        - id: options
          type: <xref uid="@azure/arm-nginx.CertificatesGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-nginx.CertificatesGetResponse" />&gt;
  - name: 'list(string, string, CertificatesListOptionalParams)'
    uid: '@azure/arm-nginx.Certificates.list'
    package: '@azure/arm-nginx'
    summary: List all certificates of given Nginx deployment
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, deploymentName: string,
        options?: CertificatesListOptionalParams):
        PagedAsyncIterableIterator<NginxCertificate>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentName
          type: string
          description: The name of targeted Nginx deployment
        - id: options
          type: <xref uid="@azure/arm-nginx.CertificatesListOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-nginx.NginxCertificate" />&gt;
