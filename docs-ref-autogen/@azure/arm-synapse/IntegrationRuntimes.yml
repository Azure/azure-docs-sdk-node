### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-synapse.IntegrationRuntimes'
    name: IntegrationRuntimes
    fullName: IntegrationRuntimes
    children:
      - '@azure/arm-synapse.IntegrationRuntimes.create_2'
      - '@azure/arm-synapse.IntegrationRuntimes.create'
      - '@azure/arm-synapse.IntegrationRuntimes.create_1'
      - '@azure/arm-synapse.IntegrationRuntimes.deleteMethod'
      - '@azure/arm-synapse.IntegrationRuntimes.deleteMethod_2'
      - '@azure/arm-synapse.IntegrationRuntimes.deleteMethod_1'
      - '@azure/arm-synapse.IntegrationRuntimes.get_2'
      - '@azure/arm-synapse.IntegrationRuntimes.get'
      - '@azure/arm-synapse.IntegrationRuntimes.get_1'
      - '@azure/arm-synapse.IntegrationRuntimes.constructor'
      - '@azure/arm-synapse.IntegrationRuntimes.listByWorkspace'
      - '@azure/arm-synapse.IntegrationRuntimes.listByWorkspace_2'
      - '@azure/arm-synapse.IntegrationRuntimes.listByWorkspace_1'
      - '@azure/arm-synapse.IntegrationRuntimes.listByWorkspaceNext'
      - '@azure/arm-synapse.IntegrationRuntimes.listByWorkspaceNext_2'
      - '@azure/arm-synapse.IntegrationRuntimes.listByWorkspaceNext_1'
      - '@azure/arm-synapse.IntegrationRuntimes.start'
      - '@azure/arm-synapse.IntegrationRuntimes.start_2'
      - '@azure/arm-synapse.IntegrationRuntimes.start_1'
      - '@azure/arm-synapse.IntegrationRuntimes.stop'
      - '@azure/arm-synapse.IntegrationRuntimes.stop_2'
      - '@azure/arm-synapse.IntegrationRuntimes.stop_1'
      - '@azure/arm-synapse.IntegrationRuntimes.update'
      - '@azure/arm-synapse.IntegrationRuntimes.update_2'
      - '@azure/arm-synapse.IntegrationRuntimes.update_1'
      - '@azure/arm-synapse.IntegrationRuntimes.upgrade'
      - '@azure/arm-synapse.IntegrationRuntimes.upgrade_2'
      - '@azure/arm-synapse.IntegrationRuntimes.upgrade_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a IntegrationRuntimes.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.create_2'
    name: >-
      create(string, string, string, IntegrationRuntimeResource,
      IntegrationRuntimesCreateOptionalParams,
      ServiceCallback<IntegrationRuntimeResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, integrationRuntime:
        IntegrationRuntimeResource, options:
        IntegrationRuntimesCreateOptionalParams, callback:
        ServiceCallback<IntegrationRuntimeResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: integrationRuntime
          type:
            - '@azure/arm-synapse.IntegrationRuntimeResource'
          description: Integration runtime resource definition.
        - id: options
          type:
            - '@azure/arm-synapse.IntegrationRuntimesCreateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IntegrationRuntimeResource>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.create'
    name: >-
      create(string, string, string, IntegrationRuntimeResource,
      Models.IntegrationRuntimesCreateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create an integration runtime
    syntax:
      content: >-
        function create(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, integrationRuntime:
        IntegrationRuntimeResource, options?:
        Models.IntegrationRuntimesCreateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: integrationRuntime
          type:
            - '@azure/arm-synapse.IntegrationRuntimeResource'
          description: Integration runtime resource definition.
        - id: options
          type:
            - Models.IntegrationRuntimesCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IntegrationRuntimesCreateResponse>
        description: Promise<Models.IntegrationRuntimesCreateResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.create_1'
    name: >-
      create(string, string, string, IntegrationRuntimeResource,
      ServiceCallback<IntegrationRuntimeResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, integrationRuntime:
        IntegrationRuntimeResource, callback:
        ServiceCallback<IntegrationRuntimeResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: integrationRuntime
          type:
            - '@azure/arm-synapse.IntegrationRuntimeResource'
          description: Integration runtime resource definition.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IntegrationRuntimeResource>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete an integration runtime
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.deleteMethod_1'
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.get_2'
    name: >-
      get(string, string, string, IntegrationRuntimesGetOptionalParams,
      ServiceCallback<IntegrationRuntimeResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options:
        IntegrationRuntimesGetOptionalParams, callback:
        ServiceCallback<IntegrationRuntimeResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - '@azure/arm-synapse.IntegrationRuntimesGetOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IntegrationRuntimeResource>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.get'
    name: 'get(string, string, string, Models.IntegrationRuntimesGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get an integration runtime
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options?:
        Models.IntegrationRuntimesGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - Models.IntegrationRuntimesGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IntegrationRuntimesGetResponse>
        description: Promise<Models.IntegrationRuntimesGetResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.get_1'
    name: 'get(string, string, string, ServiceCallback<IntegrationRuntimeResource>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, callback:
        ServiceCallback<IntegrationRuntimeResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IntegrationRuntimeResource>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.constructor'
    name: IntegrationRuntimes(SynapseManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a IntegrationRuntimes.
    syntax:
      content: 'new IntegrationRuntimes(client: SynapseManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-synapse.SynapseManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.listByWorkspace'
    name: 'listByWorkspace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all integration runtimes
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IntegrationRuntimesListByWorkspaceResponse>
        description: Promise<Models.IntegrationRuntimesListByWorkspaceResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.listByWorkspace_2'
    name: >-
      listByWorkspace(string, string, RequestOptionsBase,
      ServiceCallback<IntegrationRuntimeListResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<IntegrationRuntimeListResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IntegrationRuntimeListResponse>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.listByWorkspace_1'
    name: >-
      listByWorkspace(string, string,
      ServiceCallback<IntegrationRuntimeListResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, callback: ServiceCallback<IntegrationRuntimeListResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IntegrationRuntimeListResponse>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.listByWorkspaceNext'
    name: 'listByWorkspaceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all integration runtimes
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IntegrationRuntimesListByWorkspaceNextResponse>
        description: Promise<Models.IntegrationRuntimesListByWorkspaceNextResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.listByWorkspaceNext_2'
    name: >-
      listByWorkspaceNext(string, RequestOptionsBase,
      ServiceCallback<IntegrationRuntimeListResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<IntegrationRuntimeListResponse>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IntegrationRuntimeListResponse>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.listByWorkspaceNext_1'
    name: >-
      listByWorkspaceNext(string,
      ServiceCallback<IntegrationRuntimeListResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, callback:
        ServiceCallback<IntegrationRuntimeListResponse>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IntegrationRuntimeListResponse>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.start'
    name: 'start(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Start an integration runtime
    syntax:
      content: >-
        function start(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IntegrationRuntimesStartResponse>
        description: Promise<Models.IntegrationRuntimesStartResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.start_2'
    name: >-
      start(string, string, string, RequestOptionsBase,
      ServiceCallback<IntegrationRuntimeStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function start(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options: RequestOptionsBase, callback:
        ServiceCallback<IntegrationRuntimeStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-synapse.IntegrationRuntimeStatusResponse>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.start_1'
    name: >-
      start(string, string, string,
      ServiceCallback<IntegrationRuntimeStatusResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function start(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, callback:
        ServiceCallback<IntegrationRuntimeStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-synapse.IntegrationRuntimeStatusResponse>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.stop'
    name: 'stop(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stop an integration runtime
    syntax:
      content: >-
        function stop(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.stop_2'
    name: 'stop(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stop(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.stop_1'
    name: 'stop(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function stop(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.update'
    name: >-
      update(string, string, string, UpdateIntegrationRuntimeRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an integration runtime
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, updateIntegrationRuntimeRequest:
        UpdateIntegrationRuntimeRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: updateIntegrationRuntimeRequest
          type:
            - '@azure/arm-synapse.UpdateIntegrationRuntimeRequest'
          description: The parameters for updating an integration runtime.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IntegrationRuntimesUpdateResponse>
        description: Promise<Models.IntegrationRuntimesUpdateResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.update_2'
    name: >-
      update(string, string, string, UpdateIntegrationRuntimeRequest,
      RequestOptionsBase, ServiceCallback<IntegrationRuntimeResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, updateIntegrationRuntimeRequest:
        UpdateIntegrationRuntimeRequest, options: RequestOptionsBase, callback:
        ServiceCallback<IntegrationRuntimeResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: updateIntegrationRuntimeRequest
          type:
            - '@azure/arm-synapse.UpdateIntegrationRuntimeRequest'
          description: The parameters for updating an integration runtime.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IntegrationRuntimeResource>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.update_1'
    name: >-
      update(string, string, string, UpdateIntegrationRuntimeRequest,
      ServiceCallback<IntegrationRuntimeResource>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, updateIntegrationRuntimeRequest:
        UpdateIntegrationRuntimeRequest, callback:
        ServiceCallback<IntegrationRuntimeResource>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: updateIntegrationRuntimeRequest
          type:
            - '@azure/arm-synapse.UpdateIntegrationRuntimeRequest'
          description: The parameters for updating an integration runtime.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IntegrationRuntimeResource>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.upgrade'
    name: 'upgrade(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Upgrade an integration runtime
    syntax:
      content: >-
        function upgrade(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.upgrade_2'
    name: 'upgrade(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function upgrade(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimes.upgrade_1'
    name: 'upgrade(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function upgrade(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-synapse'
references:
  - uid: '@azure/arm-synapse.SynapseManagementClientContext'
    name: SynapseManagementClientContext
    spec.typeScript:
      - name: SynapseManagementClientContext
        fullName: SynapseManagementClientContext
        uid: '@azure/arm-synapse.SynapseManagementClientContext'
  - uid: '@azure/arm-synapse.IntegrationRuntimeResource'
    name: IntegrationRuntimeResource
    spec.typeScript:
      - name: IntegrationRuntimeResource
        fullName: IntegrationRuntimeResource
        uid: '@azure/arm-synapse.IntegrationRuntimeResource'
  - uid: ServiceCallback<@azure/arm-synapse.IntegrationRuntimeResource>
    name: IntegrationRuntimeResource>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IntegrationRuntimeResource
        fullName: IntegrationRuntimeResource
        uid: '@azure/arm-synapse.IntegrationRuntimeResource'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-synapse.IntegrationRuntimesCreateOptionalParams'
    name: IntegrationRuntimesCreateOptionalParams
    spec.typeScript:
      - name: IntegrationRuntimesCreateOptionalParams
        fullName: IntegrationRuntimesCreateOptionalParams
        uid: '@azure/arm-synapse.IntegrationRuntimesCreateOptionalParams'
  - uid: '@azure/arm-synapse.IntegrationRuntimesGetOptionalParams'
    name: IntegrationRuntimesGetOptionalParams
    spec.typeScript:
      - name: IntegrationRuntimesGetOptionalParams
        fullName: IntegrationRuntimesGetOptionalParams
        uid: '@azure/arm-synapse.IntegrationRuntimesGetOptionalParams'
  - uid: ServiceCallback<@azure/arm-synapse.IntegrationRuntimeListResponse>
    name: IntegrationRuntimeListResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IntegrationRuntimeListResponse
        fullName: IntegrationRuntimeListResponse
        uid: '@azure/arm-synapse.IntegrationRuntimeListResponse'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-synapse.IntegrationRuntimeStatusResponse>
    name: IntegrationRuntimeStatusResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IntegrationRuntimeStatusResponse
        fullName: IntegrationRuntimeStatusResponse
        uid: '@azure/arm-synapse.IntegrationRuntimeStatusResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-synapse.UpdateIntegrationRuntimeRequest'
    name: UpdateIntegrationRuntimeRequest
    spec.typeScript:
      - name: UpdateIntegrationRuntimeRequest
        fullName: UpdateIntegrationRuntimeRequest
        uid: '@azure/arm-synapse.UpdateIntegrationRuntimeRequest'
