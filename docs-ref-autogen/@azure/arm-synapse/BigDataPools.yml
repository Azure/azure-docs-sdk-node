### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-synapse.BigDataPools'
    name: BigDataPools
    fullName: BigDataPools
    children:
      - '@azure/arm-synapse.BigDataPools.beginCreateOrUpdate'
      - '@azure/arm-synapse.BigDataPools.beginDeleteMethod'
      - '@azure/arm-synapse.BigDataPools.constructor'
      - '@azure/arm-synapse.BigDataPools.createOrUpdate'
      - '@azure/arm-synapse.BigDataPools.deleteMethod'
      - '@azure/arm-synapse.BigDataPools.get'
      - '@azure/arm-synapse.BigDataPools.get_2'
      - '@azure/arm-synapse.BigDataPools.get_1'
      - '@azure/arm-synapse.BigDataPools.listByWorkspace'
      - '@azure/arm-synapse.BigDataPools.listByWorkspace_2'
      - '@azure/arm-synapse.BigDataPools.listByWorkspace_1'
      - '@azure/arm-synapse.BigDataPools.listByWorkspaceNext'
      - '@azure/arm-synapse.BigDataPools.listByWorkspaceNext_2'
      - '@azure/arm-synapse.BigDataPools.listByWorkspaceNext_1'
      - '@azure/arm-synapse.BigDataPools.update'
      - '@azure/arm-synapse.BigDataPools.update_2'
      - '@azure/arm-synapse.BigDataPools.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a BigDataPools.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string, BigDataPoolResourceInfo,
      Models.BigDataPoolsBeginCreateOrUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a new Big Data pool.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, workspaceName:
        string, bigDataPoolName: string, bigDataPoolInfo:
        BigDataPoolResourceInfo, options?:
        Models.BigDataPoolsBeginCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: bigDataPoolName
          type:
            - string
          description: Big Data pool name
        - id: bigDataPoolInfo
          type:
            - '@azure/arm-synapse.BigDataPoolResourceInfo'
          description: The Big Data pool to create.
        - id: options
          type:
            - Models.BigDataPoolsBeginCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a Big Data pool from the workspace.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, workspaceName:
        string, bigDataPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: bigDataPoolName
          type:
            - string
          description: Big Data pool name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.constructor'
    name: BigDataPools(SynapseManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a BigDataPools.
    syntax:
      content: 'new BigDataPools(client: SynapseManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-synapse.SynapseManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, BigDataPoolResourceInfo,
      Models.BigDataPoolsCreateOrUpdateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a new Big Data pool.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, bigDataPoolName: string, bigDataPoolInfo:
        BigDataPoolResourceInfo, options?:
        Models.BigDataPoolsCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: bigDataPoolName
          type:
            - string
          description: Big Data pool name
        - id: bigDataPoolInfo
          type:
            - '@azure/arm-synapse.BigDataPoolResourceInfo'
          description: The Big Data pool to create.
        - id: options
          type:
            - Models.BigDataPoolsCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BigDataPoolsCreateOrUpdateResponse>
        description: Promise<Models.BigDataPoolsCreateOrUpdateResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a Big Data pool from the workspace.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        bigDataPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: bigDataPoolName
          type:
            - string
          description: Big Data pool name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BigDataPoolsDeleteMethodResponse>
        description: Promise<Models.BigDataPoolsDeleteMethodResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a Big Data pool.
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        bigDataPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: bigDataPoolName
          type:
            - string
          description: Big Data pool name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BigDataPoolsGetResponse>
        description: Promise<Models.BigDataPoolsGetResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<BigDataPoolResourceInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        bigDataPoolName: string, options: RequestOptionsBase, callback:
        ServiceCallback<BigDataPoolResourceInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: bigDataPoolName
          type:
            - string
          description: Big Data pool name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.BigDataPoolResourceInfo>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.get_1'
    name: 'get(string, string, string, ServiceCallback<BigDataPoolResourceInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        bigDataPoolName: string, callback:
        ServiceCallback<BigDataPoolResourceInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: bigDataPoolName
          type:
            - string
          description: Big Data pool name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.BigDataPoolResourceInfo>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.listByWorkspace'
    name: 'listByWorkspace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List Big Data pools in a workspace.
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BigDataPoolsListByWorkspaceResponse>
        description: Promise<Models.BigDataPoolsListByWorkspaceResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.listByWorkspace_2'
    name: >-
      listByWorkspace(string, string, RequestOptionsBase,
      ServiceCallback<BigDataPoolResourceInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<BigDataPoolResourceInfoListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-synapse.BigDataPoolResourceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.listByWorkspace_1'
    name: >-
      listByWorkspace(string, string,
      ServiceCallback<BigDataPoolResourceInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, callback: ServiceCallback<BigDataPoolResourceInfoListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-synapse.BigDataPoolResourceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.listByWorkspaceNext'
    name: 'listByWorkspaceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List Big Data pools in a workspace.
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BigDataPoolsListByWorkspaceNextResponse>
        description: Promise<Models.BigDataPoolsListByWorkspaceNextResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.listByWorkspaceNext_2'
    name: >-
      listByWorkspaceNext(string, RequestOptionsBase,
      ServiceCallback<BigDataPoolResourceInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<BigDataPoolResourceInfoListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-synapse.BigDataPoolResourceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.listByWorkspaceNext_1'
    name: >-
      listByWorkspaceNext(string,
      ServiceCallback<BigDataPoolResourceInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, callback:
        ServiceCallback<BigDataPoolResourceInfoListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-synapse.BigDataPoolResourceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.update'
    name: >-
      update(string, string, string, BigDataPoolPatchInfo,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Patch a Big Data pool.
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        bigDataPoolName: string, bigDataPoolPatchInfo: BigDataPoolPatchInfo,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: bigDataPoolName
          type:
            - string
          description: Big Data pool name
        - id: bigDataPoolPatchInfo
          type:
            - '@azure/arm-synapse.BigDataPoolPatchInfo'
          description: The updated Big Data pool properties
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BigDataPoolsUpdateResponse>
        description: Promise<Models.BigDataPoolsUpdateResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.update_2'
    name: >-
      update(string, string, string, BigDataPoolPatchInfo, RequestOptionsBase,
      ServiceCallback<BigDataPoolResourceInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        bigDataPoolName: string, bigDataPoolPatchInfo: BigDataPoolPatchInfo,
        options: RequestOptionsBase, callback:
        ServiceCallback<BigDataPoolResourceInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: bigDataPoolName
          type:
            - string
          description: Big Data pool name
        - id: bigDataPoolPatchInfo
          type:
            - '@azure/arm-synapse.BigDataPoolPatchInfo'
          description: The updated Big Data pool properties
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.BigDataPoolResourceInfo>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.BigDataPools.update_1'
    name: >-
      update(string, string, string, BigDataPoolPatchInfo,
      ServiceCallback<BigDataPoolResourceInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        bigDataPoolName: string, bigDataPoolPatchInfo: BigDataPoolPatchInfo,
        callback: ServiceCallback<BigDataPoolResourceInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: bigDataPoolName
          type:
            - string
          description: Big Data pool name
        - id: bigDataPoolPatchInfo
          type:
            - '@azure/arm-synapse.BigDataPoolPatchInfo'
          description: The updated Big Data pool properties
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.BigDataPoolResourceInfo>
          description: |
            The callback
    package: '@azure/arm-synapse'
references:
  - uid: '@azure/arm-synapse.SynapseManagementClientContext'
    name: SynapseManagementClientContext
    spec.typeScript:
      - name: SynapseManagementClientContext
        fullName: SynapseManagementClientContext
        uid: '@azure/arm-synapse.SynapseManagementClientContext'
  - uid: '@azure/arm-synapse.BigDataPoolResourceInfo'
    name: BigDataPoolResourceInfo
    spec.typeScript:
      - name: BigDataPoolResourceInfo
        fullName: BigDataPoolResourceInfo
        uid: '@azure/arm-synapse.BigDataPoolResourceInfo'
  - uid: ServiceCallback<@azure/arm-synapse.BigDataPoolResourceInfo>
    name: BigDataPoolResourceInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BigDataPoolResourceInfo
        fullName: BigDataPoolResourceInfo
        uid: '@azure/arm-synapse.BigDataPoolResourceInfo'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-synapse.BigDataPoolResourceInfoListResult>
    name: BigDataPoolResourceInfoListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BigDataPoolResourceInfoListResult
        fullName: BigDataPoolResourceInfoListResult
        uid: '@azure/arm-synapse.BigDataPoolResourceInfoListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-synapse.BigDataPoolPatchInfo'
    name: BigDataPoolPatchInfo
    spec.typeScript:
      - name: BigDataPoolPatchInfo
        fullName: BigDataPoolPatchInfo
        uid: '@azure/arm-synapse.BigDataPoolPatchInfo'
