### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-synapse.SqlPools'
    name: SqlPools
    fullName: SqlPools
    children:
      - '@azure/arm-synapse.SqlPools.beginCreate'
      - '@azure/arm-synapse.SqlPools.beginDeleteMethod'
      - '@azure/arm-synapse.SqlPools.beginPause'
      - '@azure/arm-synapse.SqlPools.beginResume'
      - '@azure/arm-synapse.SqlPools.create'
      - '@azure/arm-synapse.SqlPools.deleteMethod'
      - '@azure/arm-synapse.SqlPools.get'
      - '@azure/arm-synapse.SqlPools.get_2'
      - '@azure/arm-synapse.SqlPools.get_1'
      - '@azure/arm-synapse.SqlPools.listByWorkspace'
      - '@azure/arm-synapse.SqlPools.listByWorkspace_2'
      - '@azure/arm-synapse.SqlPools.listByWorkspace_1'
      - '@azure/arm-synapse.SqlPools.listByWorkspaceNext'
      - '@azure/arm-synapse.SqlPools.listByWorkspaceNext_2'
      - '@azure/arm-synapse.SqlPools.listByWorkspaceNext_1'
      - '@azure/arm-synapse.SqlPools.pause'
      - '@azure/arm-synapse.SqlPools.rename'
      - '@azure/arm-synapse.SqlPools.rename_2'
      - '@azure/arm-synapse.SqlPools.rename_1'
      - '@azure/arm-synapse.SqlPools.resume'
      - '@azure/arm-synapse.SqlPools.constructor'
      - '@azure/arm-synapse.SqlPools.update'
      - '@azure/arm-synapse.SqlPools.update_2'
      - '@azure/arm-synapse.SqlPools.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a SqlPools.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.beginCreate'
    name: 'beginCreate(string, string, string, SqlPool, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a SQL pool
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, sqlPoolInfo: SqlPool, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: sqlPoolInfo
          type:
            - '@azure/arm-synapse.SqlPool'
          description: The SQL pool to create
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a SQL pool
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, workspaceName:
        string, sqlPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.beginPause'
    name: 'beginPause(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Pause a SQL pool
    syntax:
      content: >-
        function beginPause(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.beginResume'
    name: 'beginResume(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Resume a SQL pool
    syntax:
      content: >-
        function beginResume(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.create'
    name: 'create(string, string, string, SqlPool, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a SQL pool
    syntax:
      content: >-
        function create(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, sqlPoolInfo: SqlPool, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: sqlPoolInfo
          type:
            - '@azure/arm-synapse.SqlPool'
          description: The SQL pool to create
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SqlPoolsCreateResponse>
        description: Promise<Models.SqlPoolsCreateResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a SQL pool
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SqlPoolsDeleteMethodResponse>
        description: Promise<Models.SqlPoolsDeleteMethodResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get SQL pool properties
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SqlPoolsGetResponse>
        description: Promise<Models.SqlPoolsGetResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<SqlPool>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, options: RequestOptionsBase, callback:
        ServiceCallback<SqlPool>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPool>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.get_1'
    name: 'get(string, string, string, ServiceCallback<SqlPool>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, callback: ServiceCallback<SqlPool>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPool>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.listByWorkspace'
    name: 'listByWorkspace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all SQL pools
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SqlPoolsListByWorkspaceResponse>
        description: Promise<Models.SqlPoolsListByWorkspaceResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.listByWorkspace_2'
    name: >-
      listByWorkspace(string, string, RequestOptionsBase,
      ServiceCallback<SqlPoolInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<SqlPoolInfoListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPoolInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.listByWorkspace_1'
    name: 'listByWorkspace(string, string, ServiceCallback<SqlPoolInfoListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, callback: ServiceCallback<SqlPoolInfoListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPoolInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.listByWorkspaceNext'
    name: 'listByWorkspaceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List all SQL pools
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SqlPoolsListByWorkspaceNextResponse>
        description: Promise<Models.SqlPoolsListByWorkspaceNextResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.listByWorkspaceNext_2'
    name: >-
      listByWorkspaceNext(string, RequestOptionsBase,
      ServiceCallback<SqlPoolInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<SqlPoolInfoListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPoolInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.listByWorkspaceNext_1'
    name: 'listByWorkspaceNext(string, ServiceCallback<SqlPoolInfoListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, callback:
        ServiceCallback<SqlPoolInfoListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPoolInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.pause'
    name: 'pause(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Pause a SQL pool
    syntax:
      content: >-
        function pause(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SqlPoolsPauseResponse>
        description: Promise<Models.SqlPoolsPauseResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.rename'
    name: >-
      rename(string, string, string, ResourceMoveDefinition,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Rename a SQL pool.
    syntax:
      content: >-
        function rename(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, parameters: ResourceMoveDefinition, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: parameters
          type:
            - '@azure/arm-synapse.ResourceMoveDefinition'
          description: The resource move definition for renaming this Sql pool.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.rename_2'
    name: >-
      rename(string, string, string, ResourceMoveDefinition, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function rename(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, parameters: ResourceMoveDefinition, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: parameters
          type:
            - '@azure/arm-synapse.ResourceMoveDefinition'
          description: The resource move definition for renaming this Sql pool.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.rename_1'
    name: >-
      rename(string, string, string, ResourceMoveDefinition,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function rename(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, parameters: ResourceMoveDefinition, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: parameters
          type:
            - '@azure/arm-synapse.ResourceMoveDefinition'
          description: The resource move definition for renaming this Sql pool.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.resume'
    name: 'resume(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Resume a SQL pool
    syntax:
      content: >-
        function resume(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SqlPoolsResumeResponse>
        description: Promise<Models.SqlPoolsResumeResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.constructor'
    name: SqlPools(SynapseManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a SqlPools.
    syntax:
      content: 'new SqlPools(client: SynapseManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-synapse.SynapseManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.update'
    name: >-
      update(string, string, string, SqlPoolPatchInfo,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Apply a partial update to a SQL pool
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, sqlPoolInfo: SqlPoolPatchInfo, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: sqlPoolInfo
          type:
            - '@azure/arm-synapse.SqlPoolPatchInfo'
          description: The updated SQL pool properties
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SqlPoolsUpdateResponse>
        description: Promise<Models.SqlPoolsUpdateResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.update_2'
    name: >-
      update(string, string, string, SqlPoolPatchInfo, RequestOptionsBase,
      ServiceCallback<SqlPool>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, sqlPoolInfo: SqlPoolPatchInfo, options:
        RequestOptionsBase, callback: ServiceCallback<SqlPool>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: sqlPoolInfo
          type:
            - '@azure/arm-synapse.SqlPoolPatchInfo'
          description: The updated SQL pool properties
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPool>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPools.update_1'
    name: 'update(string, string, string, SqlPoolPatchInfo, ServiceCallback<SqlPool>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, sqlPoolInfo: SqlPoolPatchInfo, callback:
        ServiceCallback<SqlPool>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: sqlPoolInfo
          type:
            - '@azure/arm-synapse.SqlPoolPatchInfo'
          description: The updated SQL pool properties
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPool>
          description: |
            The callback
    package: '@azure/arm-synapse'
references:
  - uid: '@azure/arm-synapse.SynapseManagementClientContext'
    name: SynapseManagementClientContext
    spec.typeScript:
      - name: SynapseManagementClientContext
        fullName: SynapseManagementClientContext
        uid: '@azure/arm-synapse.SynapseManagementClientContext'
  - uid: '@azure/arm-synapse.SqlPool'
    name: SqlPool
    spec.typeScript:
      - name: SqlPool
        fullName: SqlPool
        uid: '@azure/arm-synapse.SqlPool'
  - uid: ServiceCallback<@azure/arm-synapse.SqlPool>
    name: SqlPool>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlPool
        fullName: SqlPool
        uid: '@azure/arm-synapse.SqlPool'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-synapse.SqlPoolInfoListResult>
    name: SqlPoolInfoListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlPoolInfoListResult
        fullName: SqlPoolInfoListResult
        uid: '@azure/arm-synapse.SqlPoolInfoListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-synapse.ResourceMoveDefinition'
    name: ResourceMoveDefinition
    spec.typeScript:
      - name: ResourceMoveDefinition
        fullName: ResourceMoveDefinition
        uid: '@azure/arm-synapse.ResourceMoveDefinition'
  - uid: '@azure/arm-synapse.SqlPoolPatchInfo'
    name: SqlPoolPatchInfo
    spec.typeScript:
      - name: SqlPoolPatchInfo
        fullName: SqlPoolPatchInfo
        uid: '@azure/arm-synapse.SqlPoolPatchInfo'
