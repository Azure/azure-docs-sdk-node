### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-synapse.IntegrationRuntimeCredentials'
    name: IntegrationRuntimeCredentials
    fullName: IntegrationRuntimeCredentials
    children:
      - '@azure/arm-synapse.IntegrationRuntimeCredentials.constructor'
      - '@azure/arm-synapse.IntegrationRuntimeCredentials.sync'
      - '@azure/arm-synapse.IntegrationRuntimeCredentials.sync_2'
      - '@azure/arm-synapse.IntegrationRuntimeCredentials.sync_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a IntegrationRuntimeCredentials.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimeCredentials.constructor'
    name: IntegrationRuntimeCredentials(SynapseManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a IntegrationRuntimeCredentials.
    syntax:
      content: >-
        new IntegrationRuntimeCredentials(client:
        SynapseManagementClientContext)
      parameters:
        - id: client
          type:
            - '@azure/arm-synapse.SynapseManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimeCredentials.sync'
    name: 'sync(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Force the integration runtime to synchronize credentials across
      integration runtime nodes, and

      this will override the credentials across all worker nodes with those
      available on the

      dispatcher node. If you already have the latest credential backup file,
      you should manually

      import it (preferred) on any self-hosted integration runtime node than
      using this API directly.
    syntax:
      content: >-
        function sync(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimeCredentials.sync_2'
    name: 'sync(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sync(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IntegrationRuntimeCredentials.sync_1'
    name: 'sync(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sync(resourceGroupName: string, workspaceName: string,
        integrationRuntimeName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: integrationRuntimeName
          type:
            - string
          description: Integration runtime name
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-synapse'
references:
  - uid: '@azure/arm-synapse.SynapseManagementClientContext'
    name: SynapseManagementClientContext
    spec.typeScript:
      - name: SynapseManagementClientContext
        fullName: SynapseManagementClientContext
        uid: '@azure/arm-synapse.SynapseManagementClientContext'
