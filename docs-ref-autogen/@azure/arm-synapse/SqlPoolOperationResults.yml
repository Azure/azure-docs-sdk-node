### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-synapse.SqlPoolOperationResults'
    name: SqlPoolOperationResults
    fullName: SqlPoolOperationResults
    children:
      - '@azure/arm-synapse.SqlPoolOperationResults.getLocationHeaderResult'
      - '@azure/arm-synapse.SqlPoolOperationResults.getLocationHeaderResult_2'
      - '@azure/arm-synapse.SqlPoolOperationResults.getLocationHeaderResult_1'
      - '@azure/arm-synapse.SqlPoolOperationResults.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a SqlPoolOperationResults.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPoolOperationResults.getLocationHeaderResult'
    name: >-
      getLocationHeaderResult(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the status of a SQL pool operation
    syntax:
      content: >-
        function getLocationHeaderResult(resourceGroupName: string,
        workspaceName: string, sqlPoolName: string, operationId: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: operationId
          type:
            - string
          description: Operation ID
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.SqlPoolOperationResultsGetLocationHeaderResultResponse>
        description: Promise<Models.SqlPoolOperationResultsGetLocationHeaderResultResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPoolOperationResults.getLocationHeaderResult_2'
    name: >-
      getLocationHeaderResult(string, string, string, string,
      RequestOptionsBase, ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getLocationHeaderResult(resourceGroupName: string,
        workspaceName: string, sqlPoolName: string, operationId: string,
        options: RequestOptionsBase, callback: ServiceCallback<any>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: operationId
          type:
            - string
          description: Operation ID
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPoolOperationResults.getLocationHeaderResult_1'
    name: >-
      getLocationHeaderResult(string, string, string, string,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getLocationHeaderResult(resourceGroupName: string,
        workspaceName: string, sqlPoolName: string, operationId: string,
        callback: ServiceCallback<any>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: operationId
          type:
            - string
          description: Operation ID
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPoolOperationResults.constructor'
    name: SqlPoolOperationResults(SynapseManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a SqlPoolOperationResults.
    syntax:
      content: 'new SqlPoolOperationResults(client: SynapseManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-synapse.SynapseManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-synapse'
references:
  - uid: '@azure/arm-synapse.SynapseManagementClientContext'
    name: SynapseManagementClientContext
    spec.typeScript:
      - name: SynapseManagementClientContext
        fullName: SynapseManagementClientContext
        uid: '@azure/arm-synapse.SynapseManagementClientContext'
