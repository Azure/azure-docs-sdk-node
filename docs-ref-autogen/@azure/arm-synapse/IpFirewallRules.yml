### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-synapse.IpFirewallRules'
    name: IpFirewallRules
    fullName: IpFirewallRules
    children:
      - '@azure/arm-synapse.IpFirewallRules.beginCreateOrUpdate'
      - '@azure/arm-synapse.IpFirewallRules.beginDeleteMethod'
      - '@azure/arm-synapse.IpFirewallRules.beginReplaceAll'
      - '@azure/arm-synapse.IpFirewallRules.createOrUpdate'
      - '@azure/arm-synapse.IpFirewallRules.deleteMethod'
      - '@azure/arm-synapse.IpFirewallRules.get'
      - '@azure/arm-synapse.IpFirewallRules.get_2'
      - '@azure/arm-synapse.IpFirewallRules.get_1'
      - '@azure/arm-synapse.IpFirewallRules.constructor'
      - '@azure/arm-synapse.IpFirewallRules.listByWorkspace'
      - '@azure/arm-synapse.IpFirewallRules.listByWorkspace_2'
      - '@azure/arm-synapse.IpFirewallRules.listByWorkspace_1'
      - '@azure/arm-synapse.IpFirewallRules.listByWorkspaceNext'
      - '@azure/arm-synapse.IpFirewallRules.listByWorkspaceNext_2'
      - '@azure/arm-synapse.IpFirewallRules.listByWorkspaceNext_1'
      - '@azure/arm-synapse.IpFirewallRules.replaceAll'
    langs:
      - typeScript
    type: class
    summary: Class representing a IpFirewallRules.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.beginCreateOrUpdate'
    name: >-
      beginCreateOrUpdate(string, string, string, IpFirewallRuleInfo,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a firewall rule
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, workspaceName:
        string, ruleName: string, ipFirewallRuleInfo: IpFirewallRuleInfo,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: ruleName
          type:
            - string
          description: The IP firewall rule name
        - id: ipFirewallRuleInfo
          type:
            - '@azure/arm-synapse.IpFirewallRuleInfo'
          description: IP firewall rule properties
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a firewall rule
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, workspaceName:
        string, ruleName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: ruleName
          type:
            - string
          description: The IP firewall rule name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.beginReplaceAll'
    name: >-
      beginReplaceAll(string, string, ReplaceAllIpFirewallRulesRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Replaces firewall rules
    syntax:
      content: >-
        function beginReplaceAll(resourceGroupName: string, workspaceName:
        string, request: ReplaceAllIpFirewallRulesRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: request
          type:
            - '@azure/arm-synapse.ReplaceAllIpFirewallRulesRequest'
          description: Replace all IP firewall rules request
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.createOrUpdate'
    name: >-
      createOrUpdate(string, string, string, IpFirewallRuleInfo,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a firewall rule
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, ruleName: string, ipFirewallRuleInfo: IpFirewallRuleInfo,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: ruleName
          type:
            - string
          description: The IP firewall rule name
        - id: ipFirewallRuleInfo
          type:
            - '@azure/arm-synapse.IpFirewallRuleInfo'
          description: IP firewall rule properties
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IpFirewallRulesCreateOrUpdateResponse>
        description: Promise<Models.IpFirewallRulesCreateOrUpdateResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a firewall rule
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        ruleName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: ruleName
          type:
            - string
          description: The IP firewall rule name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IpFirewallRulesDeleteMethodResponse>
        description: Promise<Models.IpFirewallRulesDeleteMethodResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get a firewall rule
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string, ruleName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: ruleName
          type:
            - string
          description: The IP firewall rule name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IpFirewallRulesGetResponse>
        description: Promise<Models.IpFirewallRulesGetResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<IpFirewallRuleInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string, ruleName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<IpFirewallRuleInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: ruleName
          type:
            - string
          description: The IP firewall rule name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IpFirewallRuleInfo>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.get_1'
    name: 'get(string, string, string, ServiceCallback<IpFirewallRuleInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string, ruleName:
        string, callback: ServiceCallback<IpFirewallRuleInfo>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: ruleName
          type:
            - string
          description: The IP firewall rule name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IpFirewallRuleInfo>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.constructor'
    name: IpFirewallRules(SynapseManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a IpFirewallRules.
    syntax:
      content: 'new IpFirewallRules(client: SynapseManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-synapse.SynapseManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.listByWorkspace'
    name: 'listByWorkspace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of firewall rules
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IpFirewallRulesListByWorkspaceResponse>
        description: Promise<Models.IpFirewallRulesListByWorkspaceResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.listByWorkspace_2'
    name: >-
      listByWorkspace(string, string, RequestOptionsBase,
      ServiceCallback<IpFirewallRuleInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<IpFirewallRuleInfoListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IpFirewallRuleInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.listByWorkspace_1'
    name: >-
      listByWorkspace(string, string,
      ServiceCallback<IpFirewallRuleInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspace(resourceGroupName: string, workspaceName:
        string, callback: ServiceCallback<IpFirewallRuleInfoListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IpFirewallRuleInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.listByWorkspaceNext'
    name: 'listByWorkspaceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of firewall rules
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IpFirewallRulesListByWorkspaceNextResponse>
        description: Promise<Models.IpFirewallRulesListByWorkspaceNextResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.listByWorkspaceNext_2'
    name: >-
      listByWorkspaceNext(string, RequestOptionsBase,
      ServiceCallback<IpFirewallRuleInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<IpFirewallRuleInfoListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IpFirewallRuleInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.listByWorkspaceNext_1'
    name: 'listByWorkspaceNext(string, ServiceCallback<IpFirewallRuleInfoListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByWorkspaceNext(nextPageLink: string, callback:
        ServiceCallback<IpFirewallRuleInfoListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.IpFirewallRuleInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.IpFirewallRules.replaceAll'
    name: >-
      replaceAll(string, string, ReplaceAllIpFirewallRulesRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Replaces firewall rules
    syntax:
      content: >-
        function replaceAll(resourceGroupName: string, workspaceName: string,
        request: ReplaceAllIpFirewallRulesRequest, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: request
          type:
            - '@azure/arm-synapse.ReplaceAllIpFirewallRulesRequest'
          description: Replace all IP firewall rules request
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IpFirewallRulesReplaceAllResponse>
        description: Promise<Models.IpFirewallRulesReplaceAllResponse>
    package: '@azure/arm-synapse'
references:
  - uid: '@azure/arm-synapse.SynapseManagementClientContext'
    name: SynapseManagementClientContext
    spec.typeScript:
      - name: SynapseManagementClientContext
        fullName: SynapseManagementClientContext
        uid: '@azure/arm-synapse.SynapseManagementClientContext'
  - uid: '@azure/arm-synapse.IpFirewallRuleInfo'
    name: IpFirewallRuleInfo
    spec.typeScript:
      - name: IpFirewallRuleInfo
        fullName: IpFirewallRuleInfo
        uid: '@azure/arm-synapse.IpFirewallRuleInfo'
  - uid: '@azure/arm-synapse.ReplaceAllIpFirewallRulesRequest'
    name: ReplaceAllIpFirewallRulesRequest
    spec.typeScript:
      - name: ReplaceAllIpFirewallRulesRequest
        fullName: ReplaceAllIpFirewallRulesRequest
        uid: '@azure/arm-synapse.ReplaceAllIpFirewallRulesRequest'
  - uid: ServiceCallback<@azure/arm-synapse.IpFirewallRuleInfo>
    name: IpFirewallRuleInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IpFirewallRuleInfo
        fullName: IpFirewallRuleInfo
        uid: '@azure/arm-synapse.IpFirewallRuleInfo'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-synapse.IpFirewallRuleInfoListResult>
    name: IpFirewallRuleInfoListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IpFirewallRuleInfoListResult
        fullName: IpFirewallRuleInfoListResult
        uid: '@azure/arm-synapse.IpFirewallRuleInfoListResult'
      - name: '>'
        fullName: '>'
