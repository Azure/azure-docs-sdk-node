### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-synapse.SqlPoolUsages'
    name: SqlPoolUsages
    fullName: SqlPoolUsages
    children:
      - '@azure/arm-synapse.SqlPoolUsages.list'
      - '@azure/arm-synapse.SqlPoolUsages.list_2'
      - '@azure/arm-synapse.SqlPoolUsages.list_1'
      - '@azure/arm-synapse.SqlPoolUsages.listNext'
      - '@azure/arm-synapse.SqlPoolUsages.listNext_2'
      - '@azure/arm-synapse.SqlPoolUsages.listNext_1'
      - '@azure/arm-synapse.SqlPoolUsages.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a SqlPoolUsages.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPoolUsages.list'
    name: 'list(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets SQL pool usages.
    syntax:
      content: >-
        function list(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SqlPoolUsagesListResponse>
        description: Promise<Models.SqlPoolUsagesListResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPoolUsages.list_2'
    name: >-
      list(string, string, string, RequestOptionsBase,
      ServiceCallback<SqlPoolUsageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, options: RequestOptionsBase, callback:
        ServiceCallback<SqlPoolUsageListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPoolUsageListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPoolUsages.list_1'
    name: 'list(string, string, string, ServiceCallback<SqlPoolUsageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, workspaceName: string,
        sqlPoolName: string, callback: ServiceCallback<SqlPoolUsageListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: sqlPoolName
          type:
            - string
          description: SQL pool name
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPoolUsageListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPoolUsages.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets SQL pool usages.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SqlPoolUsagesListNextResponse>
        description: Promise<Models.SqlPoolUsagesListNextResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPoolUsages.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<SqlPoolUsageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<SqlPoolUsageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPoolUsageListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPoolUsages.listNext_1'
    name: 'listNext(string, ServiceCallback<SqlPoolUsageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<SqlPoolUsageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.SqlPoolUsageListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.SqlPoolUsages.constructor'
    name: SqlPoolUsages(SynapseManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a SqlPoolUsages.
    syntax:
      content: 'new SqlPoolUsages(client: SynapseManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-synapse.SynapseManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-synapse'
references:
  - uid: '@azure/arm-synapse.SynapseManagementClientContext'
    name: SynapseManagementClientContext
    spec.typeScript:
      - name: SynapseManagementClientContext
        fullName: SynapseManagementClientContext
        uid: '@azure/arm-synapse.SynapseManagementClientContext'
  - uid: ServiceCallback<@azure/arm-synapse.SqlPoolUsageListResult>
    name: SqlPoolUsageListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlPoolUsageListResult
        fullName: SqlPoolUsageListResult
        uid: '@azure/arm-synapse.SqlPoolUsageListResult'
      - name: '>'
        fullName: '>'
