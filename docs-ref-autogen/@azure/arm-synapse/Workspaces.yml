### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-synapse.Workspaces'
    name: Workspaces
    fullName: Workspaces
    children:
      - '@azure/arm-synapse.Workspaces.beginCreateOrUpdate'
      - '@azure/arm-synapse.Workspaces.beginDeleteMethod'
      - '@azure/arm-synapse.Workspaces.beginUpdate'
      - '@azure/arm-synapse.Workspaces.createOrUpdate'
      - '@azure/arm-synapse.Workspaces.deleteMethod'
      - '@azure/arm-synapse.Workspaces.get'
      - '@azure/arm-synapse.Workspaces.get_2'
      - '@azure/arm-synapse.Workspaces.get_1'
      - '@azure/arm-synapse.Workspaces.list'
      - '@azure/arm-synapse.Workspaces.list_2'
      - '@azure/arm-synapse.Workspaces.list_1'
      - '@azure/arm-synapse.Workspaces.listByResourceGroup'
      - '@azure/arm-synapse.Workspaces.listByResourceGroup_2'
      - '@azure/arm-synapse.Workspaces.listByResourceGroup_1'
      - '@azure/arm-synapse.Workspaces.listByResourceGroupNext'
      - '@azure/arm-synapse.Workspaces.listByResourceGroupNext_2'
      - '@azure/arm-synapse.Workspaces.listByResourceGroupNext_1'
      - '@azure/arm-synapse.Workspaces.listNext'
      - '@azure/arm-synapse.Workspaces.listNext_2'
      - '@azure/arm-synapse.Workspaces.listNext_1'
      - '@azure/arm-synapse.Workspaces.update'
      - '@azure/arm-synapse.Workspaces.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a Workspaces.
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, Workspace, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a workspace
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, workspaceName:
        string, workspaceInfo: Workspace, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: workspaceInfo
          type:
            - '@azure/arm-synapse.Workspace'
          description: Workspace create or update request properties
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a workspace
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, workspaceName:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.beginUpdate'
    name: 'beginUpdate(string, string, WorkspacePatchInfo, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a workspace
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, workspaceName: string,
        workspacePatchInfo: WorkspacePatchInfo, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: workspacePatchInfo
          type:
            - '@azure/arm-synapse.WorkspacePatchInfo'
          description: Workspace patch request properties
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.createOrUpdate'
    name: 'createOrUpdate(string, string, Workspace, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a workspace
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, workspaceInfo: Workspace, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: workspaceInfo
          type:
            - '@azure/arm-synapse.Workspace'
          description: Workspace create or update request properties
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesCreateOrUpdateResponse>
        description: Promise<Models.WorkspacesCreateOrUpdateResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a workspace
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, workspaceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesDeleteMethodResponse>
        description: Promise<Models.WorkspacesDeleteMethodResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a workspace
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesGetResponse>
        description: Promise<Models.WorkspacesGetResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Workspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Workspace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.Workspace>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.get_1'
    name: 'get(string, string, ServiceCallback<Workspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string, callback:
        ServiceCallback<Workspace>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.Workspace>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of workspaces in a subscription
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesListResponse>
        description: Promise<Models.WorkspacesListResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<WorkspaceInfoListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<WorkspaceInfoListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.WorkspaceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.list_1'
    name: list(ServiceCallback<WorkspaceInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<WorkspaceInfoListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.WorkspaceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of workspaces in a resource group
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesListByResourceGroupResponse>
        description: Promise<Models.WorkspacesListByResourceGroupResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<WorkspaceInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<WorkspaceInfoListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.WorkspaceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<WorkspaceInfoListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<WorkspaceInfoListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.WorkspaceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of workspaces in a resource group
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesListByResourceGroupNextResponse>
        description: Promise<Models.WorkspacesListByResourceGroupNextResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.listByResourceGroupNext_2'
    name: >-
      listByResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<WorkspaceInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<WorkspaceInfoListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.WorkspaceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<WorkspaceInfoListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<WorkspaceInfoListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.WorkspaceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of workspaces in a subscription
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesListNextResponse>
        description: Promise<Models.WorkspacesListNextResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<WorkspaceInfoListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<WorkspaceInfoListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.WorkspaceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.listNext_1'
    name: 'listNext(string, ServiceCallback<WorkspaceInfoListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<WorkspaceInfoListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-synapse.WorkspaceInfoListResult>
          description: |
            The callback
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.update'
    name: 'update(string, string, WorkspacePatchInfo, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a workspace
    syntax:
      content: >-
        function update(resourceGroupName: string, workspaceName: string,
        workspacePatchInfo: WorkspacePatchInfo, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type:
            - string
          description: The name of the workspace
        - id: workspacePatchInfo
          type:
            - '@azure/arm-synapse.WorkspacePatchInfo'
          description: Workspace patch request properties
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.WorkspacesUpdateResponse>
        description: Promise<Models.WorkspacesUpdateResponse>
    package: '@azure/arm-synapse'
  - uid: '@azure/arm-synapse.Workspaces.constructor'
    name: Workspaces(SynapseManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Workspaces.
    syntax:
      content: 'new Workspaces(client: SynapseManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-synapse.SynapseManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-synapse'
references:
  - uid: '@azure/arm-synapse.SynapseManagementClientContext'
    name: SynapseManagementClientContext
    spec.typeScript:
      - name: SynapseManagementClientContext
        fullName: SynapseManagementClientContext
        uid: '@azure/arm-synapse.SynapseManagementClientContext'
  - uid: '@azure/arm-synapse.Workspace'
    name: Workspace
    spec.typeScript:
      - name: Workspace
        fullName: Workspace
        uid: '@azure/arm-synapse.Workspace'
  - uid: '@azure/arm-synapse.WorkspacePatchInfo'
    name: WorkspacePatchInfo
    spec.typeScript:
      - name: WorkspacePatchInfo
        fullName: WorkspacePatchInfo
        uid: '@azure/arm-synapse.WorkspacePatchInfo'
  - uid: ServiceCallback<@azure/arm-synapse.Workspace>
    name: Workspace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Workspace
        fullName: Workspace
        uid: '@azure/arm-synapse.Workspace'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-synapse.WorkspaceInfoListResult>
    name: WorkspaceInfoListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: WorkspaceInfoListResult
        fullName: WorkspaceInfoListResult
        uid: '@azure/arm-synapse.WorkspaceInfoListResult'
      - name: '>'
        fullName: '>'
