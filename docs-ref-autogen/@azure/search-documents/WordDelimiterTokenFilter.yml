### YamlMime:UniversalReference
items:
  - uid: '@azure/search-documents.WordDelimiterTokenFilter'
    name: WordDelimiterTokenFilter
    fullName: WordDelimiterTokenFilter
    children:
      - '@azure/search-documents.WordDelimiterTokenFilter.catenateAll'
      - '@azure/search-documents.WordDelimiterTokenFilter.catenateNumbers'
      - '@azure/search-documents.WordDelimiterTokenFilter.catenateWords'
      - '@azure/search-documents.WordDelimiterTokenFilter.generateNumberParts'
      - '@azure/search-documents.WordDelimiterTokenFilter.generateWordParts'
      - '@azure/search-documents.WordDelimiterTokenFilter.name'
      - '@azure/search-documents.WordDelimiterTokenFilter.odatatype'
      - '@azure/search-documents.WordDelimiterTokenFilter.preserveOriginal'
      - '@azure/search-documents.WordDelimiterTokenFilter.protectedWords'
      - '@azure/search-documents.WordDelimiterTokenFilter.splitOnCaseChange'
      - '@azure/search-documents.WordDelimiterTokenFilter.splitOnNumerics'
      - '@azure/search-documents.WordDelimiterTokenFilter.stemEnglishPossessive'
    langs:
      - typeScript
    type: interface
    summary: >-
      Splits words into subwords and performs optional transformations on
      subword groups. This token

      filter is implemented using Apache Lucene.
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.catenateAll'
    name: catenateAll
    fullName: catenateAll
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether all subword parts will be catenated. For
      example, if this is set to

      true, "Azure-Search-1" becomes "AzureSearch1". Default is false. Default
      value: false.
    optional: true
    syntax:
      content: 'catenateAll?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.catenateNumbers'
    name: catenateNumbers
    fullName: catenateNumbers
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether maximum runs of number parts will be catenated.
      For example, if

      this is set to true, "1-2" becomes "12". Default is false. Default value:
      false.
    optional: true
    syntax:
      content: 'catenateNumbers?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.catenateWords'
    name: catenateWords
    fullName: catenateWords
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether maximum runs of word parts will be catenated.
      For example, if this

      is set to true, "Azure-Search" becomes "AzureSearch". Default is false.
      Default value: false.
    optional: true
    syntax:
      content: 'catenateWords?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.generateNumberParts'
    name: generateNumberParts
    fullName: generateNumberParts
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether to generate number subwords. Default is true.
      Default value: true.
    optional: true
    syntax:
      content: 'generateNumberParts?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.generateWordParts'
    name: generateWordParts
    fullName: generateWordParts
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether to generate part words. If set, causes parts of
      words to be

      generated; for example "AzureSearch" becomes "Azure" "Search". Default is
      true. Default value:

      true.
    optional: true
    syntax:
      content: 'generateWordParts?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The name of the token filter. It must only contain letters, digits,
      spaces, dashes or

      underscores, can only start and end with alphanumeric characters, and is
      limited to 128

      characters.
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.odatatype'
    name: odatatype
    fullName: odatatype
    children: []
    langs:
      - typeScript
    type: property
    summary: Polymorphic Discriminator
    syntax:
      content: 'odatatype: "#Microsoft.Azure.Search.WordDelimiterTokenFilter"'
      return:
        type:
          - '"#Microsoft.Azure.Search.WordDelimiterTokenFilter"'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.preserveOriginal'
    name: preserveOriginal
    fullName: preserveOriginal
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether original words will be preserved and added to
      the subword list.

      Default is false. Default value: false.
    optional: true
    syntax:
      content: 'preserveOriginal?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.protectedWords'
    name: protectedWords
    fullName: protectedWords
    children: []
    langs:
      - typeScript
    type: property
    summary: A list of tokens to protect from being delimited.
    optional: true
    syntax:
      content: 'protectedWords?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.splitOnCaseChange'
    name: splitOnCaseChange
    fullName: splitOnCaseChange
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether to split words on caseChange. For example, if
      this is set to true,

      "AzureSearch" becomes "Azure" "Search". Default is true. Default value:
      true.
    optional: true
    syntax:
      content: 'splitOnCaseChange?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.splitOnNumerics'
    name: splitOnNumerics
    fullName: splitOnNumerics
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether to split on numbers. For example, if this is
      set to true,

      "Azure1Search" becomes "Azure" "1" "Search". Default is true. Default
      value: true.
    optional: true
    syntax:
      content: 'splitOnNumerics?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.WordDelimiterTokenFilter.stemEnglishPossessive'
    name: stemEnglishPossessive
    fullName: stemEnglishPossessive
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether to remove trailing "'s" for each subword.
      Default is true. Default

      value: true.
    optional: true
    syntax:
      content: 'stemEnglishPossessive?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
