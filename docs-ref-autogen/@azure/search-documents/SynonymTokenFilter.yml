### YamlMime:UniversalReference
items:
  - uid: '@azure/search-documents.SynonymTokenFilter'
    name: SynonymTokenFilter
    fullName: SynonymTokenFilter
    children:
      - '@azure/search-documents.SynonymTokenFilter.expand'
      - '@azure/search-documents.SynonymTokenFilter.ignoreCase'
      - '@azure/search-documents.SynonymTokenFilter.name'
      - '@azure/search-documents.SynonymTokenFilter.odatatype'
      - '@azure/search-documents.SynonymTokenFilter.synonyms'
    langs:
      - typeScript
    type: interface
    summary: >-
      Matches single or multi-word synonyms in a token stream. This token filter
      is implemented using

      Apache Lucene.
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SynonymTokenFilter.expand'
    name: expand
    fullName: expand
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether all words in the list of synonyms (if =>
      notation is not used) will

      map to one another. If true, all words in the list of synonyms (if =>
      notation is not used)

      will map to one another. The following list: incredible, unbelievable,
      fabulous, amazing is

      equivalent to: incredible, unbelievable, fabulous, amazing => incredible,
      unbelievable,

      fabulous, amazing. If false, the following list: incredible, unbelievable,
      fabulous, amazing

      will be equivalent to: incredible, unbelievable, fabulous, amazing =>
      incredible. Default is

      true. Default value: true.
    optional: true
    syntax:
      content: 'expand?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SynonymTokenFilter.ignoreCase'
    name: ignoreCase
    fullName: ignoreCase
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether to case-fold input for matching. Default is
      false. Default value:

      false.
    optional: true
    syntax:
      content: 'ignoreCase?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SynonymTokenFilter.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The name of the token filter. It must only contain letters, digits,
      spaces, dashes or

      underscores, can only start and end with alphanumeric characters, and is
      limited to 128

      characters.
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SynonymTokenFilter.odatatype'
    name: odatatype
    fullName: odatatype
    children: []
    langs:
      - typeScript
    type: property
    summary: Polymorphic Discriminator
    syntax:
      content: 'odatatype: "#Microsoft.Azure.Search.SynonymTokenFilter"'
      return:
        type:
          - '"#Microsoft.Azure.Search.SynonymTokenFilter"'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SynonymTokenFilter.synonyms'
    name: synonyms
    fullName: synonyms
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A list of synonyms in following one of two formats: 1. incredible,
      unbelievable, fabulous =>

      amazing - all terms on the left side of => symbol will be replaced with
      all terms on its right

      side; 2. incredible, unbelievable, fabulous, amazing - comma separated
      list of equivalent

      words. Set the expand option to change how this list is interpreted.
    syntax:
      content: 'synonyms: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/search-documents'
