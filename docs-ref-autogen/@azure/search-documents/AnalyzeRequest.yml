### YamlMime:UniversalReference
items:
  - uid: '@azure/search-documents.AnalyzeRequest'
    name: AnalyzeRequest
    fullName: AnalyzeRequest
    children:
      - '@azure/search-documents.AnalyzeRequest.analyzerName'
      - '@azure/search-documents.AnalyzeRequest.charFilters'
      - '@azure/search-documents.AnalyzeRequest.text'
      - '@azure/search-documents.AnalyzeRequest.tokenFilters'
      - '@azure/search-documents.AnalyzeRequest.tokenizerName'
    langs:
      - typeScript
    type: interface
    summary: >-
      Specifies some text and analysis components used to break that text into
      tokens.
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AnalyzeRequest.analyzerName'
    name: analyzerName
    fullName: analyzerName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The name of the analyzer to use to break the given text. If this parameter
      is not specified,

      you must specify a tokenizer instead. The tokenizer and analyzer
      parameters are mutually

      exclusive. KnownAnalyzerNames is an enum containing known values.

      NOTE: Either analyzerName or tokenizerName is required in an
      AnalyzeRequest.
    optional: true
    syntax:
      content: 'analyzerName?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AnalyzeRequest.charFilters'
    name: charFilters
    fullName: charFilters
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An optional list of character filters to use when breaking the given text.
      This parameter can

      only be set when using the tokenizer parameter.
    optional: true
    syntax:
      content: 'charFilters?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AnalyzeRequest.text'
    name: text
    fullName: text
    children: []
    langs:
      - typeScript
    type: property
    summary: The text to break into tokens.
    syntax:
      content: 'text: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AnalyzeRequest.tokenFilters'
    name: tokenFilters
    fullName: tokenFilters
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An optional list of token filters to use when breaking the given text.
      This parameter can only

      be set when using the tokenizer parameter.
    optional: true
    syntax:
      content: 'tokenFilters?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AnalyzeRequest.tokenizerName'
    name: tokenizerName
    fullName: tokenizerName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The name of the tokenizer to use to break the given text. If this
      parameter is not specified,

      you must specify an analyzer instead. The tokenizer and analyzer
      parameters are mutually

      exclusive. KnownTokenizerNames is an enum containing known values.

      NOTE: Either analyzerName or tokenizerName is required in an
      AnalyzeRequest.
    optional: true
    syntax:
      content: 'tokenizerName?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
