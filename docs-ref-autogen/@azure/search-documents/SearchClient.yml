### YamlMime:TSType
name: SearchClient
uid: '@azure/search-documents.SearchClient'
package: '@azure/search-documents'
summary: |-
  Class used to perform operations against a search index,
  including querying documents in the index as well as
  adding, updating, and removing them.
fullName: SearchClient<TModel>
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      SearchClient<TModel>(string, string, KeyCredential | TokenCredential,
      SearchClientOptions)
    uid: '@azure/search-documents.SearchClient.constructor'
    package: '@azure/search-documents'
    summary: >-
      Creates an instance of SearchClient.


      Example usage:

      ```ts

      const { SearchClient, AzureKeyCredential } =
      require("@azure/search-documents");


      const client = new SearchClient(
        "<endpoint>",
        "<indexName>",
        new AzureKeyCredential("<Admin Key>")
      );

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new SearchClient(endpoint: string, indexName: string, credential:
        KeyCredential | TokenCredential, options?: SearchClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: The endpoint of the search service
        - id: indexName
          type: string
          description: The name of the index
        - id: credential
          type: KeyCredential | TokenCredential
          description: Used to authenticate requests to the service.
        - id: options
          type: <xref uid="@azure/search-documents.SearchClientOptions" />
          description: Used to configure the Search client.
properties:
  - name: apiVersion
    uid: '@azure/search-documents.SearchClient.apiVersion'
    package: '@azure/search-documents'
    summary: The API version to use when communicating with the service.
    fullName: apiVersion
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'apiVersion: string'
      return:
        description: ''
        type: string
  - name: endpoint
    uid: '@azure/search-documents.SearchClient.endpoint'
    package: '@azure/search-documents'
    summary: The endpoint of the search service
    fullName: endpoint
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        description: ''
        type: string
  - name: indexName
    uid: '@azure/search-documents.SearchClient.indexName'
    package: '@azure/search-documents'
    summary: The name of the index
    fullName: indexName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'indexName: string'
      return:
        description: ''
        type: string
methods:
  - name: autocomplete<TFields>(string, string, AutocompleteOptions<TFields>)
    uid: '@azure/search-documents.SearchClient.autocomplete'
    package: '@azure/search-documents'
    summary: |-
      Based on a partial searchText from the user, return a list
      of potential completion strings based on a specified suggester.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function autocomplete<TFields>(searchText: string, suggesterName:
        string, options?: AutocompleteOptions<TFields>):
        Promise<AutocompleteResult>
      parameters:
        - id: searchText
          type: string
          description: The search text on which to base autocomplete results.
        - id: suggesterName
          type: string
          description: >-
            The name of the suggester as specified in the suggesters collection
            that's part of the index definition.
        - id: options
          type: >-
            <xref uid="@azure/search-documents.AutocompleteOptions"
            />&lt;TFields&gt;
          description: Options to the autocomplete operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/search-documents.AutocompleteResult"
          />&gt;
  - name: deleteDocuments(keyof TModel, string[], IndexDocumentsOptions)
    uid: '@azure/search-documents.SearchClient.deleteDocuments_1'
    package: '@azure/search-documents'
    summary: Delete a set of documents.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteDocuments(keyName: keyof TModel, keyValues: string[],
        options?: IndexDocumentsOptions): Promise<IndexDocumentsResult>
      parameters:
        - id: keyName
          type: keyof TModel
          description: The name of their primary key in the index.
        - id: keyValues
          type: string[]
          description: The primary key values of documents to delete.
        - id: options
          type: <xref uid="@azure/search-documents.IndexDocumentsOptions" />
          description: Additional options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/search-documents.IndexDocumentsResult"
          />&gt;
  - name: deleteDocuments(TModel[], IndexDocumentsOptions)
    uid: '@azure/search-documents.SearchClient.deleteDocuments'
    package: '@azure/search-documents'
    summary: Delete a set of documents.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteDocuments(documents: TModel[], options?:
        IndexDocumentsOptions): Promise<IndexDocumentsResult>
      parameters:
        - id: documents
          type: TModel[]
          description: Documents to be deleted.
        - id: options
          type: <xref uid="@azure/search-documents.IndexDocumentsOptions" />
          description: Additional options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/search-documents.IndexDocumentsResult"
          />&gt;
  - name: getDocument<TFields>(string, GetDocumentOptions<TFields>)
    uid: '@azure/search-documents.SearchClient.getDocument'
    package: '@azure/search-documents'
    summary: Retrieve a particular document from the index by key.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getDocument<TFields>(key: string, options?:
        GetDocumentOptions<TFields>): Promise<TModel>
      parameters:
        - id: key
          type: string
          description: The primary key value of the document
        - id: options
          type: >-
            <xref uid="@azure/search-documents.GetDocumentOptions"
            />&lt;TFields&gt;
          description: Additional options
      return:
        description: ''
        type: Promise&lt;TModel&gt;
  - name: getDocumentsCount(OperationOptions)
    uid: '@azure/search-documents.SearchClient.getDocumentsCount'
    package: '@azure/search-documents'
    summary: Retrieves the number of documents in the index.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getDocumentsCount(options?: OperationOptions): Promise<number>'
      parameters:
        - id: options
          type: OperationOptions
          description: Options to the count operation.
      return:
        description: ''
        type: Promise&lt;number&gt;
  - name: indexDocuments(IndexDocumentsBatch<TModel>, IndexDocumentsOptions)
    uid: '@azure/search-documents.SearchClient.indexDocuments'
    package: '@azure/search-documents'
    summary: >-
      Perform a set of index modifications (upload, merge, mergeOrUpload,
      delete)

      for the given set of documents.

      This operation may partially succeed and not all document operations will

      be reflected in the index. If you would like to treat this as an
      exception,

      set the `throwOnAnyFailure` option to true.

      For more details about how merging works, see:
      https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function indexDocuments(batch: IndexDocumentsBatch<TModel>, options?:
        IndexDocumentsOptions): Promise<IndexDocumentsResult>
      parameters:
        - id: batch
          type: >-
            <xref uid="@azure/search-documents.IndexDocumentsBatch"
            />&lt;TModel&gt;
          description: An array of actions to perform on the index.
        - id: options
          type: <xref uid="@azure/search-documents.IndexDocumentsOptions" />
          description: Additional options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/search-documents.IndexDocumentsResult"
          />&gt;
  - name: mergeDocuments(TModel[], IndexDocumentsOptions)
    uid: '@azure/search-documents.SearchClient.mergeDocuments'
    package: '@azure/search-documents'
    summary: >-
      Update a set of documents in the index.

      For more details about how merging works, see
      https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function mergeDocuments(documents: TModel[], options?:
        IndexDocumentsOptions): Promise<IndexDocumentsResult>
      parameters:
        - id: documents
          type: TModel[]
          description: The updated documents.
        - id: options
          type: <xref uid="@azure/search-documents.IndexDocumentsOptions" />
          description: Additional options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/search-documents.IndexDocumentsResult"
          />&gt;
  - name: mergeOrUploadDocuments(TModel[], IndexDocumentsOptions)
    uid: '@azure/search-documents.SearchClient.mergeOrUploadDocuments'
    package: '@azure/search-documents'
    summary: >-
      Update a set of documents in the index or upload them if they don't exist.

      For more details about how merging works, see
      https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function mergeOrUploadDocuments(documents: TModel[], options?:
        IndexDocumentsOptions): Promise<IndexDocumentsResult>
      parameters:
        - id: documents
          type: TModel[]
          description: The updated documents.
        - id: options
          type: <xref uid="@azure/search-documents.IndexDocumentsOptions" />
          description: Additional options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/search-documents.IndexDocumentsResult"
          />&gt;
  - name: search<TFields>(string, SearchOptions<TFields>)
    uid: '@azure/search-documents.SearchClient.search'
    package: '@azure/search-documents'
    summary: |-
      Performs a search on the current index given
      the specified arguments.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function search<TFields>(searchText?: string, options?:
        SearchOptions<TFields>): Promise<SearchDocumentsResult<Pick<TModel,
        TFields>>>
      parameters:
        - id: searchText
          type: string
          description: Text to search
        - id: options
          type: <xref uid="@azure/search-documents.SearchOptions" />&lt;TFields&gt;
          description: Options for the search operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/search-documents.SearchDocumentsResult"
          />&lt;Pick&lt;TModel, TFields&gt;&gt;&gt;
  - name: suggest<TFields>(string, string, SuggestOptions<TFields>)
    uid: '@azure/search-documents.SearchClient.suggest'
    package: '@azure/search-documents'
    summary: |-
      Returns a short list of suggestions based on the searchText
      and specified suggester.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function suggest<TFields>(searchText: string, suggesterName: string,
        options?: SuggestOptions<TFields>):
        Promise<SuggestDocumentsResult<Pick<TModel, TFields>>>
      parameters:
        - id: searchText
          type: string
          description: >-
            The search text to use to suggest documents. Must be at least 1
            character, and no more than 100 characters.
        - id: suggesterName
          type: string
          description: >-
            The name of the suggester as specified in the suggesters collection
            that's part of the index definition.
        - id: options
          type: <xref uid="@azure/search-documents.SuggestOptions" />&lt;TFields&gt;
          description: Options for the suggest operation
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/search-documents.SuggestDocumentsResult"
          />&lt;Pick&lt;TModel, TFields&gt;&gt;&gt;
  - name: uploadDocuments(TModel[], IndexDocumentsOptions)
    uid: '@azure/search-documents.SearchClient.uploadDocuments'
    package: '@azure/search-documents'
    summary: Upload an array of documents to the index.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function uploadDocuments(documents: TModel[], options?:
        IndexDocumentsOptions): Promise<IndexDocumentsResult>
      parameters:
        - id: documents
          type: TModel[]
          description: The documents to upload.
        - id: options
          type: <xref uid="@azure/search-documents.IndexDocumentsOptions" />
          description: Additional options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/search-documents.IndexDocumentsResult"
          />&gt;
