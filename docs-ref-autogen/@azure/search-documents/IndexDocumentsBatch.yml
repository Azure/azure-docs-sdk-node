### YamlMime:UniversalReference
items:
  - uid: '@azure/search-documents.IndexDocumentsBatch'
    name: IndexDocumentsBatch
    fullName: IndexDocumentsBatch<T>
    children:
      - '@azure/search-documents.IndexDocumentsBatch.actions'
      - '@azure/search-documents.IndexDocumentsBatch.delete'
      - '@azure/search-documents.IndexDocumentsBatch.delete_1'
      - '@azure/search-documents.IndexDocumentsBatch.constructor'
      - '@azure/search-documents.IndexDocumentsBatch.merge'
      - '@azure/search-documents.IndexDocumentsBatch.mergeOrUpload'
      - '@azure/search-documents.IndexDocumentsBatch.upload'
    langs:
      - typeScript
    type: class
    summary: |-
      Class used to perform batch operations
      with multiple documents to the index.
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.IndexDocumentsBatch.actions'
    name: actions
    fullName: actions
    children: []
    langs:
      - typeScript
    type: property
    summary: The set of actions taken in this batch.
    syntax:
      content: 'actions: IndexDocumentsAction<T>[]'
      return:
        type:
          - '@azure/search-documents.IndexDocumentsAction<T>[]'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.IndexDocumentsBatch.delete'
    name: 'delete(Object, string[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a set of documents.
    syntax:
      content: 'function delete(keyName: Object, keyValues: string[])'
      parameters:
        - id: keyName
          type:
            - Object
          description: The name of their primary key in the index.
        - id: keyValues
          type:
            - 'string[]'
          description: |
            The primary key values of documents to delete.
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.IndexDocumentsBatch.delete_1'
    name: 'delete(T[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a set of documents.
    syntax:
      content: 'function delete(documents: T[])'
      parameters:
        - id: documents
          type:
            - 'T[]'
          description: |
            Documents to be deleted.
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.IndexDocumentsBatch.constructor'
    name: 'IndexDocumentsBatch(IndexDocumentsAction<T>[])'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new IndexDocumentsBatch(actions?: IndexDocumentsAction<T>[])'
      parameters:
        - id: actions
          type:
            - '@azure/search-documents.IndexDocumentsAction<T>[]'
          description: ''
          optional: true
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.IndexDocumentsBatch.merge'
    name: 'merge(T[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Update a set of documents in the index.

      For more details about how merging works, see
      https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents
    syntax:
      content: 'function merge(documents: T[])'
      parameters:
        - id: documents
          type:
            - 'T[]'
          description: |
            The updated documents.
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.IndexDocumentsBatch.mergeOrUpload'
    name: 'mergeOrUpload(T[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Update a set of documents in the index or uploads them if they don't
      exist.

      For more details about how merging works, see
      https://docs.microsoft.com/en-us/rest/api/searchservice/AddUpdate-or-Delete-Documents
    syntax:
      content: 'function mergeOrUpload(documents: T[])'
      parameters:
        - id: documents
          type:
            - 'T[]'
          description: |
            The new/updated documents.
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.IndexDocumentsBatch.upload'
    name: 'upload(T[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Upload an array of documents to the index.
    syntax:
      content: 'function upload(documents: T[])'
      parameters:
        - id: documents
          type:
            - 'T[]'
          description: |
            The documents to upload.
    package: '@azure/search-documents'
references:
  - uid: '@azure/search-documents.IndexDocumentsAction<T>[]'
    name: 'IndexDocumentsAction<T>[]'
    spec.typeScript:
      - name: IndexDocumentsAction
        fullName: IndexDocumentsAction
        uid: '@azure/search-documents.IndexDocumentsAction'
      - name: '<T>[]'
        fullName: '<T>[]'
