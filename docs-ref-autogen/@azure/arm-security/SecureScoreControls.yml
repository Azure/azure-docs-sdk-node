### YamlMime:TSType
name: SecureScoreControls
uid: '@azure/arm-security.SecureScoreControls'
package: '@azure/arm-security'
summary: Class representing a SecureScoreControls.
fullName: SecureScoreControls
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: SecureScoreControls(SecurityCenterContext)
    uid: '@azure/arm-security.SecureScoreControls.constructor'
    package: '@azure/arm-security'
    summary: Create a SecureScoreControls.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new SecureScoreControls(client: SecurityCenterContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-security.SecurityCenterContext" />
          description: |
            Reference to the service client.
methods:
  - name: list(Models.SecureScoreControlsListOptionalParams)
    uid: '@azure/arm-security.SecureScoreControls.list'
    package: '@azure/arm-security'
    summary: Get all security controls within a scope
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: Models.SecureScoreControlsListOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.SecureScoreControlsListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.SecureScoreControlsListResponse" />&gt;
        description: Promise<Models.SecureScoreControlsListResponse>
  - name: >-
      list(SecureScoreControlsListOptionalParams,
      ServiceCallback<SecureScoreControlList>)
    uid: '@azure/arm-security.SecureScoreControls.list_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: SecureScoreControlsListOptionalParams, callback:
        ServiceCallback<SecureScoreControlList>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.SecureScoreControlsListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecureScoreControlList" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<SecureScoreControlList>)
    uid: '@azure/arm-security.SecureScoreControls.list_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<SecureScoreControlList>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecureScoreControlList" />&gt;
          description: |
            The callback
  - name: >-
      listBySecureScore(string,
      Models.SecureScoreControlsListBySecureScoreOptionalParams)
    uid: '@azure/arm-security.SecureScoreControls.listBySecureScore'
    package: '@azure/arm-security'
    summary: Get all security controls for a specific initiative within a scope
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySecureScore(secureScoreName: string, options?:
        Models.SecureScoreControlsListBySecureScoreOptionalParams)
      parameters:
        - id: secureScoreName
          type: string
          description: >-
            The initiative name. For the ASC Default initiative, use 'ascScore'
            as in

            the sample request below.
        - id: options
          type: >-
            <xref
            uid="Models.SecureScoreControlsListBySecureScoreOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.SecureScoreControlsListBySecureScoreResponse" />&gt;
        description: Promise<Models.SecureScoreControlsListBySecureScoreResponse>
  - name: >-
      listBySecureScore(string,
      SecureScoreControlsListBySecureScoreOptionalParams,
      ServiceCallback<SecureScoreControlList>)
    uid: '@azure/arm-security.SecureScoreControls.listBySecureScore_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySecureScore(secureScoreName: string, options:
        SecureScoreControlsListBySecureScoreOptionalParams, callback:
        ServiceCallback<SecureScoreControlList>)
      parameters:
        - id: secureScoreName
          type: string
          description: >-
            The initiative name. For the ASC Default initiative, use 'ascScore'
            as in

            the sample request below.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.SecureScoreControlsListBySecureScoreOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecureScoreControlList" />&gt;
          description: |
            The callback
  - name: 'listBySecureScore(string, ServiceCallback<SecureScoreControlList>)'
    uid: '@azure/arm-security.SecureScoreControls.listBySecureScore_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySecureScore(secureScoreName: string, callback:
        ServiceCallback<SecureScoreControlList>)
      parameters:
        - id: secureScoreName
          type: string
          description: >-
            The initiative name. For the ASC Default initiative, use 'ascScore'
            as in

            the sample request below.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecureScoreControlList" />&gt;
          description: |
            The callback
  - name: >-
      listBySecureScoreNext(string,
      Models.SecureScoreControlsListBySecureScoreNextOptionalParams)
    uid: '@azure/arm-security.SecureScoreControls.listBySecureScoreNext'
    package: '@azure/arm-security'
    summary: Get all security controls for a specific initiative within a scope
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySecureScoreNext(nextPageLink: string, options?:
        Models.SecureScoreControlsListBySecureScoreNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.SecureScoreControlsListBySecureScoreNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.SecureScoreControlsListBySecureScoreNextResponse" />&gt;
        description: Promise<Models.SecureScoreControlsListBySecureScoreNextResponse>
  - name: >-
      listBySecureScoreNext(string,
      SecureScoreControlsListBySecureScoreNextOptionalParams,
      ServiceCallback<SecureScoreControlList>)
    uid: '@azure/arm-security.SecureScoreControls.listBySecureScoreNext_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySecureScoreNext(nextPageLink: string, options:
        SecureScoreControlsListBySecureScoreNextOptionalParams, callback:
        ServiceCallback<SecureScoreControlList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.SecureScoreControlsListBySecureScoreNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecureScoreControlList" />&gt;
          description: |
            The callback
  - name: 'listBySecureScoreNext(string, ServiceCallback<SecureScoreControlList>)'
    uid: '@azure/arm-security.SecureScoreControls.listBySecureScoreNext_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySecureScoreNext(nextPageLink: string, callback:
        ServiceCallback<SecureScoreControlList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecureScoreControlList" />&gt;
          description: |
            The callback
  - name: 'listNext(string, Models.SecureScoreControlsListNextOptionalParams)'
    uid: '@azure/arm-security.SecureScoreControls.listNext'
    package: '@azure/arm-security'
    summary: Get all security controls within a scope
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.SecureScoreControlsListNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.SecureScoreControlsListNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.SecureScoreControlsListNextResponse"
          />&gt;
        description: Promise<Models.SecureScoreControlsListNextResponse>
  - name: >-
      listNext(string, SecureScoreControlsListNextOptionalParams,
      ServiceCallback<SecureScoreControlList>)
    uid: '@azure/arm-security.SecureScoreControls.listNext_2'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        SecureScoreControlsListNextOptionalParams, callback:
        ServiceCallback<SecureScoreControlList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.SecureScoreControlsListNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecureScoreControlList" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<SecureScoreControlList>)'
    uid: '@azure/arm-security.SecureScoreControls.listNext_1'
    package: '@azure/arm-security'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<SecureScoreControlList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-security.SecureScoreControlList" />&gt;
          description: |
            The callback
