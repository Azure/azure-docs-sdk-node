### YamlMime:TSType
name: CosmosDBv3FunctionOptions
uid: '@azure/functions.CosmosDBv3FunctionOptions'
package: '@azure/functions'
summary: ''
fullName: CosmosDBv3FunctionOptions
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: handler
    uid: '@azure/functions.CosmosDBv3FunctionOptions.handler'
    package: '@azure/functions'
    summary: ''
    fullName: handler
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'handler: CosmosDBv3Handler'
      return:
        description: ''
        type: <xref uid="@azure/functions.CosmosDBv3Handler" />
  - name: retry
    uid: '@azure/functions.CosmosDBv3FunctionOptions.retry'
    package: '@azure/functions'
    summary: >-
      An optional retry policy to rerun a failed execution until either
      successful completion occurs or the maximum number of retries is reached.

      Learn more
      [here](https://learn.microsoft.com/azure/azure-functions/functions-bindings-error-pages)
    fullName: retry
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'retry?: RetryOptions'
      return:
        description: ''
        type: <xref uid="@azure/functions.RetryOptions" />
  - name: trigger
    uid: '@azure/functions.CosmosDBv3FunctionOptions.trigger'
    package: '@azure/functions'
    summary: ''
    fullName: trigger
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'trigger?: CosmosDBv3Trigger'
      return:
        description: ''
        type: <xref uid="@azure/functions.CosmosDBv3Trigger" />
inheritedProperties:
  - name: checkpointDocumentCount
    uid: '@azure/functions.CosmosDBv3FunctionOptions.checkpointDocumentCount'
    package: '@azure/functions'
    summary: >-
      Customizes the amount of documents between lease checkpoints. Default is
      after every function call.
    fullName: checkpointDocumentCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'checkpointDocumentCount?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.checkpointDocumentCount](xref:@azure/functions.CosmosDBv3TriggerOptions.checkpointDocumentCount)
  - name: checkpointInterval
    uid: '@azure/functions.CosmosDBv3FunctionOptions.checkpointInterval'
    package: '@azure/functions'
    summary: >-
      When set, it defines, in milliseconds, the interval between lease
      checkpoints. Default is always after each Function call.
    fullName: checkpointInterval
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'checkpointInterval?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.checkpointInterval](xref:@azure/functions.CosmosDBv3TriggerOptions.checkpointInterval)
  - name: collectionName
    uid: '@azure/functions.CosmosDBv3FunctionOptions.collectionName'
    package: '@azure/functions'
    summary: The name of the collection being monitored
    fullName: collectionName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'collectionName: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.collectionName](xref:@azure/functions.CosmosDBv3TriggerOptions.collectionName)
  - name: connectionStringSetting
    uid: '@azure/functions.CosmosDBv3FunctionOptions.connectionStringSetting'
    package: '@azure/functions'
    summary: >-
      An app setting (or environment variable) with the Cosmos DB connection
      string
    fullName: connectionStringSetting
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'connectionStringSetting: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.connectionStringSetting](xref:@azure/functions.CosmosDBv3TriggerOptions.connectionStringSetting)
  - name: createLeaseCollectionIfNotExists
    uid: >-
      @azure/functions.CosmosDBv3FunctionOptions.createLeaseCollectionIfNotExists
    package: '@azure/functions'
    summary: >-
      Checks for existence and automatically creates the leases collection.
      Default is `false`
    fullName: createLeaseCollectionIfNotExists
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'createLeaseCollectionIfNotExists?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.createLeaseCollectionIfNotExists](xref:@azure/functions.CosmosDBv3TriggerOptions.createLeaseCollectionIfNotExists)
  - name: databaseName
    uid: '@azure/functions.CosmosDBv3FunctionOptions.databaseName'
    package: '@azure/functions'
    summary: >-
      The name of the Azure Cosmos DB database with the collection being
      monitored
    fullName: databaseName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'databaseName: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.databaseName](xref:@azure/functions.CosmosDBv3TriggerOptions.databaseName)
  - name: extraInputs
    uid: '@azure/functions.CosmosDBv3FunctionOptions.extraInputs'
    package: '@azure/functions'
    summary: |-
      Configuration for an optional set of secondary inputs
      During invocation, get these values with `context.extraInputs.get()`
    fullName: extraInputs
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'extraInputs?: FunctionInput[]'
      return:
        description: ''
        type: <xref uid="@azure/functions.FunctionInput" />[]
    inheritanceDescription: <b>Inherited From</b> Partial.extraInputs
  - name: extraOutputs
    uid: '@azure/functions.CosmosDBv3FunctionOptions.extraOutputs'
    package: '@azure/functions'
    summary: |-
      Configuration for an optional set of secondary outputs
      During invocation, set these values with `context.extraOutputs.set()`
    fullName: extraOutputs
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'extraOutputs?: FunctionOutput[]'
      return:
        description: ''
        type: <xref uid="@azure/functions.FunctionOutput" />[]
    inheritanceDescription: <b>Inherited From</b> Partial.extraOutputs
  - name: feedPollDelay
    uid: '@azure/functions.CosmosDBv3FunctionOptions.feedPollDelay'
    package: '@azure/functions'
    summary: >-
      The time (in milliseconds) for the delay between polling a partition for
      new changes on the feed, after all current changes are drained.

      Default is 5,000 milliseconds, or 5 seconds.
    fullName: feedPollDelay
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'feedPollDelay?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.feedPollDelay](xref:@azure/functions.CosmosDBv3TriggerOptions.feedPollDelay)
  - name: leaseAcquireInterval
    uid: '@azure/functions.CosmosDBv3FunctionOptions.leaseAcquireInterval'
    package: '@azure/functions'
    summary: >-
      When set, it defines, in milliseconds, the interval to kick off a task to
      compute if partitions are distributed evenly among known host instances.

      Default is 13000 (13 seconds).
    fullName: leaseAcquireInterval
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseAcquireInterval?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.leaseAcquireInterval](xref:@azure/functions.CosmosDBv3TriggerOptions.leaseAcquireInterval)
  - name: leaseCollectionName
    uid: '@azure/functions.CosmosDBv3FunctionOptions.leaseCollectionName'
    package: '@azure/functions'
    summary: >-
      The name of the collection to store leases. If not set, it will use
      "leases"
    fullName: leaseCollectionName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseCollectionName?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.leaseCollectionName](xref:@azure/functions.CosmosDBv3TriggerOptions.leaseCollectionName)
  - name: leaseCollectionPrefix
    uid: '@azure/functions.CosmosDBv3FunctionOptions.leaseCollectionPrefix'
    package: '@azure/functions'
    summary: >-
      When set, the value is added as a prefix to the leases created in the
      Lease collection for this function.

      Using a prefix allows two separate Azure Functions to share the same Lease
      collection by using different prefixes.
    fullName: leaseCollectionPrefix
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseCollectionPrefix?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.leaseCollectionPrefix](xref:@azure/functions.CosmosDBv3TriggerOptions.leaseCollectionPrefix)
  - name: leaseCollectionThroughput
    uid: '@azure/functions.CosmosDBv3FunctionOptions.leaseCollectionThroughput'
    package: '@azure/functions'
    summary: >-
      When `createLeaseCollectionIfNotExists` is set to `true`, defines the
      amount of Request Units to assign to the created lease collection
    fullName: leaseCollectionThroughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseCollectionThroughput?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.leaseCollectionThroughput](xref:@azure/functions.CosmosDBv3TriggerOptions.leaseCollectionThroughput)
  - name: leaseConnectionStringSetting
    uid: '@azure/functions.CosmosDBv3FunctionOptions.leaseConnectionStringSetting'
    package: '@azure/functions'
    summary: >-
      The name of an app setting that contains the connection string to the
      service which holds the lease collection.

      If not set it will connect to the service defined by
      `connectionStringSetting`
    fullName: leaseConnectionStringSetting
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseConnectionStringSetting?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.leaseConnectionStringSetting](xref:@azure/functions.CosmosDBv3TriggerOptions.leaseConnectionStringSetting)
  - name: leaseDatabaseName
    uid: '@azure/functions.CosmosDBv3FunctionOptions.leaseDatabaseName'
    package: '@azure/functions'
    summary: >-
      The name of the database that holds the collection to store leases. If not
      set, it will use the value of `databaseName`
    fullName: leaseDatabaseName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseDatabaseName?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.leaseDatabaseName](xref:@azure/functions.CosmosDBv3TriggerOptions.leaseDatabaseName)
  - name: leaseExpirationInterval
    uid: '@azure/functions.CosmosDBv3FunctionOptions.leaseExpirationInterval'
    package: '@azure/functions'
    summary: >-
      When set, it defines, in milliseconds, the interval for which the lease is
      taken on a lease representing a partition.

      If the lease is not renewed within this interval, it will cause it to
      expire and ownership of the partition will move to another instance.

      Default is 60000 (60 seconds).
    fullName: leaseExpirationInterval
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseExpirationInterval?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.leaseExpirationInterval](xref:@azure/functions.CosmosDBv3TriggerOptions.leaseExpirationInterval)
  - name: leaseRenewInterval
    uid: '@azure/functions.CosmosDBv3FunctionOptions.leaseRenewInterval'
    package: '@azure/functions'
    summary: >-
      When set, it defines, in milliseconds, the renew interval for all leases
      for partitions currently held by an instance.

      Default is 17000 (17 seconds).
    fullName: leaseRenewInterval
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseRenewInterval?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.leaseRenewInterval](xref:@azure/functions.CosmosDBv3TriggerOptions.leaseRenewInterval)
  - name: maxItemsPerInvocation
    uid: '@azure/functions.CosmosDBv3FunctionOptions.maxItemsPerInvocation'
    package: '@azure/functions'
    summary: >-
      When set, this property sets the maximum number of items received per
      Function call.

      If operations in the monitored container are performed through stored
      procedures, transaction scope is preserved when reading items from the
      change feed.

      As a result, the number of items received could be higher than the
      specified value so that the items changed by the same transaction are
      returned as part of one atomic batch.
    fullName: maxItemsPerInvocation
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxItemsPerInvocation?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.maxItemsPerInvocation](xref:@azure/functions.CosmosDBv3TriggerOptions.maxItemsPerInvocation)
  - name: preferredLocations
    uid: '@azure/functions.CosmosDBv3FunctionOptions.preferredLocations'
    package: '@azure/functions'
    summary: >-
      Defines preferred locations (regions) for geo-replicated database accounts
      in the Azure Cosmos DB service.

      Values should be comma-separated. For example, East US,South Central
      US,North Europe
    fullName: preferredLocations
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'preferredLocations?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.preferredLocations](xref:@azure/functions.CosmosDBv3TriggerOptions.preferredLocations)
  - name: return
    uid: '@azure/functions.CosmosDBv3FunctionOptions.return'
    package: '@azure/functions'
    summary: >-
      Configuration for the optional primary output of the function

      This is the main output that you should set as the return value of the
      function handler during invocation
    fullName: return
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'return?: FunctionOutput'
      return:
        description: ''
        type: <xref uid="@azure/functions.FunctionOutput" />
    inheritanceDescription: <b>Inherited From</b> Partial.return
  - name: startFromBeginning
    uid: '@azure/functions.CosmosDBv3FunctionOptions.startFromBeginning'
    package: '@azure/functions'
    summary: >-
      This option tells the Trigger to read changes from the beginning of the
      container's change history instead of starting at the current time.

      Reading from the beginning only works the first time the trigger starts,
      as in subsequent runs, the checkpoints are already stored.

      Setting this option to true when there are leases already created has no
      effect.
    fullName: startFromBeginning
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'startFromBeginning?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.startFromBeginning](xref:@azure/functions.CosmosDBv3TriggerOptions.startFromBeginning)
  - name: useMultipleWriteLocations
    uid: '@azure/functions.CosmosDBv3FunctionOptions.useMultipleWriteLocations'
    package: '@azure/functions'
    summary: Enables multi-region accounts for writing to the leases collection.
    fullName: useMultipleWriteLocations
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'useMultipleWriteLocations?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv3TriggerOptions.useMultipleWriteLocations](xref:@azure/functions.CosmosDBv3TriggerOptions.useMultipleWriteLocations)
extends: >-
  <xref uid="@azure/functions.CosmosDBv3TriggerOptions" />,Partial&lt;<xref
  uid="@azure/functions.FunctionOptions" />&gt;
