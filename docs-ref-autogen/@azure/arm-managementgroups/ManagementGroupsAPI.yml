### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI'
    name: ManagementGroupsAPI
    fullName: ManagementGroupsAPI
    children:
      - '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_2'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_1'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.entities'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.managementGroups'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.constructor'
      - >-
        @azure/arm-managementgroups.ManagementGroupsAPI.managementGroupSubscriptions
      - '@azure/arm-managementgroups.ManagementGroupsAPI.operations'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_2'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_1'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_2'
      - '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_1'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-managementgroups.ManagementGroupsAPIContext'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability'
    name: >-
      checkNameAvailability(CheckNameAvailabilityRequest,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks if the specified management group name is valid and unique
    syntax:
      content: >-
        function checkNameAvailability(checkNameAvailabilityRequest:
        CheckNameAvailabilityRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: checkNameAvailabilityRequest
          type:
            - '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
          description: Management group name availability check parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_2'
    name: >-
      checkNameAvailability(CheckNameAvailabilityRequest, RequestOptionsBase,
      ServiceCallback<CheckNameAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(checkNameAvailabilityRequest:
        CheckNameAvailabilityRequest, options: RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: checkNameAvailabilityRequest
          type:
            - '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
          description: Management group name availability check parameters.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managementgroups.CheckNameAvailabilityResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.checkNameAvailability_1'
    name: >-
      checkNameAvailability(CheckNameAvailabilityRequest,
      ServiceCallback<CheckNameAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(checkNameAvailabilityRequest:
        CheckNameAvailabilityRequest, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: checkNameAvailabilityRequest
          type:
            - '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
          description: Management group name availability check parameters.
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managementgroups.CheckNameAvailabilityResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.CheckNameAvailabilityResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.entities'
    name: entities
    fullName: entities
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'entities: Entities'
      return:
        type:
          - '@azure/arm-managementgroups.Entities'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.managementGroups'
    name: managementGroups
    fullName: managementGroups
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'managementGroups: ManagementGroups'
      return:
        type:
          - '@azure/arm-managementgroups.ManagementGroups'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.constructor'
    name: >-
      ManagementGroupsAPI(ServiceClientCredentials,
      Models.ManagementGroupsAPIOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the ManagementGroupsAPI class.
    syntax:
      content: >-
        new ManagementGroupsAPI(credentials: ServiceClientCredentials, options?:
        Models.ManagementGroupsAPIOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: options
          type:
            - Models.ManagementGroupsAPIOptions
          description: ''
          optional: true
    package: '@azure/arm-managementgroups'
  - uid: >-
      @azure/arm-managementgroups.ManagementGroupsAPI.managementGroupSubscriptions
    name: managementGroupSubscriptions
    fullName: managementGroupSubscriptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'managementGroupSubscriptions: ManagementGroupSubscriptions'
      return:
        type:
          - '@azure/arm-managementgroups.ManagementGroupSubscriptions'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-managementgroups.Operations'
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill'
    name: startTenantBackfill(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts backfilling subscriptions for the Tenant.
    syntax:
      content: 'function startTenantBackfill(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StartTenantBackfillResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_2'
    name: >-
      startTenantBackfill(RequestOptionsBase,
      ServiceCallback<TenantBackfillStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startTenantBackfill(options: RequestOptionsBase, callback:
        ServiceCallback<TenantBackfillStatusResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.StartTenantBackfillResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.startTenantBackfill_1'
    name: startTenantBackfill(ServiceCallback<TenantBackfillStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function startTenantBackfill(callback:
        ServiceCallback<TenantBackfillStatusResult>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.StartTenantBackfillResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus'
    name: tenantBackfillStatus(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets tenant backfill status
    syntax:
      content: 'function tenantBackfillStatus(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TenantBackfillStatusResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_2'
    name: >-
      tenantBackfillStatus(RequestOptionsBase,
      ServiceCallback<TenantBackfillStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function tenantBackfillStatus(options: RequestOptionsBase, callback:
        ServiceCallback<TenantBackfillStatusResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.TenantBackfillStatusResponse>
    package: '@azure/arm-managementgroups'
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPI.tenantBackfillStatus_1'
    name: tenantBackfillStatus(ServiceCallback<TenantBackfillStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function tenantBackfillStatus(callback:
        ServiceCallback<TenantBackfillStatusResult>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.TenantBackfillStatusResponse>
    package: '@azure/arm-managementgroups'
references:
  - uid: '@azure/arm-managementgroups.ManagementGroupsAPIContext'
    name: ManagementGroupsAPIContext
    spec.typeScript:
      - name: ManagementGroupsAPIContext
        fullName: ManagementGroupsAPIContext
        uid: '@azure/arm-managementgroups.ManagementGroupsAPIContext'
  - uid: '@azure/arm-managementgroups.Entities'
    name: Entities
    spec.typeScript:
      - name: Entities
        fullName: Entities
        uid: '@azure/arm-managementgroups.Entities'
  - uid: '@azure/arm-managementgroups.ManagementGroupSubscriptions'
    name: ManagementGroupSubscriptions
    spec.typeScript:
      - name: ManagementGroupSubscriptions
        fullName: ManagementGroupSubscriptions
        uid: '@azure/arm-managementgroups.ManagementGroupSubscriptions'
  - uid: '@azure/arm-managementgroups.ManagementGroups'
    name: ManagementGroups
    spec.typeScript:
      - name: ManagementGroups
        fullName: ManagementGroups
        uid: '@azure/arm-managementgroups.ManagementGroups'
  - uid: '@azure/arm-managementgroups.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-managementgroups.Operations'
  - uid: '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
    name: CheckNameAvailabilityRequest
    spec.typeScript:
      - name: CheckNameAvailabilityRequest
        fullName: CheckNameAvailabilityRequest
        uid: '@azure/arm-managementgroups.CheckNameAvailabilityRequest'
  - uid: ServiceCallback<@azure/arm-managementgroups.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: '@azure/arm-managementgroups.CheckNameAvailabilityResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-managementgroups.TenantBackfillStatusResult>
    name: TenantBackfillStatusResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TenantBackfillStatusResult
        fullName: TenantBackfillStatusResult
        uid: '@azure/arm-managementgroups.TenantBackfillStatusResult'
      - name: '>'
        fullName: '>'
