### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-videosearch.Videos'
    name: Videos
    fullName: Videos
    children:
      - '@azure/cognitiveservices-videosearch.Videos.followUpQueries'
      - '@azure/cognitiveservices-videosearch.Videos.id'
      - '@azure/cognitiveservices-videosearch.Videos.isFamilyFriendly'
      - '@azure/cognitiveservices-videosearch.Videos.nextOffset'
      - '@azure/cognitiveservices-videosearch.Videos.pivotSuggestions'
      - '@azure/cognitiveservices-videosearch.Videos.queryExpansions'
      - '@azure/cognitiveservices-videosearch.Videos.scenario'
      - '@azure/cognitiveservices-videosearch.Videos.totalEstimatedMatches'
      - '@azure/cognitiveservices-videosearch.Videos.value'
      - '@azure/cognitiveservices-videosearch.Videos.webSearchUrl'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/cognitiveservices-videosearch'
  - uid: '@azure/cognitiveservices-videosearch.Videos.followUpQueries'
    name: followUpQueries
    fullName: followUpQueries
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'followUpQueries?: Query[]'
      return:
        type:
          - '@azure/cognitiveservices-videosearch.Query[]'
    package: '@azure/cognitiveservices-videosearch'
  - uid: '@azure/cognitiveservices-videosearch.Videos.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-videosearch'
  - uid: '@azure/cognitiveservices-videosearch.Videos.isFamilyFriendly'
    name: isFamilyFriendly
    fullName: isFamilyFriendly
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isFamilyFriendly?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/cognitiveservices-videosearch'
  - uid: '@azure/cognitiveservices-videosearch.Videos.nextOffset'
    name: nextOffset
    fullName: nextOffset
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextOffset?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-videosearch'
  - uid: '@azure/cognitiveservices-videosearch.Videos.pivotSuggestions'
    name: pivotSuggestions
    fullName: pivotSuggestions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'pivotSuggestions?: PivotSuggestions[]'
      return:
        type:
          - '@azure/cognitiveservices-videosearch.PivotSuggestions[]'
    package: '@azure/cognitiveservices-videosearch'
  - uid: '@azure/cognitiveservices-videosearch.Videos.queryExpansions'
    name: queryExpansions
    fullName: queryExpansions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'queryExpansions?: Query[]'
      return:
        type:
          - '@azure/cognitiveservices-videosearch.Query[]'
    package: '@azure/cognitiveservices-videosearch'
  - uid: '@azure/cognitiveservices-videosearch.Videos.scenario'
    name: scenario
    fullName: scenario
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'scenario?: VideoQueryScenario'
      return:
        type:
          - '@azure/cognitiveservices-videosearch.VideoQueryScenario'
    package: '@azure/cognitiveservices-videosearch'
  - uid: '@azure/cognitiveservices-videosearch.Videos.totalEstimatedMatches'
    name: totalEstimatedMatches
    fullName: totalEstimatedMatches
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'totalEstimatedMatches?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-videosearch'
  - uid: '@azure/cognitiveservices-videosearch.Videos.value'
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'value: VideoObject[]'
      return:
        type:
          - '@azure/cognitiveservices-videosearch.VideoObject[]'
    package: '@azure/cognitiveservices-videosearch'
  - uid: '@azure/cognitiveservices-videosearch.Videos.webSearchUrl'
    name: webSearchUrl
    fullName: webSearchUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'webSearchUrl?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-videosearch'
references:
  - uid: '@azure/cognitiveservices-videosearch.Query[]'
    name: 'Query[]'
    spec.typeScript:
      - name: Query
        fullName: Query
        uid: '@azure/cognitiveservices-videosearch.Query'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/cognitiveservices-videosearch.PivotSuggestions[]'
    name: 'PivotSuggestions[]'
    spec.typeScript:
      - name: PivotSuggestions
        fullName: PivotSuggestions
        uid: '@azure/cognitiveservices-videosearch.PivotSuggestions'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/cognitiveservices-videosearch.VideoQueryScenario'
    name: VideoQueryScenario
    spec.typeScript:
      - name: VideoQueryScenario
        fullName: VideoQueryScenario
        uid: '@azure/cognitiveservices-videosearch.VideoQueryScenario'
  - uid: '@azure/cognitiveservices-videosearch.VideoObject[]'
    name: 'VideoObject[]'
    spec.typeScript:
      - name: VideoObject
        fullName: VideoObject
        uid: '@azure/cognitiveservices-videosearch.VideoObject'
      - name: '[]'
        fullName: '[]'
