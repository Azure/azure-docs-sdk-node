### YamlMime:TSType
name: LedgerDigestUploadsOperations
uid: '@azure/arm-sql.LedgerDigestUploadsOperations'
package: '@azure/arm-sql'
summary: Class representing a LedgerDigestUploadsOperations.
fullName: LedgerDigestUploadsOperations
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: LedgerDigestUploadsOperations(SqlManagementClientContext)
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.constructor'
    package: '@azure/arm-sql'
    summary: Create a LedgerDigestUploadsOperations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new LedgerDigestUploadsOperations(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-sql.SqlManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, LedgerDigestUploads,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.beginCreateOrUpdate'
    package: '@azure/arm-sql'
    summary: >-
      Enables upload ledger digests to an Azure Storage account or an Azure
      Confidential Ledger

      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: LedgerDigestUploads, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.LedgerDigestUploads" />
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: 'beginDisable(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.beginDisable'
    package: '@azure/arm-sql'
    summary: >-
      Disables uploading ledger digests to an Azure Storage account or an Azure
      Confidential Ledger

      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDisable(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      createOrUpdate(string, string, string, LedgerDigestUploads,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.createOrUpdate'
    package: '@azure/arm-sql'
    summary: >-
      Enables upload ledger digests to an Azure Storage account or an Azure
      Confidential Ledger

      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: LedgerDigestUploads, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.LedgerDigestUploads" />
          description: ''
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LedgerDigestUploadsCreateOrUpdateResponse" />&gt;
        description: Promise<Models.LedgerDigestUploadsCreateOrUpdateResponse>
  - name: 'disable(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.disable'
    package: '@azure/arm-sql'
    summary: >-
      Disables uploading ledger digests to an Azure Storage account or an Azure
      Confidential Ledger

      instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function disable(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.LedgerDigestUploadsDisableResponse"
          />&gt;
        description: Promise<Models.LedgerDigestUploadsDisableResponse>
  - name: 'get(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.get'
    package: '@azure/arm-sql'
    summary: Gets the current ledger digest upload configuration for a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.LedgerDigestUploadsGetResponse" />&gt;
        description: Promise<Models.LedgerDigestUploadsGetResponse>
  - name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<LedgerDigestUploads>)
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.get_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options: RequestOptionsBase, callback:
        ServiceCallback<LedgerDigestUploads>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.LedgerDigestUploads"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, string, ServiceCallback<LedgerDigestUploads>)'
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.get_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, callback: ServiceCallback<LedgerDigestUploads>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-sql.LedgerDigestUploads"
            />&gt;
          description: |
            The callback
  - name: 'listByDatabase(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.listByDatabase'
    package: '@azure/arm-sql'
    summary: Gets all ledger digest upload settings on a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabase(resourceGroupName: string, serverName: string,
        databaseName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LedgerDigestUploadsListByDatabaseResponse" />&gt;
        description: Promise<Models.LedgerDigestUploadsListByDatabaseResponse>
  - name: >-
      listByDatabase(string, string, string, RequestOptionsBase,
      ServiceCallback<LedgerDigestUploadsListResult>)
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.listByDatabase_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabase(resourceGroupName: string, serverName: string,
        databaseName: string, options: RequestOptionsBase, callback:
        ServiceCallback<LedgerDigestUploadsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LedgerDigestUploadsListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByDatabase(string, string, string,
      ServiceCallback<LedgerDigestUploadsListResult>)
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.listByDatabase_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabase(resourceGroupName: string, serverName: string,
        databaseName: string, callback:
        ServiceCallback<LedgerDigestUploadsListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LedgerDigestUploadsListResult" />&gt;
          description: |
            The callback
  - name: 'listByDatabaseNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.listByDatabaseNext'
    package: '@azure/arm-sql'
    summary: Gets all ledger digest upload settings on a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabaseNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LedgerDigestUploadsListByDatabaseNextResponse" />&gt;
        description: Promise<Models.LedgerDigestUploadsListByDatabaseNextResponse>
  - name: >-
      listByDatabaseNext(string, RequestOptionsBase,
      ServiceCallback<LedgerDigestUploadsListResult>)
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.listByDatabaseNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabaseNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<LedgerDigestUploadsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LedgerDigestUploadsListResult" />&gt;
          description: |
            The callback
  - name: 'listByDatabaseNext(string, ServiceCallback<LedgerDigestUploadsListResult>)'
    uid: '@azure/arm-sql.LedgerDigestUploadsOperations.listByDatabaseNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabaseNext(nextPageLink: string, callback:
        ServiceCallback<LedgerDigestUploadsListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LedgerDigestUploadsListResult" />&gt;
          description: |
            The callback
