### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.LongTermRetentionBackupsListByLocationOptionalParams'
    name: LongTermRetentionBackupsListByLocationOptionalParams
    fullName: LongTermRetentionBackupsListByLocationOptionalParams
    children:
      - >-
        @azure/arm-sql.LongTermRetentionBackupsListByLocationOptionalParams.databaseState
      - >-
        @azure/arm-sql.LongTermRetentionBackupsListByLocationOptionalParams.onlyLatestPerDatabase
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/arm-sql'
  - uid: >-
      @azure/arm-sql.LongTermRetentionBackupsListByLocationOptionalParams.databaseState
    name: databaseState
    fullName: databaseState
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether to query against just live databases, just deleted databases, or
      all databases.

      Possible values include: 'All', 'Live', 'Deleted'
    optional: true
    syntax:
      content: 'databaseState?: LongTermRetentionDatabaseState'
      return:
        type:
          - '@azure/arm-sql.LongTermRetentionDatabaseState'
    package: '@azure/arm-sql'
  - uid: >-
      @azure/arm-sql.LongTermRetentionBackupsListByLocationOptionalParams.onlyLatestPerDatabase
    name: onlyLatestPerDatabase
    fullName: onlyLatestPerDatabase
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not to only get the latest backup for each database.
    optional: true
    syntax:
      content: 'onlyLatestPerDatabase?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-sql'
references:
  - uid: '@azure/arm-sql.LongTermRetentionDatabaseState'
    name: LongTermRetentionDatabaseState
    spec.typeScript:
      - name: LongTermRetentionDatabaseState
        fullName: LongTermRetentionDatabaseState
        uid: '@azure/arm-sql.LongTermRetentionDatabaseState'
