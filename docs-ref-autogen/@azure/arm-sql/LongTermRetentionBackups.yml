### YamlMime:TSType
name: LongTermRetentionBackups
uid: '@azure/arm-sql.LongTermRetentionBackups'
package: '@azure/arm-sql'
summary: Class representing a LongTermRetentionBackups.
fullName: LongTermRetentionBackups
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: LongTermRetentionBackups(SqlManagementClientContext)
    uid: '@azure/arm-sql.LongTermRetentionBackups.constructor'
    package: '@azure/arm-sql'
    summary: Create a LongTermRetentionBackups.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new LongTermRetentionBackups(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-sql.SqlManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: >-
      beginCopy(string, string, string, string,
      CopyLongTermRetentionBackupParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginCopy'
    package: '@azure/arm-sql'
    summary: Copy an existing long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCopy(locationName: string, longTermRetentionServerName:
        string, longTermRetentionDatabaseName: string, backupName: string,
        parameters: CopyLongTermRetentionBackupParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CopyLongTermRetentionBackupParameters" />
          description: The parameters needed for long term retention copy request
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginCopyByResourceGroup(string, string, string, string, string,
      CopyLongTermRetentionBackupParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginCopyByResourceGroup'
    package: '@azure/arm-sql'
    summary: Copy an existing long term retention backup to a different server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCopyByResourceGroup(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, parameters:
        CopyLongTermRetentionBackupParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CopyLongTermRetentionBackupParameters" />
          description: The parameters needed for long term retention copy request
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginDeleteByResourceGroup(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginDeleteByResourceGroup'
    package: '@azure/arm-sql'
    summary: Deletes a long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteByResourceGroup(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginDeleteMethod(string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginDeleteMethod'
    package: '@azure/arm-sql'
    summary: Deletes a long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(locationName: string,
        longTermRetentionServerName: string, longTermRetentionDatabaseName:
        string, backupName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginUpdate(string, string, string, string,
      UpdateLongTermRetentionBackupParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginUpdate'
    package: '@azure/arm-sql'
    summary: Updates an existing long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(locationName: string, longTermRetentionServerName:
        string, longTermRetentionDatabaseName: string, backupName: string,
        parameters: UpdateLongTermRetentionBackupParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-sql.UpdateLongTermRetentionBackupParameters"
            />
          description: The requested backup resource state
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      beginUpdateByResourceGroup(string, string, string, string, string,
      UpdateLongTermRetentionBackupParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.beginUpdateByResourceGroup'
    package: '@azure/arm-sql'
    summary: Updates an existing long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateByResourceGroup(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, parameters:
        UpdateLongTermRetentionBackupParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-sql.UpdateLongTermRetentionBackupParameters"
            />
          description: The requested backup resource state
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: Promise<msRestAzure.LROPoller>
  - name: >-
      copy(string, string, string, string,
      CopyLongTermRetentionBackupParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.copy'
    package: '@azure/arm-sql'
    summary: Copy an existing long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function copy(locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, parameters:
        CopyLongTermRetentionBackupParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CopyLongTermRetentionBackupParameters" />
          description: The parameters needed for long term retention copy request
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.LongTermRetentionBackupsCopyResponse"
          />&gt;
        description: Promise<Models.LongTermRetentionBackupsCopyResponse>
  - name: >-
      copyByResourceGroup(string, string, string, string, string,
      CopyLongTermRetentionBackupParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.copyByResourceGroup'
    package: '@azure/arm-sql'
    summary: Copy an existing long term retention backup to a different server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function copyByResourceGroup(resourceGroupName: string, locationName:
        string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, parameters:
        CopyLongTermRetentionBackupParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CopyLongTermRetentionBackupParameters" />
          description: The parameters needed for long term retention copy request
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsCopyByResourceGroupResponse"
          />&gt;
        description: Promise<Models.LongTermRetentionBackupsCopyByResourceGroupResponse>
  - name: >-
      deleteByResourceGroup(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.deleteByResourceGroup'
    package: '@azure/arm-sql'
    summary: Deletes a long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteByResourceGroup(resourceGroupName: string, locationName:
        string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.LongTermRetentionBackups.deleteMethod'
    package: '@azure/arm-sql'
    summary: Deletes a long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(locationName: string, longTermRetentionServerName:
        string, longTermRetentionDatabaseName: string, backupName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'get(string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.LongTermRetentionBackups.get'
    package: '@azure/arm-sql'
    summary: Gets a long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.LongTermRetentionBackupsGetResponse"
          />&gt;
        description: Promise<Models.LongTermRetentionBackupsGetResponse>
  - name: >-
      get(string, string, string, string, RequestOptionsBase,
      ServiceCallback<LongTermRetentionBackup>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.get_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<LongTermRetentionBackup>)
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackup" />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, string, string,
      ServiceCallback<LongTermRetentionBackup>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.get_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, callback:
        ServiceCallback<LongTermRetentionBackup>)
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackup" />&gt;
          description: |
            The callback
  - name: >-
      getByResourceGroup(string, string, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.getByResourceGroup'
    package: '@azure/arm-sql'
    summary: Gets a long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByResourceGroup(resourceGroupName: string, locationName:
        string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsGetByResourceGroupResponse" />&gt;
        description: Promise<Models.LongTermRetentionBackupsGetByResourceGroupResponse>
  - name: >-
      getByResourceGroup(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<LongTermRetentionBackup>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.getByResourceGroup_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByResourceGroup(resourceGroupName: string, locationName:
        string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<LongTermRetentionBackup>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackup" />&gt;
          description: |
            The callback
  - name: >-
      getByResourceGroup(string, string, string, string, string,
      ServiceCallback<LongTermRetentionBackup>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.getByResourceGroup_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByResourceGroup(resourceGroupName: string, locationName:
        string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, callback:
        ServiceCallback<LongTermRetentionBackup>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackup" />&gt;
          description: |
            The callback
  - name: >-
      listByDatabase(string, string, string,
      LongTermRetentionBackupsListByDatabaseOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabase_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabase(locationName: string,
        longTermRetentionServerName: string, longTermRetentionDatabaseName:
        string, options: LongTermRetentionBackupsListByDatabaseOptionalParams,
        callback: ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByDatabaseOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByDatabase(string, string, string,
      Models.LongTermRetentionBackupsListByDatabaseOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabase'
    package: '@azure/arm-sql'
    summary: Lists all long term retention backups for a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabase(locationName: string,
        longTermRetentionServerName: string, longTermRetentionDatabaseName:
        string, options?:
        Models.LongTermRetentionBackupsListByDatabaseOptionalParams)
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByDatabaseOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByDatabaseResponse" />&gt;
        description: Promise<Models.LongTermRetentionBackupsListByDatabaseResponse>
  - name: >-
      listByDatabase(string, string, string,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabase_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabase(locationName: string,
        longTermRetentionServerName: string, longTermRetentionDatabaseName:
        string, callback: ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByDatabaseNext(string,
      LongTermRetentionBackupsListByDatabaseNextOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabaseNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabaseNext(nextPageLink: string, options:
        LongTermRetentionBackupsListByDatabaseNextOptionalParams, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByDatabaseNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByDatabaseNext(string,
      Models.LongTermRetentionBackupsListByDatabaseNextOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabaseNext'
    package: '@azure/arm-sql'
    summary: Lists all long term retention backups for a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabaseNext(nextPageLink: string, options?:
        Models.LongTermRetentionBackupsListByDatabaseNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByDatabaseNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByDatabaseNextResponse" />&gt;
        description: Promise<Models.LongTermRetentionBackupsListByDatabaseNextResponse>
  - name: >-
      listByDatabaseNext(string,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByDatabaseNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByDatabaseNext(nextPageLink: string, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByLocation(string,
      LongTermRetentionBackupsListByLocationOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocation_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByLocation(locationName: string, options:
        LongTermRetentionBackupsListByLocationOptionalParams, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByLocationOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByLocation(string,
      Models.LongTermRetentionBackupsListByLocationOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocation'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given location.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByLocation(locationName: string, options?:
        Models.LongTermRetentionBackupsListByLocationOptionalParams)
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByLocationOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByLocationResponse" />&gt;
        description: Promise<Models.LongTermRetentionBackupsListByLocationResponse>
  - name: 'listByLocation(string, ServiceCallback<LongTermRetentionBackupListResult>)'
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocation_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByLocation(locationName: string, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByLocationNext(string,
      LongTermRetentionBackupsListByLocationNextOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocationNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByLocationNext(nextPageLink: string, options:
        LongTermRetentionBackupsListByLocationNextOptionalParams, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByLocationNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByLocationNext(string,
      Models.LongTermRetentionBackupsListByLocationNextOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocationNext'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given location.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByLocationNext(nextPageLink: string, options?:
        Models.LongTermRetentionBackupsListByLocationNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByLocationNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByLocationNextResponse" />&gt;
        description: Promise<Models.LongTermRetentionBackupsListByLocationNextResponse>
  - name: >-
      listByLocationNext(string,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByLocationNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByLocationNext(nextPageLink: string, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupDatabase(string, string, string, string,
      LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupDatabase_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupDatabase(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, options:
        LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams,
        callback: ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupDatabase(string, string, string, string,
      Models.LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupDatabase'
    package: '@azure/arm-sql'
    summary: Lists all long term retention backups for a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupDatabase(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, options?:
        Models.LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByResourceGroupDatabaseResponse"
          />&gt;
        description: >-
          Promise<Models.LongTermRetentionBackupsListByResourceGroupDatabaseResponse>
  - name: >-
      listByResourceGroupDatabase(string, string, string, string,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupDatabase_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupDatabase(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupDatabaseNext(string,
      LongTermRetentionBackupsListByResourceGroupDatabaseNextOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupDatabaseNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupDatabaseNext(nextPageLink: string, options:
        LongTermRetentionBackupsListByResourceGroupDatabaseNextOptionalParams,
        callback: ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByResourceGroupDatabaseNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupDatabaseNext(string,
      Models.LongTermRetentionBackupsListByResourceGroupDatabaseNextOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupDatabaseNext'
    package: '@azure/arm-sql'
    summary: Lists all long term retention backups for a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupDatabaseNext(nextPageLink: string, options?:
        Models.LongTermRetentionBackupsListByResourceGroupDatabaseNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByResourceGroupDatabaseNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByResourceGroupDatabaseNextResponse"
          />&gt;
        description: >-
          Promise<Models.LongTermRetentionBackupsListByResourceGroupDatabaseNextResponse>
  - name: >-
      listByResourceGroupDatabaseNext(string,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupDatabaseNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupDatabaseNext(nextPageLink: string, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupLocation(string, string,
      LongTermRetentionBackupsListByResourceGroupLocationOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupLocation_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupLocation(resourceGroupName: string,
        locationName: string, options:
        LongTermRetentionBackupsListByResourceGroupLocationOptionalParams,
        callback: ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByResourceGroupLocationOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupLocation(string, string,
      Models.LongTermRetentionBackupsListByResourceGroupLocationOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupLocation'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given location.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupLocation(resourceGroupName: string,
        locationName: string, options?:
        Models.LongTermRetentionBackupsListByResourceGroupLocationOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByResourceGroupLocationOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByResourceGroupLocationResponse"
          />&gt;
        description: >-
          Promise<Models.LongTermRetentionBackupsListByResourceGroupLocationResponse>
  - name: >-
      listByResourceGroupLocation(string, string,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupLocation_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupLocation(resourceGroupName: string,
        locationName: string, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupLocationNext(string,
      LongTermRetentionBackupsListByResourceGroupLocationNextOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupLocationNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupLocationNext(nextPageLink: string, options:
        LongTermRetentionBackupsListByResourceGroupLocationNextOptionalParams,
        callback: ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByResourceGroupLocationNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupLocationNext(string,
      Models.LongTermRetentionBackupsListByResourceGroupLocationNextOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupLocationNext'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given location.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupLocationNext(nextPageLink: string, options?:
        Models.LongTermRetentionBackupsListByResourceGroupLocationNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByResourceGroupLocationNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByResourceGroupLocationNextResponse"
          />&gt;
        description: >-
          Promise<Models.LongTermRetentionBackupsListByResourceGroupLocationNextResponse>
  - name: >-
      listByResourceGroupLocationNext(string,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupLocationNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupLocationNext(nextPageLink: string, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupServer(string, string, string,
      LongTermRetentionBackupsListByResourceGroupServerOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupServer_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupServer(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string, options:
        LongTermRetentionBackupsListByResourceGroupServerOptionalParams,
        callback: ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByResourceGroupServerOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupServer(string, string, string,
      Models.LongTermRetentionBackupsListByResourceGroupServerOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupServer'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupServer(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string, options?:
        Models.LongTermRetentionBackupsListByResourceGroupServerOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByResourceGroupServerOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByResourceGroupServerResponse"
          />&gt;
        description: >-
          Promise<Models.LongTermRetentionBackupsListByResourceGroupServerResponse>
  - name: >-
      listByResourceGroupServer(string, string, string,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupServer_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupServer(resourceGroupName: string,
        locationName: string, longTermRetentionServerName: string, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupServerNext(string,
      LongTermRetentionBackupsListByResourceGroupServerNextOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupServerNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupServerNext(nextPageLink: string, options:
        LongTermRetentionBackupsListByResourceGroupServerNextOptionalParams,
        callback: ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByResourceGroupServerNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByResourceGroupServerNext(string,
      Models.LongTermRetentionBackupsListByResourceGroupServerNextOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupServerNext'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupServerNext(nextPageLink: string, options?:
        Models.LongTermRetentionBackupsListByResourceGroupServerNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByResourceGroupServerNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByResourceGroupServerNextResponse"
          />&gt;
        description: >-
          Promise<Models.LongTermRetentionBackupsListByResourceGroupServerNextResponse>
  - name: >-
      listByResourceGroupServerNext(string,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByResourceGroupServerNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroupServerNext(nextPageLink: string, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByServer(string, string,
      LongTermRetentionBackupsListByServerOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByServer_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServer(locationName: string, longTermRetentionServerName:
        string, options: LongTermRetentionBackupsListByServerOptionalParams,
        callback: ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByServerOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByServer(string, string,
      Models.LongTermRetentionBackupsListByServerOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByServer'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServer(locationName: string, longTermRetentionServerName:
        string, options?:
        Models.LongTermRetentionBackupsListByServerOptionalParams)
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByServerOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByServerResponse" />&gt;
        description: Promise<Models.LongTermRetentionBackupsListByServerResponse>
  - name: >-
      listByServer(string, string,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByServer_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServer(locationName: string, longTermRetentionServerName:
        string, callback: ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: locationName
          type: string
          description: The location of the database
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByServerNext(string,
      LongTermRetentionBackupsListByServerNextOptionalParams,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByServerNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, options:
        LongTermRetentionBackupsListByServerNextOptionalParams, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.LongTermRetentionBackupsListByServerNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      listByServerNext(string,
      Models.LongTermRetentionBackupsListByServerNextOptionalParams)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByServerNext'
    package: '@azure/arm-sql'
    summary: Lists the long term retention backups for a given server.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, options?:
        Models.LongTermRetentionBackupsListByServerNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.LongTermRetentionBackupsListByServerNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsListByServerNextResponse" />&gt;
        description: Promise<Models.LongTermRetentionBackupsListByServerNextResponse>
  - name: >-
      listByServerNext(string,
      ServiceCallback<LongTermRetentionBackupListResult>)
    uid: '@azure/arm-sql.LongTermRetentionBackups.listByServerNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServerNext(nextPageLink: string, callback:
        ServiceCallback<LongTermRetentionBackupListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.LongTermRetentionBackupListResult" />&gt;
          description: |
            The callback
  - name: >-
      update(string, string, string, string,
      UpdateLongTermRetentionBackupParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.update'
    package: '@azure/arm-sql'
    summary: Updates an existing long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(locationName: string, longTermRetentionServerName:
        string, longTermRetentionDatabaseName: string, backupName: string,
        parameters: UpdateLongTermRetentionBackupParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-sql.UpdateLongTermRetentionBackupParameters"
            />
          description: The requested backup resource state
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.LongTermRetentionBackupsUpdateResponse"
          />&gt;
        description: Promise<Models.LongTermRetentionBackupsUpdateResponse>
  - name: >-
      updateByResourceGroup(string, string, string, string, string,
      UpdateLongTermRetentionBackupParameters, msRest.RequestOptionsBase)
    uid: '@azure/arm-sql.LongTermRetentionBackups.updateByResourceGroup'
    package: '@azure/arm-sql'
    summary: Updates an existing long term retention backup.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateByResourceGroup(resourceGroupName: string, locationName:
        string, longTermRetentionServerName: string,
        longTermRetentionDatabaseName: string, backupName: string, parameters:
        UpdateLongTermRetentionBackupParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: locationName
          type: string
          description: The location of the database.
        - id: longTermRetentionServerName
          type: string
          description: The name of the server
        - id: longTermRetentionDatabaseName
          type: string
          description: The name of the database
        - id: backupName
          type: string
          description: The backup name.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-sql.UpdateLongTermRetentionBackupParameters"
            />
          description: The requested backup resource state
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.LongTermRetentionBackupsUpdateByResourceGroupResponse"
          />&gt;
        description: Promise<Models.LongTermRetentionBackupsUpdateByResourceGroupResponse>
