### YamlMime:TSType
name: ManagedDatabaseTables
uid: '@azure/arm-sql.ManagedDatabaseTables'
package: '@azure/arm-sql'
summary: Class representing a ManagedDatabaseTables.
fullName: ManagedDatabaseTables
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ManagedDatabaseTables(SqlManagementClientContext)
    uid: '@azure/arm-sql.ManagedDatabaseTables.constructor'
    package: '@azure/arm-sql'
    summary: Create a ManagedDatabaseTables.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ManagedDatabaseTables(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-sql.SqlManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'get(string, string, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-sql.ManagedDatabaseTables.get'
    package: '@azure/arm-sql'
    summary: Get managed database table
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, schemaName: string, tableName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: tableName
          type: string
          description: The name of the table.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.ManagedDatabaseTablesGetResponse" />&gt;
        description: Promise<Models.ManagedDatabaseTablesGetResponse>
  - name: >-
      get(string, string, string, string, string, RequestOptionsBase,
      ServiceCallback<DatabaseTable>)
    uid: '@azure/arm-sql.ManagedDatabaseTables.get_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, schemaName: string, tableName: string, options:
        RequestOptionsBase, callback: ServiceCallback<DatabaseTable>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: tableName
          type: string
          description: The name of the table.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-sql.DatabaseTable" />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, string, string, string,
      ServiceCallback<DatabaseTable>)
    uid: '@azure/arm-sql.ManagedDatabaseTables.get_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, schemaName: string, tableName: string, callback:
        ServiceCallback<DatabaseTable>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: tableName
          type: string
          description: The name of the table.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-sql.DatabaseTable" />&gt;
          description: |
            The callback
  - name: >-
      listBySchema(string, string, string, string,
      ManagedDatabaseTablesListBySchemaOptionalParams,
      ServiceCallback<DatabaseTableListResult>)
    uid: '@azure/arm-sql.ManagedDatabaseTables.listBySchema_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchema(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, schemaName: string, options:
        ManagedDatabaseTablesListBySchemaOptionalParams, callback:
        ServiceCallback<DatabaseTableListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.ManagedDatabaseTablesListBySchemaOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.DatabaseTableListResult" />&gt;
          description: |
            The callback
  - name: >-
      listBySchema(string, string, string, string,
      Models.ManagedDatabaseTablesListBySchemaOptionalParams)
    uid: '@azure/arm-sql.ManagedDatabaseTables.listBySchema'
    package: '@azure/arm-sql'
    summary: List managed database tables
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchema(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, schemaName: string, options?:
        Models.ManagedDatabaseTablesListBySchemaOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: options
          type: >-
            <xref uid="Models.ManagedDatabaseTablesListBySchemaOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagedDatabaseTablesListBySchemaResponse" />&gt;
        description: Promise<Models.ManagedDatabaseTablesListBySchemaResponse>
  - name: >-
      listBySchema(string, string, string, string,
      ServiceCallback<DatabaseTableListResult>)
    uid: '@azure/arm-sql.ManagedDatabaseTables.listBySchema_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchema(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, schemaName: string, callback:
        ServiceCallback<DatabaseTableListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group that contains the resource. You can
            obtain this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: schemaName
          type: string
          description: The name of the schema.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.DatabaseTableListResult" />&gt;
          description: |
            The callback
  - name: >-
      listBySchemaNext(string,
      ManagedDatabaseTablesListBySchemaNextOptionalParams,
      ServiceCallback<DatabaseTableListResult>)
    uid: '@azure/arm-sql.ManagedDatabaseTables.listBySchemaNext_2'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchemaNext(nextPageLink: string, options:
        ManagedDatabaseTablesListBySchemaNextOptionalParams, callback:
        ServiceCallback<DatabaseTableListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.ManagedDatabaseTablesListBySchemaNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.DatabaseTableListResult" />&gt;
          description: |
            The callback
  - name: >-
      listBySchemaNext(string,
      Models.ManagedDatabaseTablesListBySchemaNextOptionalParams)
    uid: '@azure/arm-sql.ManagedDatabaseTables.listBySchemaNext'
    package: '@azure/arm-sql'
    summary: List managed database tables
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchemaNext(nextPageLink: string, options?:
        Models.ManagedDatabaseTablesListBySchemaNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.ManagedDatabaseTablesListBySchemaNextOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.ManagedDatabaseTablesListBySchemaNextResponse" />&gt;
        description: Promise<Models.ManagedDatabaseTablesListBySchemaNextResponse>
  - name: 'listBySchemaNext(string, ServiceCallback<DatabaseTableListResult>)'
    uid: '@azure/arm-sql.ManagedDatabaseTables.listBySchemaNext_1'
    package: '@azure/arm-sql'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySchemaNext(nextPageLink: string, callback:
        ServiceCallback<DatabaseTableListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-sql.DatabaseTableListResult" />&gt;
          description: |
            The callback
