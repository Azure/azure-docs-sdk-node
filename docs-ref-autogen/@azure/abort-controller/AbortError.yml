### YamlMime:TSType
name: AbortError
uid: '@azure/abort-controller.AbortError'
package: '@azure/abort-controller'
summary: |+
  This error is thrown when an asynchronous operation has been aborted.
  Check for this error by testing the `name` that the name property of the
  error matches `"AbortError"`.

  **Example**

  ```ts
  const controller = new AbortController();
  controller.abort();
  try {
    doAsyncWork(controller.signal)
  } catch (e) {
    if (e.name === 'AbortError') {
      // handle abort error here.
    }
  }
  ```

fullName: AbortError
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: AbortError(string)
    uid: '@azure/abort-controller.AbortError.constructor'
    package: '@azure/abort-controller'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new AbortError(message?: string)'
      parameters:
        - id: message
          type: string
          description: ''
properties:
  - name: Error
    uid: '@azure/abort-controller.AbortError.Error'
    package: '@azure/abort-controller'
    summary: ''
    fullName: Error
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Error: ErrorConstructor'
      return:
        description: ''
        type: ErrorConstructor
inheritedProperties:
  - name: cause
    uid: '@azure/abort-controller.AbortError.cause'
    package: '@azure/abort-controller'
    summary: >-
      If present, the `error.cause` property is the underlying cause of the
      `Error`.

      It is used when catching an error and throwing a new one with a different
      message or code in order to still have access to the original error.
    fullName: cause
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cause?: unknown'
      return:
        description: ''
        type: unknown
  - name: message
    uid: '@azure/abort-controller.AbortError.message'
    package: '@azure/abort-controller'
    summary: ''
    fullName: message
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'message: string'
      return:
        description: ''
        type: string
  - name: name
    uid: '@azure/abort-controller.AbortError.name'
    package: '@azure/abort-controller'
    summary: ''
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        description: ''
        type: string
  - name: stack
    uid: '@azure/abort-controller.AbortError.stack'
    package: '@azure/abort-controller'
    summary: ''
    fullName: stack
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'stack?: string'
      return:
        description: ''
        type: string
extends: Error
