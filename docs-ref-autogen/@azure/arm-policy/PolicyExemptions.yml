### YamlMime:TSType
name: PolicyExemptions
uid: '@azure/arm-policy.PolicyExemptions'
package: '@azure/arm-policy'
summary: Class representing a PolicyExemptions.
fullName: PolicyExemptions
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: PolicyExemptions(PolicyClientContext)
    uid: '@azure/arm-policy.PolicyExemptions.constructor'
    package: '@azure/arm-policy'
    summary: Create a PolicyExemptions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new PolicyExemptions(client: PolicyClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-policy.PolicyClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'createOrUpdate(string, string, PolicyExemption, msRest.RequestOptionsBase)'
    uid: '@azure/arm-policy.PolicyExemptions.createOrUpdate'
    package: '@azure/arm-policy'
    summary: >-
      This operation creates or updates a policy exemption with the given scope
      and name. Policy

      exemptions apply to all resources contained within their scope. For
      example, when you create a

      policy exemption at resource group scope for a policy assignment at the
      same or above level, the

      exemption exempts to all applicable resources in the resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(scope: string, policyExemptionName: string,
        parameters: PolicyExemption, options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the policy exemption. Valid scopes are: management
            group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format:

            '/subscriptions/{subscriptionId}'), resource group (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyExemptionName
          type: string
          description: The name of the policy exemption to delete.
        - id: parameters
          type: <xref uid="@azure/arm-policy.PolicyExemption" />
          description: Parameters for the policy exemption.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.PolicyExemptionsCreateOrUpdateResponse"
          />&gt;
        description: Promise<Models.PolicyExemptionsCreateOrUpdateResponse>
  - name: >-
      createOrUpdate(string, string, PolicyExemption, RequestOptionsBase,
      ServiceCallback<PolicyExemption>)
    uid: '@azure/arm-policy.PolicyExemptions.createOrUpdate_2'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(scope: string, policyExemptionName: string,
        parameters: PolicyExemption, options: RequestOptionsBase, callback:
        ServiceCallback<PolicyExemption>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the policy exemption. Valid scopes are: management
            group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format:

            '/subscriptions/{subscriptionId}'), resource group (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyExemptionName
          type: string
          description: The name of the policy exemption to delete.
        - id: parameters
          type: <xref uid="@azure/arm-policy.PolicyExemption" />
          description: Parameters for the policy exemption.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-policy.PolicyExemption"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(string, string, PolicyExemption,
      ServiceCallback<PolicyExemption>)
    uid: '@azure/arm-policy.PolicyExemptions.createOrUpdate_1'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(scope: string, policyExemptionName: string,
        parameters: PolicyExemption, callback: ServiceCallback<PolicyExemption>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the policy exemption. Valid scopes are: management
            group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format:

            '/subscriptions/{subscriptionId}'), resource group (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyExemptionName
          type: string
          description: The name of the policy exemption to delete.
        - id: parameters
          type: <xref uid="@azure/arm-policy.PolicyExemption" />
          description: Parameters for the policy exemption.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-policy.PolicyExemption"
            />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-policy.PolicyExemptions.deleteMethod'
    package: '@azure/arm-policy'
    summary: >-
      This operation deletes a policy exemption, given its name and the scope it
      was created in. The

      scope of a policy exemption is the part of its ID preceding

      '/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}'.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(scope: string, policyExemptionName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the policy exemption. Valid scopes are: management
            group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format:

            '/subscriptions/{subscriptionId}'), resource group (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyExemptionName
          type: string
          description: The name of the policy exemption to delete.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;RestResponse&gt;
        description: Promise<msRest.RestResponse>
  - name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/arm-policy.PolicyExemptions.deleteMethod_2'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(scope: string, policyExemptionName: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the policy exemption. Valid scopes are: management
            group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format:

            '/subscriptions/{subscriptionId}'), resource group (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyExemptionName
          type: string
          description: The name of the policy exemption to delete.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, ServiceCallback<void>)'
    uid: '@azure/arm-policy.PolicyExemptions.deleteMethod_1'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(scope: string, policyExemptionName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the policy exemption. Valid scopes are: management
            group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format:

            '/subscriptions/{subscriptionId}'), resource group (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyExemptionName
          type: string
          description: The name of the policy exemption to delete.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-policy.PolicyExemptions.get'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves a single policy exemption, given its name and the
      scope it was created

      at.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, policyExemptionName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the policy exemption. Valid scopes are: management
            group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format:

            '/subscriptions/{subscriptionId}'), resource group (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyExemptionName
          type: string
          description: The name of the policy exemption to delete.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PolicyExemptionsGetResponse" />&gt;
        description: Promise<Models.PolicyExemptionsGetResponse>
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<PolicyExemption>)'
    uid: '@azure/arm-policy.PolicyExemptions.get_2'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, policyExemptionName: string, options:
        RequestOptionsBase, callback: ServiceCallback<PolicyExemption>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the policy exemption. Valid scopes are: management
            group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format:

            '/subscriptions/{subscriptionId}'), resource group (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyExemptionName
          type: string
          description: The name of the policy exemption to delete.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-policy.PolicyExemption"
            />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<PolicyExemption>)'
    uid: '@azure/arm-policy.PolicyExemptions.get_1'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, policyExemptionName: string, callback:
        ServiceCallback<PolicyExemption>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the policy exemption. Valid scopes are: management
            group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format:

            '/subscriptions/{subscriptionId}'), resource group (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyExemptionName
          type: string
          description: The name of the policy exemption to delete.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-policy.PolicyExemption"
            />&gt;
          description: |
            The callback
  - name: list(Models.PolicyExemptionsListOptionalParams)
    uid: '@azure/arm-policy.PolicyExemptions.list'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the list of all policy exemptions associated with
      the given

      subscription that match the optional given $filter. Valid values for
      $filter are: 'atScope()',

      'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq '{value}''.
      If $filter is not

      provided, the unfiltered list includes all policy exemptions associated
      with the subscription,

      including those that apply directly or from management groups that contain
      the given

      subscription, as well as any applied to objects contained within the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: Models.PolicyExemptionsListOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.PolicyExemptionsListOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PolicyExemptionsListResponse" />&gt;
        description: Promise<Models.PolicyExemptionsListResponse>
  - name: >-
      list(PolicyExemptionsListOptionalParams,
      ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.list_2'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: PolicyExemptionsListOptionalParams, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: options
          type: <xref uid="@azure/arm-policy.PolicyExemptionsListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.list_1'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<PolicyExemptionListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForManagementGroup(string,
      Models.PolicyExemptionsListForManagementGroupOptionalParams)
    uid: '@azure/arm-policy.PolicyExemptions.listForManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the list of all policy exemptions applicable to
      the management group

      that match the given $filter. Valid values for $filter are: 'atScope()',
      'atExactScope()',

      'excludeExpired()' or 'policyAssignmentId eq '{value}''. If
      $filter=atScope() is provided, the

      returned list includes all policy exemptions that are assigned to the
      management group or the

      management group's ancestors.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForManagementGroup(managementGroupId: string, options?:
        Models.PolicyExemptionsListForManagementGroupOptionalParams)
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: options
          type: >-
            <xref
            uid="Models.PolicyExemptionsListForManagementGroupOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.PolicyExemptionsListForManagementGroupResponse" />&gt;
        description: Promise<Models.PolicyExemptionsListForManagementGroupResponse>
  - name: >-
      listForManagementGroup(string,
      PolicyExemptionsListForManagementGroupOptionalParams,
      ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.listForManagementGroup_2'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForManagementGroup(managementGroupId: string, options:
        PolicyExemptionsListForManagementGroupOptionalParams, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyExemptionsListForManagementGroupOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: 'listForManagementGroup(string, ServiceCallback<PolicyExemptionListResult>)'
    uid: '@azure/arm-policy.PolicyExemptions.listForManagementGroup_1'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForManagementGroup(managementGroupId: string, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForManagementGroupNext(string,
      Models.PolicyExemptionsListForManagementGroupNextOptionalParams)
    uid: '@azure/arm-policy.PolicyExemptions.listForManagementGroupNext'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the list of all policy exemptions applicable to
      the management group

      that match the given $filter. Valid values for $filter are: 'atScope()',
      'atExactScope()',

      'excludeExpired()' or 'policyAssignmentId eq '{value}''. If
      $filter=atScope() is provided, the

      returned list includes all policy exemptions that are assigned to the
      management group or the

      management group's ancestors.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForManagementGroupNext(nextPageLink: string, options?:
        Models.PolicyExemptionsListForManagementGroupNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.PolicyExemptionsListForManagementGroupNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.PolicyExemptionsListForManagementGroupNextResponse" />&gt;
        description: Promise<Models.PolicyExemptionsListForManagementGroupNextResponse>
  - name: >-
      listForManagementGroupNext(string,
      PolicyExemptionsListForManagementGroupNextOptionalParams,
      ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.listForManagementGroupNext_2'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForManagementGroupNext(nextPageLink: string, options:
        PolicyExemptionsListForManagementGroupNextOptionalParams, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyExemptionsListForManagementGroupNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForManagementGroupNext(string,
      ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.listForManagementGroupNext_1'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForManagementGroupNext(nextPageLink: string, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForResource(string, string, string, string, string,
      Models.PolicyExemptionsListForResourceOptionalParams)
    uid: '@azure/arm-policy.PolicyExemptions.listForResource'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the list of all policy exemptions associated with
      the specified

      resource in the given resource group and subscription that match the
      optional given $filter.

      Valid values for $filter are: 'atScope()', 'atExactScope()',
      'excludeExpired()' or

      'policyAssignmentId eq '{value}''. If $filter is not provided, the
      unfiltered list includes all

      policy exemptions associated with the resource, including those that apply
      directly or from all

      containing scopes, as well as any applied to resources contained within
      the resource. Three

      parameters plus the resource name are used to identify a specific
      resource. If the resource is

      not part of a parent resource (the more common case), the parent resource
      path should not be

      provided (or provided as ''). For example a web app could be specified as

      ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} ==
      '', {resourceType} ==

      'sites', {resourceName} == 'MyWebApp'). If the resource is part of a
      parent resource, then all

      parameters should be provided. For example a virtual machine DNS name
      could be specified as

      ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath}
      ==

      'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames',
      {resourceName} ==

      'MyComputerName'). A convenient alternative to providing the namespace and
      type name separately

      is to provide both in the {resourceType} parameter, format:
      ({resourceProviderNamespace} == '',

      {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites',
      {resourceName} ==

      'MyWebApp').
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options?:
        Models.PolicyExemptionsListForResourceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the resource.
        - id: resourceProviderNamespace
          type: string
          description: >-
            The namespace of the resource provider. For example, the

            namespace of a virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
        - id: parentResourcePath
          type: string
          description: The parent resource path. Use empty string if there is none.
        - id: resourceType
          type: string
          description: >-
            The resource type name. For example the type name of a web app is
            'sites'

            (from Microsoft.Web/sites).
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: <xref uid="Models.PolicyExemptionsListForResourceOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="Models.PolicyExemptionsListForResourceResponse"
          />&gt;
        description: Promise<Models.PolicyExemptionsListForResourceResponse>
  - name: >-
      listForResource(string, string, string, string, string,
      PolicyExemptionsListForResourceOptionalParams,
      ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.listForResource_2'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options:
        PolicyExemptionsListForResourceOptionalParams, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the resource.
        - id: resourceProviderNamespace
          type: string
          description: >-
            The namespace of the resource provider. For example, the

            namespace of a virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
        - id: parentResourcePath
          type: string
          description: The parent resource path. Use empty string if there is none.
        - id: resourceType
          type: string
          description: >-
            The resource type name. For example the type name of a web app is
            'sites'

            (from Microsoft.Web/sites).
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyExemptionsListForResourceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForResource(string, string, string, string, string,
      ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.listForResource_1'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the resource.
        - id: resourceProviderNamespace
          type: string
          description: >-
            The namespace of the resource provider. For example, the

            namespace of a virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
        - id: parentResourcePath
          type: string
          description: The parent resource path. Use empty string if there is none.
        - id: resourceType
          type: string
          description: >-
            The resource type name. For example the type name of a web app is
            'sites'

            (from Microsoft.Web/sites).
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForResourceGroup(string,
      Models.PolicyExemptionsListForResourceGroupOptionalParams)
    uid: '@azure/arm-policy.PolicyExemptions.listForResourceGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the list of all policy exemptions associated with
      the given resource

      group in the given subscription that match the optional given $filter.
      Valid values for $filter

      are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
      'policyAssignmentId eq '{value}''. If

      $filter is not provided, the unfiltered list includes all policy
      exemptions associated with the

      resource group, including those that apply directly or apply from
      containing scopes, as well as

      any applied to resources contained within the resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, options?:
        Models.PolicyExemptionsListForResourceGroupOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the resource.
        - id: options
          type: >-
            <xref
            uid="Models.PolicyExemptionsListForResourceGroupOptionalParams" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.PolicyExemptionsListForResourceGroupResponse" />&gt;
        description: Promise<Models.PolicyExemptionsListForResourceGroupResponse>
  - name: >-
      listForResourceGroup(string,
      PolicyExemptionsListForResourceGroupOptionalParams,
      ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.listForResourceGroup_2'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, options:
        PolicyExemptionsListForResourceGroupOptionalParams, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyExemptionsListForResourceGroupOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: 'listForResourceGroup(string, ServiceCallback<PolicyExemptionListResult>)'
    uid: '@azure/arm-policy.PolicyExemptions.listForResourceGroup_1'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the resource.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForResourceGroupNext(string,
      Models.PolicyExemptionsListForResourceGroupNextOptionalParams)
    uid: '@azure/arm-policy.PolicyExemptions.listForResourceGroupNext'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the list of all policy exemptions associated with
      the given resource

      group in the given subscription that match the optional given $filter.
      Valid values for $filter

      are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
      'policyAssignmentId eq '{value}''. If

      $filter is not provided, the unfiltered list includes all policy
      exemptions associated with the

      resource group, including those that apply directly or apply from
      containing scopes, as well as

      any applied to resources contained within the resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, options?:
        Models.PolicyExemptionsListForResourceGroupNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="Models.PolicyExemptionsListForResourceGroupNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.PolicyExemptionsListForResourceGroupNextResponse" />&gt;
        description: Promise<Models.PolicyExemptionsListForResourceGroupNextResponse>
  - name: >-
      listForResourceGroupNext(string,
      PolicyExemptionsListForResourceGroupNextOptionalParams,
      ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.listForResourceGroupNext_2'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, options:
        PolicyExemptionsListForResourceGroupNextOptionalParams, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyExemptionsListForResourceGroupNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForResourceGroupNext(string,
      ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.listForResourceGroupNext_1'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForResourceNext(string,
      Models.PolicyExemptionsListForResourceNextOptionalParams)
    uid: '@azure/arm-policy.PolicyExemptions.listForResourceNext'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the list of all policy exemptions associated with
      the specified

      resource in the given resource group and subscription that match the
      optional given $filter.

      Valid values for $filter are: 'atScope()', 'atExactScope()',
      'excludeExpired()' or

      'policyAssignmentId eq '{value}''. If $filter is not provided, the
      unfiltered list includes all

      policy exemptions associated with the resource, including those that apply
      directly or from all

      containing scopes, as well as any applied to resources contained within
      the resource. Three

      parameters plus the resource name are used to identify a specific
      resource. If the resource is

      not part of a parent resource (the more common case), the parent resource
      path should not be

      provided (or provided as ''). For example a web app could be specified as

      ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} ==
      '', {resourceType} ==

      'sites', {resourceName} == 'MyWebApp'). If the resource is part of a
      parent resource, then all

      parameters should be provided. For example a virtual machine DNS name
      could be specified as

      ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath}
      ==

      'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames',
      {resourceName} ==

      'MyComputerName'). A convenient alternative to providing the namespace and
      type name separately

      is to provide both in the {resourceType} parameter, format:
      ({resourceProviderNamespace} == '',

      {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites',
      {resourceName} ==

      'MyWebApp').
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, options?:
        Models.PolicyExemptionsListForResourceNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref uid="Models.PolicyExemptionsListForResourceNextOptionalParams"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="Models.PolicyExemptionsListForResourceNextResponse" />&gt;
        description: Promise<Models.PolicyExemptionsListForResourceNextResponse>
  - name: >-
      listForResourceNext(string,
      PolicyExemptionsListForResourceNextOptionalParams,
      ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.listForResourceNext_2'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, options:
        PolicyExemptionsListForResourceNextOptionalParams, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyExemptionsListForResourceNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: 'listForResourceNext(string, ServiceCallback<PolicyExemptionListResult>)'
    uid: '@azure/arm-policy.PolicyExemptions.listForResourceNext_1'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, Models.PolicyExemptionsListNextOptionalParams)'
    uid: '@azure/arm-policy.PolicyExemptions.listNext'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the list of all policy exemptions associated with
      the given

      subscription that match the optional given $filter. Valid values for
      $filter are: 'atScope()',

      'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq '{value}''.
      If $filter is not

      provided, the unfiltered list includes all policy exemptions associated
      with the subscription,

      including those that apply directly or from management groups that contain
      the given

      subscription, as well as any applied to objects contained within the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.PolicyExemptionsListNextOptionalParams)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.PolicyExemptionsListNextOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.PolicyExemptionsListNextResponse" />&gt;
        description: Promise<Models.PolicyExemptionsListNextResponse>
  - name: >-
      listNext(string, PolicyExemptionsListNextOptionalParams,
      ServiceCallback<PolicyExemptionListResult>)
    uid: '@azure/arm-policy.PolicyExemptions.listNext_2'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        PolicyExemptionsListNextOptionalParams, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: >-
            <xref uid="@azure/arm-policy.PolicyExemptionsListNextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<PolicyExemptionListResult>)'
    uid: '@azure/arm-policy.PolicyExemptions.listNext_1'
    package: '@azure/arm-policy'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<PolicyExemptionListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-policy.PolicyExemptionListResult" />&gt;
          description: |
            The callback
