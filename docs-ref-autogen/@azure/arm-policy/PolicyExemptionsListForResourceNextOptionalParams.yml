### YamlMime:TSType
name: PolicyExemptionsListForResourceNextOptionalParams
uid: '@azure/arm-policy.PolicyExemptionsListForResourceNextOptionalParams'
package: '@azure/arm-policy'
summary: Optional Parameters.
fullName: PolicyExemptionsListForResourceNextOptionalParams
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: abortSignal
    uid: >-
      @azure/arm-policy.PolicyExemptionsListForResourceNextOptionalParams.abortSignal
    package: '@azure/arm-policy'
    summary: The signal which can be used to abort requests.
    fullName: abortSignal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type: AbortSignalLike
        description: ''
  - name: customHeaders
    uid: >-
      @azure/arm-policy.PolicyExemptionsListForResourceNextOptionalParams.customHeaders
    package: '@azure/arm-policy'
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    fullName: customHeaders
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type: 'undefined | [key: string]: string'
        description: ''
  - name: filter
    uid: '@azure/arm-policy.PolicyExemptionsListForResourceNextOptionalParams.filter'
    package: '@azure/arm-policy'
    summary: >-
      The filter to apply on the operation. Valid values for $filter are:
      'atScope()',

      'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq '{value}''.
      If $filter is not

      provided, no filtering is performed. If $filter is not provided, the
      unfiltered list includes

      all policy exemptions associated with the scope, including those that
      apply directly or apply

      from containing scopes. If $filter=atScope() is provided, the returned
      list only includes all

      policy exemptions that apply to the scope, which is everything in the
      unfiltered list except

      those applied to sub scopes contained within the given scope. If
      $filter=atExactScope() is

      provided, the returned list only includes all policy exemptions that at
      the given scope. If

      $filter=excludeExpired() is provided, the returned list only includes all
      policy exemptions

      that either haven't expired or didn't set expiration date. If
      $filter=policyAssignmentId eq

      '{value}' is provided. the returned list only includes all policy
      exemptions that are

      associated with the give policyAssignmentId.
    fullName: filter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'filter?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: onDownloadProgress
    uid: >-
      @azure/arm-policy.PolicyExemptionsListForResourceNextOptionalParams.onDownloadProgress
    package: '@azure/arm-policy'
    summary: Callback which fires upon download progress.
    fullName: onDownloadProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type: 'undefined | (progress: TransferProgressEvent) =&gt; void'
        description: ''
  - name: onUploadProgress
    uid: >-
      @azure/arm-policy.PolicyExemptionsListForResourceNextOptionalParams.onUploadProgress
    package: '@azure/arm-policy'
    summary: Callback which fires upon upload progress.
    fullName: onUploadProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type: 'undefined | (progress: TransferProgressEvent) =&gt; void'
        description: ''
  - name: timeout
    uid: >-
      @azure/arm-policy.PolicyExemptionsListForResourceNextOptionalParams.timeout
    package: '@azure/arm-policy'
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    fullName: timeout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type: undefined | number
        description: ''
extends: RequestOptionsBase
