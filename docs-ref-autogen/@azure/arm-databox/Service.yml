### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-databox.Service'
    name: Service
    fullName: Service
    children:
      - '@azure/arm-databox.Service.listAvailableSkus'
      - '@azure/arm-databox.Service.listAvailableSkus_2'
      - '@azure/arm-databox.Service.listAvailableSkus_1'
      - '@azure/arm-databox.Service.listAvailableSkusNext'
      - '@azure/arm-databox.Service.listAvailableSkusNext_2'
      - '@azure/arm-databox.Service.listAvailableSkusNext_1'
      - '@azure/arm-databox.Service.constructor'
      - '@azure/arm-databox.Service.validateAddressMethod'
      - '@azure/arm-databox.Service.validateAddressMethod_2'
      - '@azure/arm-databox.Service.validateAddressMethod_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Service.
    package: '@azure/arm-databox'
  - uid: '@azure/arm-databox.Service.listAvailableSkus'
    name: 'listAvailableSkus(string, AvailableSkuRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This method provides the list of available skus for the given subscription
      and location.
    syntax:
      content: >-
        function listAvailableSkus(location: string, availableSkuRequest:
        AvailableSkuRequest, options?: msRest.RequestOptionsBase)
      parameters:
        - id: location
          type:
            - string
          description: The location of the resource
        - id: availableSkuRequest
          type:
            - '@azure/arm-databox.AvailableSkuRequest'
          description: Filters for showing the available skus.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServiceListAvailableSkusResponse>
    package: '@azure/arm-databox'
  - uid: '@azure/arm-databox.Service.listAvailableSkus_2'
    name: >-
      listAvailableSkus(string, AvailableSkuRequest, RequestOptionsBase,
      ServiceCallback<AvailableSkusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSkus(location: string, availableSkuRequest:
        AvailableSkuRequest, options: RequestOptionsBase, callback:
        ServiceCallback<AvailableSkusResult>)
      parameters:
        - id: location
          type:
            - string
          description: The location of the resource
        - id: availableSkuRequest
          type:
            - '@azure/arm-databox.AvailableSkuRequest'
          description: Filters for showing the available skus.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-databox.AvailableSkusResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ServiceListAvailableSkusResponse>
    package: '@azure/arm-databox'
  - uid: '@azure/arm-databox.Service.listAvailableSkus_1'
    name: >-
      listAvailableSkus(string, AvailableSkuRequest,
      ServiceCallback<AvailableSkusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSkus(location: string, availableSkuRequest:
        AvailableSkuRequest, callback: ServiceCallback<AvailableSkusResult>)
      parameters:
        - id: location
          type:
            - string
          description: The location of the resource
        - id: availableSkuRequest
          type:
            - '@azure/arm-databox.AvailableSkuRequest'
          description: Filters for showing the available skus.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-databox.AvailableSkusResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ServiceListAvailableSkusResponse>
    package: '@azure/arm-databox'
  - uid: '@azure/arm-databox.Service.listAvailableSkusNext'
    name: 'listAvailableSkusNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This method provides the list of available skus for the given subscription
      and location.
    syntax:
      content: >-
        function listAvailableSkusNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServiceListAvailableSkusNextResponse>
    package: '@azure/arm-databox'
  - uid: '@azure/arm-databox.Service.listAvailableSkusNext_2'
    name: >-
      listAvailableSkusNext(string, RequestOptionsBase,
      ServiceCallback<AvailableSkusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSkusNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<AvailableSkusResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-databox.AvailableSkusResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ServiceListAvailableSkusNextResponse>
    package: '@azure/arm-databox'
  - uid: '@azure/arm-databox.Service.listAvailableSkusNext_1'
    name: 'listAvailableSkusNext(string, ServiceCallback<AvailableSkusResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAvailableSkusNext(nextPageLink: string, callback:
        ServiceCallback<AvailableSkusResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-databox.AvailableSkusResult>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ServiceListAvailableSkusNextResponse>
    package: '@azure/arm-databox'
  - uid: '@azure/arm-databox.Service.constructor'
    name: Service(DataBoxManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Service.
    syntax:
      content: 'new Service(client: DataBoxManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-databox.DataBoxManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-databox'
  - uid: '@azure/arm-databox.Service.validateAddressMethod'
    name: >-
      validateAddressMethod(string, ShippingAddress, Models.SkuName,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      This method validates the customer shipping address and provide alternate
      addresses if any.
    syntax:
      content: >-
        function validateAddressMethod(location: string, shippingAddress:
        ShippingAddress, deviceType: Models.SkuName, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: location
          type:
            - string
          description: The location of the resource
        - id: shippingAddress
          type:
            - '@azure/arm-databox.ShippingAddress'
          description: Shipping address of the customer.
        - id: deviceType
          type:
            - Models.SkuName
          description: >-
            Device type to be used for the job. Possible values include:
            'DataBox',

            'DataBoxDisk', 'DataBoxHeavy'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServiceValidateAddressMethodResponse>
    package: '@azure/arm-databox'
  - uid: '@azure/arm-databox.Service.validateAddressMethod_2'
    name: >-
      validateAddressMethod(string, ShippingAddress, Models.SkuName,
      RequestOptionsBase, ServiceCallback<AddressValidationOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validateAddressMethod(location: string, shippingAddress:
        ShippingAddress, deviceType: Models.SkuName, options:
        RequestOptionsBase, callback: ServiceCallback<AddressValidationOutput>)
      parameters:
        - id: location
          type:
            - string
          description: The location of the resource
        - id: shippingAddress
          type:
            - '@azure/arm-databox.ShippingAddress'
          description: Shipping address of the customer.
        - id: deviceType
          type:
            - Models.SkuName
          description: >-
            Device type to be used for the job. Possible values include:
            'DataBox',

            'DataBoxDisk', 'DataBoxHeavy'
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-databox.AddressValidationOutput>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ServiceValidateAddressMethodResponse>
    package: '@azure/arm-databox'
  - uid: '@azure/arm-databox.Service.validateAddressMethod_1'
    name: >-
      validateAddressMethod(string, ShippingAddress, Models.SkuName,
      ServiceCallback<AddressValidationOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function validateAddressMethod(location: string, shippingAddress:
        ShippingAddress, deviceType: Models.SkuName, callback:
        ServiceCallback<AddressValidationOutput>)
      parameters:
        - id: location
          type:
            - string
          description: The location of the resource
        - id: shippingAddress
          type:
            - '@azure/arm-databox.ShippingAddress'
          description: Shipping address of the customer.
        - id: deviceType
          type:
            - Models.SkuName
          description: >-
            Device type to be used for the job. Possible values include:
            'DataBox',

            'DataBoxDisk', 'DataBoxHeavy'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-databox.AddressValidationOutput>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ServiceValidateAddressMethodResponse>
    package: '@azure/arm-databox'
references:
  - uid: '@azure/arm-databox.DataBoxManagementClientContext'
    name: DataBoxManagementClientContext
    spec.typeScript:
      - name: DataBoxManagementClientContext
        fullName: DataBoxManagementClientContext
        uid: '@azure/arm-databox.DataBoxManagementClientContext'
  - uid: '@azure/arm-databox.AvailableSkuRequest'
    name: AvailableSkuRequest
    spec.typeScript:
      - name: AvailableSkuRequest
        fullName: AvailableSkuRequest
        uid: '@azure/arm-databox.AvailableSkuRequest'
  - uid: ServiceCallback<@azure/arm-databox.AvailableSkusResult>
    name: AvailableSkusResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AvailableSkusResult
        fullName: AvailableSkusResult
        uid: '@azure/arm-databox.AvailableSkusResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-databox.ShippingAddress'
    name: ShippingAddress
    spec.typeScript:
      - name: ShippingAddress
        fullName: ShippingAddress
        uid: '@azure/arm-databox.ShippingAddress'
  - uid: ServiceCallback<@azure/arm-databox.AddressValidationOutput>
    name: AddressValidationOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AddressValidationOutput
        fullName: AddressValidationOutput
        uid: '@azure/arm-databox.AddressValidationOutput'
      - name: '>'
        fullName: '>'
