### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.Policy'
    name: Policy
    fullName: Policy
    children:
      - '@azure/arm-apimanagement.Policy.createOrUpdate'
      - '@azure/arm-apimanagement.Policy.createOrUpdate_2'
      - '@azure/arm-apimanagement.Policy.createOrUpdate_1'
      - '@azure/arm-apimanagement.Policy.deleteMethod'
      - '@azure/arm-apimanagement.Policy.deleteMethod_2'
      - '@azure/arm-apimanagement.Policy.deleteMethod_1'
      - '@azure/arm-apimanagement.Policy.get'
      - '@azure/arm-apimanagement.Policy.get_2'
      - '@azure/arm-apimanagement.Policy.get_1'
      - '@azure/arm-apimanagement.Policy.getEntityTag'
      - '@azure/arm-apimanagement.Policy.getEntityTag_2'
      - '@azure/arm-apimanagement.Policy.getEntityTag_1'
      - '@azure/arm-apimanagement.Policy.listByService'
      - '@azure/arm-apimanagement.Policy.listByService_2'
      - '@azure/arm-apimanagement.Policy.listByService_1'
      - '@azure/arm-apimanagement.Policy.constructor'
    langs:
      - typeScript
    type: class
    summary: Class representing a Policy.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.createOrUpdate'
    name: 'createOrUpdate(string, string, PolicyContract, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates the global policy configuration of the Api Management
      service.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        parameters: PolicyContract, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.PolicyContract'
          description: The policy contents to apply.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, PolicyContract, RequestOptionsBase,
      ServiceCallback<PolicyContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        parameters: PolicyContract, options: RequestOptionsBase, callback:
        ServiceCallback<PolicyContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.PolicyContract'
          description: The policy contents to apply.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.PolicyContract>
          description: |
            The callback
      return:
        type:
          - Promise<Models.PolicyCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, PolicyContract,
      ServiceCallback<PolicyContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        parameters: PolicyContract, callback: ServiceCallback<PolicyContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.PolicyContract'
          description: The policy contents to apply.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.PolicyContract>
          description: |
            The callback
      return:
        type:
          - Promise<Models.PolicyCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the global policy configuration of the Api Management Service.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        ifMatch: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        ifMatch: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.deleteMethod_1'
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the Global policy definition of the Api Management service.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<PolicyContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<PolicyContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.PolicyContract>
          description: |
            The callback
      return:
        type:
          - Promise<Models.PolicyGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.get_1'
    name: 'get(string, string, ServiceCallback<PolicyContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, callback:
        ServiceCallback<PolicyContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.PolicyContract>
          description: |
            The callback
      return:
        type:
          - Promise<Models.PolicyGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.getEntityTag'
    name: 'getEntityTag(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the entity state (Etag) version of the Global policy definition in
      the Api Management

      service.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.getEntityTag_2'
    name: 'getEntityTag(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<Models.PolicyGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.getEntityTag_1'
    name: 'getEntityTag(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<Models.PolicyGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.listByService'
    name: 'listByService(string, string, Models.PolicyListByServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the Global Policy definitions of the Api Management service.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Models.PolicyListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: options
          type:
            - Models.PolicyListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.listByService_2'
    name: >-
      listByService(string, string, PolicyListByServiceOptionalParams,
      ServiceCallback<PolicyCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: PolicyListByServiceOptionalParams, callback:
        ServiceCallback<PolicyCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: options
          type:
            - '@azure/arm-apimanagement.PolicyListByServiceOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.PolicyCollection>
          description: |
            The callback
      return:
        type:
          - Promise<Models.PolicyListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.listByService_1'
    name: 'listByService(string, string, ServiceCallback<PolicyCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<PolicyCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.PolicyCollection>
          description: |
            The callback
      return:
        type:
          - Promise<Models.PolicyListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Policy.constructor'
    name: Policy(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Policy.
    syntax:
      content: 'new Policy(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: '@azure/arm-apimanagement.PolicyContract'
    name: PolicyContract
    spec.typeScript:
      - name: PolicyContract
        fullName: PolicyContract
        uid: '@azure/arm-apimanagement.PolicyContract'
  - uid: ServiceCallback<@azure/arm-apimanagement.PolicyContract>
    name: PolicyContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PolicyContract
        fullName: PolicyContract
        uid: '@azure/arm-apimanagement.PolicyContract'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-apimanagement.PolicyCollection>
    name: PolicyCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PolicyCollection
        fullName: PolicyCollection
        uid: '@azure/arm-apimanagement.PolicyCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.PolicyListByServiceOptionalParams'
    name: PolicyListByServiceOptionalParams
    spec.typeScript:
      - name: PolicyListByServiceOptionalParams
        fullName: PolicyListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.PolicyListByServiceOptionalParams'
