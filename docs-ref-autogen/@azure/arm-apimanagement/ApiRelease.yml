### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.ApiRelease'
    name: ApiRelease
    fullName: ApiRelease
    children:
      - '@azure/arm-apimanagement.ApiRelease.constructor'
      - '@azure/arm-apimanagement.ApiRelease.create'
      - '@azure/arm-apimanagement.ApiRelease.create_2'
      - '@azure/arm-apimanagement.ApiRelease.create_1'
      - '@azure/arm-apimanagement.ApiRelease.deleteMethod'
      - '@azure/arm-apimanagement.ApiRelease.deleteMethod_2'
      - '@azure/arm-apimanagement.ApiRelease.deleteMethod_1'
      - '@azure/arm-apimanagement.ApiRelease.get'
      - '@azure/arm-apimanagement.ApiRelease.get_2'
      - '@azure/arm-apimanagement.ApiRelease.get_1'
      - '@azure/arm-apimanagement.ApiRelease.getEntityTag'
      - '@azure/arm-apimanagement.ApiRelease.getEntityTag_2'
      - '@azure/arm-apimanagement.ApiRelease.getEntityTag_1'
      - '@azure/arm-apimanagement.ApiRelease.list_2'
      - '@azure/arm-apimanagement.ApiRelease.list'
      - '@azure/arm-apimanagement.ApiRelease.list_1'
      - '@azure/arm-apimanagement.ApiRelease.listNext'
      - '@azure/arm-apimanagement.ApiRelease.listNext_2'
      - '@azure/arm-apimanagement.ApiRelease.listNext_1'
      - '@azure/arm-apimanagement.ApiRelease.update'
      - '@azure/arm-apimanagement.ApiRelease.update_2'
      - '@azure/arm-apimanagement.ApiRelease.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a ApiRelease.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.constructor'
    name: ApiRelease(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a ApiRelease.
    syntax:
      content: 'new ApiRelease(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.create'
    name: >-
      create(string, string, string, string, ApiReleaseContract,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Release for the API.
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, parameters: ApiReleaseContract, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.ApiReleaseContract'
          description: Create parameters.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApiReleaseCreateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.create_2'
    name: >-
      create(string, string, string, string, ApiReleaseContract,
      RequestOptionsBase, ServiceCallback<ApiReleaseContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, parameters: ApiReleaseContract, options:
        RequestOptionsBase, callback: ServiceCallback<ApiReleaseContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.ApiReleaseContract'
          description: Create parameters.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiReleaseContract>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ApiReleaseCreateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.create_1'
    name: >-
      create(string, string, string, string, ApiReleaseContract,
      ServiceCallback<ApiReleaseContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, parameters: ApiReleaseContract, callback:
        ServiceCallback<ApiReleaseContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.ApiReleaseContract'
          description: Create parameters.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiReleaseContract>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ApiReleaseCreateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.deleteMethod'
    name: >-
      deleteMethod(string, string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified release in the API.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, ifMatch: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.deleteMethod_1'
    name: >-
      deleteMethod(string, string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, ifMatch: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.get'
    name: 'get(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the details of an API release.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApiReleaseGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.get_2'
    name: >-
      get(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ApiReleaseContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, options: RequestOptionsBase, callback:
        ServiceCallback<ApiReleaseContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiReleaseContract>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ApiReleaseGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.get_1'
    name: 'get(string, string, string, string, ServiceCallback<ApiReleaseContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, callback:
        ServiceCallback<ApiReleaseContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiReleaseContract>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ApiReleaseGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.getEntityTag'
    name: 'getEntityTag(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the etag of an API release.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApiReleaseGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.getEntityTag_2'
    name: >-
      getEntityTag(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ApiReleaseGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.getEntityTag_1'
    name: 'getEntityTag(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, releaseId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ApiReleaseGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.list_2'
    name: >-
      list(string, string, string, ApiReleaseListOptionalParams,
      ServiceCallback<ApiReleaseCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, apiId:
        string, options: ApiReleaseListOptionalParams, callback:
        ServiceCallback<ApiReleaseCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type:
            - '@azure/arm-apimanagement.ApiReleaseListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiReleaseCollection>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ApiReleaseListResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.list'
    name: 'list(string, string, string, Models.ApiReleaseListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all releases of an API. An API release is created when making an API
      Revision current.

      Releases are also used to rollback to previous revisions. Results will be
      paged and can be

      constrained by the $top and $skip parameters.
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, apiId:
        string, options?: Models.ApiReleaseListOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type:
            - Models.ApiReleaseListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApiReleaseListResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.list_1'
    name: 'list(string, string, string, ServiceCallback<ApiReleaseCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, apiId:
        string, callback: ServiceCallback<ApiReleaseCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiReleaseCollection>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ApiReleaseListResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all releases of an API. An API release is created when making an API
      Revision current.

      Releases are also used to rollback to previous revisions. Results will be
      paged and can be

      constrained by the $top and $skip parameters.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ApiReleaseListNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<ApiReleaseCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ApiReleaseCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiReleaseCollection>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ApiReleaseListNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.listNext_1'
    name: 'listNext(string, ServiceCallback<ApiReleaseCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ApiReleaseCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.ApiReleaseCollection>
          description: |
            The callback
      return:
        type:
          - Promise<Models.ApiReleaseListNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.update'
    name: >-
      update(string, string, string, string, ApiReleaseContract, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the details of the release of the API specified by its identifier.
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, parameters: ApiReleaseContract, ifMatch:
        string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.ApiReleaseContract'
          description: API Release Update parameters.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.update_2'
    name: >-
      update(string, string, string, string, ApiReleaseContract, string,
      RequestOptionsBase, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, parameters: ApiReleaseContract, ifMatch:
        string, options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.ApiReleaseContract'
          description: API Release Update parameters.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.ApiRelease.update_1'
    name: >-
      update(string, string, string, string, ApiReleaseContract, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, releaseId: string, parameters: ApiReleaseContract, ifMatch:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: apiId
          type:
            - string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: releaseId
          type:
            - string
          description: >-
            Release identifier within an API. Must be unique in the current API
            Management

            service instance.
        - id: parameters
          type:
            - '@azure/arm-apimanagement.ApiReleaseContract'
          description: API Release Update parameters.
        - id: ifMatch
          type:
            - string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header

            response of the GET request or it should be * for unconditional
            update.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: '@azure/arm-apimanagement.ApiReleaseContract'
    name: ApiReleaseContract
    spec.typeScript:
      - name: ApiReleaseContract
        fullName: ApiReleaseContract
        uid: '@azure/arm-apimanagement.ApiReleaseContract'
  - uid: ServiceCallback<@azure/arm-apimanagement.ApiReleaseContract>
    name: ApiReleaseContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApiReleaseContract
        fullName: ApiReleaseContract
        uid: '@azure/arm-apimanagement.ApiReleaseContract'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-apimanagement.ApiReleaseCollection>
    name: ApiReleaseCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApiReleaseCollection
        fullName: ApiReleaseCollection
        uid: '@azure/arm-apimanagement.ApiReleaseCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.ApiReleaseListOptionalParams'
    name: ApiReleaseListOptionalParams
    spec.typeScript:
      - name: ApiReleaseListOptionalParams
        fullName: ApiReleaseListOptionalParams
        uid: '@azure/arm-apimanagement.ApiReleaseListOptionalParams'
