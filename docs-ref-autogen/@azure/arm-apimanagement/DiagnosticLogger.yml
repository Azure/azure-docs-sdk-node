### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.DiagnosticLogger'
    name: DiagnosticLogger
    fullName: DiagnosticLogger
    children:
      - '@azure/arm-apimanagement.DiagnosticLogger.checkEntityExists'
      - '@azure/arm-apimanagement.DiagnosticLogger.checkEntityExists_2'
      - '@azure/arm-apimanagement.DiagnosticLogger.checkEntityExists_1'
      - '@azure/arm-apimanagement.DiagnosticLogger.createOrUpdate'
      - '@azure/arm-apimanagement.DiagnosticLogger.createOrUpdate_2'
      - '@azure/arm-apimanagement.DiagnosticLogger.createOrUpdate_1'
      - '@azure/arm-apimanagement.DiagnosticLogger.deleteMethod'
      - '@azure/arm-apimanagement.DiagnosticLogger.deleteMethod_2'
      - '@azure/arm-apimanagement.DiagnosticLogger.deleteMethod_1'
      - '@azure/arm-apimanagement.DiagnosticLogger.constructor'
      - '@azure/arm-apimanagement.DiagnosticLogger.listByService_2'
      - '@azure/arm-apimanagement.DiagnosticLogger.listByService'
      - '@azure/arm-apimanagement.DiagnosticLogger.listByService_1'
      - '@azure/arm-apimanagement.DiagnosticLogger.listByServiceNext'
      - '@azure/arm-apimanagement.DiagnosticLogger.listByServiceNext_2'
      - '@azure/arm-apimanagement.DiagnosticLogger.listByServiceNext_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a DiagnosticLogger.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.checkEntityExists'
    name: >-
      checkEntityExists(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks that logger entity specified by identifier is associated with the
      diagnostics entity.
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, diagnosticId: string, loggerid: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: loggerid
          type:
            - string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DiagnosticLoggerCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.checkEntityExists_2'
    name: >-
      checkEntityExists(string, string, string, string, RequestOptionsBase,
      ServiceCallback<boolean>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, diagnosticId: string, loggerid: string, options:
        RequestOptionsBase, callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: loggerid
          type:
            - string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
      return:
        type:
          - Promise<Models.DiagnosticLoggerCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.checkEntityExists_1'
    name: >-
      checkEntityExists(string, string, string, string,
      ServiceCallback<boolean>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, diagnosticId: string, loggerid: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: loggerid
          type:
            - string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            The callback
      return:
        type:
          - Promise<Models.DiagnosticLoggerCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.createOrUpdate'
    name: 'createOrUpdate(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Attaches a logger to a dignostic.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        diagnosticId: string, loggerid: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: loggerid
          type:
            - string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DiagnosticLoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.createOrUpdate_2'
    name: >-
      createOrUpdate(string, string, string, string, RequestOptionsBase,
      ServiceCallback<LoggerContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        diagnosticId: string, loggerid: string, options: RequestOptionsBase,
        callback: ServiceCallback<LoggerContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: loggerid
          type:
            - string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            The callback
      return:
        type:
          - Promise<Models.DiagnosticLoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.createOrUpdate_1'
    name: >-
      createOrUpdate(string, string, string, string,
      ServiceCallback<LoggerContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        diagnosticId: string, loggerid: string, callback:
        ServiceCallback<LoggerContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: loggerid
          type:
            - string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            The callback
      return:
        type:
          - Promise<Models.DiagnosticLoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified Logger from Diagnostic.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        diagnosticId: string, loggerid: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: loggerid
          type:
            - string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        diagnosticId: string, loggerid: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: loggerid
          type:
            - string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        diagnosticId: string, loggerid: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: loggerid
          type:
            - string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.constructor'
    name: DiagnosticLogger(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a DiagnosticLogger.
    syntax:
      content: 'new DiagnosticLogger(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.listByService_2'
    name: >-
      listByService(string, string, string,
      DiagnosticLoggerListByServiceOptionalParams,
      ServiceCallback<LoggerCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        diagnosticId: string, options:
        DiagnosticLoggerListByServiceOptionalParams, callback:
        ServiceCallback<LoggerCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: options
          type:
            - >-
              @azure/arm-apimanagement.DiagnosticLoggerListByServiceOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            The callback
      return:
        type:
          - Promise<Models.DiagnosticLoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.listByService'
    name: >-
      listByService(string, string, string,
      Models.DiagnosticLoggerListByServiceOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all loggers assosiated with the specified Diagnostic of the API
      Management service

      instance.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        diagnosticId: string, options?:
        Models.DiagnosticLoggerListByServiceOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: options
          type:
            - Models.DiagnosticLoggerListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DiagnosticLoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.listByService_1'
    name: 'listByService(string, string, string, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        diagnosticId: string, callback: ServiceCallback<LoggerCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: serviceName
          type:
            - string
          description: The name of the API Management service.
        - id: diagnosticId
          type:
            - string
          description: >-
            Diagnostic identifier. Must be unique in the current API Management
            service

            instance.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            The callback
      return:
        type:
          - Promise<Models.DiagnosticLoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all loggers assosiated with the specified Diagnostic of the API
      Management service

      instance.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DiagnosticLoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.listByServiceNext_2'
    name: >-
      listByServiceNext(string, RequestOptionsBase,
      ServiceCallback<LoggerCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<LoggerCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            The callback
      return:
        type:
          - Promise<Models.DiagnosticLoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.DiagnosticLogger.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<LoggerCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            The callback
      return:
        type:
          - Promise<Models.DiagnosticLoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: ServiceCallback<@azure/arm-apimanagement.LoggerContract>
    name: LoggerContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerContract
        fullName: LoggerContract
        uid: '@azure/arm-apimanagement.LoggerContract'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
    name: LoggerCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerCollection
        fullName: LoggerCollection
        uid: '@azure/arm-apimanagement.LoggerCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.DiagnosticLoggerListByServiceOptionalParams'
    name: DiagnosticLoggerListByServiceOptionalParams
    spec.typeScript:
      - name: DiagnosticLoggerListByServiceOptionalParams
        fullName: DiagnosticLoggerListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.DiagnosticLoggerListByServiceOptionalParams'
