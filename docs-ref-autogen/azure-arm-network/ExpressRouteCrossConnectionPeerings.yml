### YamlMime:UniversalReference
items:
  - uid: azure-arm-network.ExpressRouteCrossConnectionPeerings
    id: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: ExpressRouteCrossConnectionPeerings
    summary: Class representing a ExpressRouteCrossConnectionPeerings.
    fullName: azure-arm-network.ExpressRouteCrossConnectionPeerings
    source:
      id: azure-arm-network.ExpressRouteCrossConnectionPeerings
      path: >-
        lib\services\networkManagement2\lib\operations\expressRouteCrossConnectionPeerings.js
      startLine: 1109
      remote:
        branch: master
        path: >-
          lib\services\networkManagement2\lib\operations\expressRouteCrossConnectionPeerings.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-arm-network.ExpressRouteCrossConnectionPeerings.#ctor'
      - >-
        azure-arm-network.ExpressRouteCrossConnectionPeerings#listWithHttpOperationResponse
      - 'azure-arm-network.ExpressRouteCrossConnectionPeerings#list'
      - >-
        azure-arm-network.ExpressRouteCrossConnectionPeerings#deleteMethodWithHttpOperationResponse
      - 'azure-arm-network.ExpressRouteCrossConnectionPeerings#deleteMethod'
      - >-
        azure-arm-network.ExpressRouteCrossConnectionPeerings#getWithHttpOperationResponse
      - 'azure-arm-network.ExpressRouteCrossConnectionPeerings#get'
      - >-
        azure-arm-network.ExpressRouteCrossConnectionPeerings#createOrUpdateWithHttpOperationResponse
      - 'azure-arm-network.ExpressRouteCrossConnectionPeerings#createOrUpdate'
      - >-
        azure-arm-network.ExpressRouteCrossConnectionPeerings#beginDeleteMethodWithHttpOperationResponse
      - 'azure-arm-network.ExpressRouteCrossConnectionPeerings#beginDeleteMethod'
      - >-
        azure-arm-network.ExpressRouteCrossConnectionPeerings#beginCreateOrUpdateWithHttpOperationResponse
      - >-
        azure-arm-network.ExpressRouteCrossConnectionPeerings#beginCreateOrUpdate
      - >-
        azure-arm-network.ExpressRouteCrossConnectionPeerings#listNextWithHttpOperationResponse
      - 'azure-arm-network.ExpressRouteCrossConnectionPeerings#listNext'
    langs:
      - js
  - id: 'azure-arm-network.ExpressRouteCrossConnectionPeerings.#ctor'
    uid: 'azure-arm-network.ExpressRouteCrossConnectionPeerings.#ctor'
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: ExpressRouteCrossConnectionPeerings(client)
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.ExpressRouteCrossConnectionPeerings(client)
    summary: Create a ExpressRouteCrossConnectionPeerings.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedNetworkManagementClient
          description: Reference to the service client.
      content: new ExpressRouteCrossConnectionPeerings(client)
    langs:
      - js
  - uid: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#listWithHttpOperationResponse
    id: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#listWithHttpOperationResponse
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: >-
      listWithHttpOperationResponse(resourceGroupName, crossConnectionName,
      options)
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.listWithHttpOperationResponse(resourceGroupName,
      crossConnectionName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ExpressRouteCrossConnectionPeeringList>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<ExpressRouteCrossConnectionPeeringList>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listWithHttpOperationResponse(resourceGroupName,
        crossConnectionName, options)
    langs:
      - js
  - uid: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#list'
    id: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#list'
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: 'list(resourceGroupName, crossConnectionName, options, optionalCallback)'
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.list(resourceGroupName,
      crossConnectionName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {ExpressRouteCrossConnectionPeeringList} - The deserialized result
          object.
        value: >-
          {ExpressRouteCrossConnectionPeeringList} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ExpressRouteCrossConnectionPeeringList} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ExpressRouteCrossConnectionPeeringList} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function list(resourceGroupName, crossConnectionName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#deleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#deleteMethodWithHttpOperationResponse
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName,
      crossConnectionName, peeringName, options)
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.deleteMethodWithHttpOperationResponse(resourceGroupName,
      crossConnectionName, peeringName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: peeringName
          type:
            - string
          description: The name of the peering.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        crossConnectionName, peeringName, options)
    langs:
      - js
  - uid: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#deleteMethod'
    id: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#deleteMethod'
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: >-
      deleteMethod(resourceGroupName, crossConnectionName, peeringName, options,
      optionalCallback)
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.deleteMethod(resourceGroupName,
      crossConnectionName, peeringName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: peeringName
          type:
            - string
          description: The name of the peering.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteMethod(resourceGroupName, crossConnectionName,
        peeringName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#getWithHttpOperationResponse
    id: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#getWithHttpOperationResponse
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: >-
      getWithHttpOperationResponse(resourceGroupName, crossConnectionName,
      peeringName, options)
    summary: Gets the specified peering for the ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.getWithHttpOperationResponse(resourceGroupName,
      crossConnectionName, peeringName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ExpressRouteCrossConnectionPeering>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<ExpressRouteCrossConnectionPeering>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: peeringName
          type:
            - string
          description: The name of the peering.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName,
        crossConnectionName, peeringName, options)
    langs:
      - js
  - uid: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#get'
    id: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#get'
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: >-
      get(resourceGroupName, crossConnectionName, peeringName, options,
      optionalCallback)
    summary: Gets the specified peering for the ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.get(resourceGroupName,
      crossConnectionName, peeringName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ExpressRouteCrossConnectionPeering} - The deserialized result object.'
        value: '{ExpressRouteCrossConnectionPeering} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ExpressRouteCrossConnectionPeering} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ExpressRouteCrossConnectionPeering} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: peeringName
          type:
            - string
          description: The name of the peering.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function get(resourceGroupName, crossConnectionName, peeringName,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#createOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#createOrUpdateWithHttpOperationResponse
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName,
      crossConnectionName, peeringName, peeringParameters, options)
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      crossConnectionName, peeringName, peeringParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ExpressRouteCrossConnectionPeering>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<ExpressRouteCrossConnectionPeering>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: peeringName
          type:
            - string
          description: The name of the peering.
        - id: peeringParameters
          type:
            - object
          description: "Parameters supplied to the create or\rupdate ExpressRouteCrossConnection peering operation."
        - id: peeringParameters.peeringType
          type:
            - string
          description: "The peering type. Possible\rvalues include: 'AzurePublicPeering', 'AzurePrivatePeering',\r'MicrosoftPeering'"
          optional: true
        - id: peeringParameters.state
          type:
            - string
          description: "The peering state. Possible values\rinclude: 'Disabled', 'Enabled'"
          optional: true
        - id: peeringParameters.peerASN
          type:
            - number
          description: The peer ASN.
          optional: true
        - id: peeringParameters.primaryPeerAddressPrefix
          type:
            - string
          description: "The primary\raddress prefix."
          optional: true
        - id: peeringParameters.secondaryPeerAddressPrefix
          type:
            - string
          description: "The secondary\raddress prefix."
          optional: true
        - id: peeringParameters.sharedKey
          type:
            - string
          description: The shared key.
          optional: true
        - id: peeringParameters.vlanId
          type:
            - number
          description: The VLAN ID.
          optional: true
        - id: peeringParameters.microsoftPeeringConfig
          type:
            - object
          description: "The Microsoft\rpeering configuration."
          optional: true
        - id: peeringParameters.lastModifiedBy
          type:
            - string
          description: "Gets whether the provider\ror the customer last modified the peering."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig
          type:
            - object
          description: "The IPv6 peering\rconfiguration."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.primaryPeerAddressPrefix
          type:
            - string
          description: "The primary\raddress prefix."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.secondaryPeerAddressPrefix
          type:
            - string
          description: "The\rsecondary address prefix."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig
          type:
            - object
          description: The Microsoft peering configuration.
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixes
          type:
            - array
          description: The reference of AdvertisedPublicPrefixes.
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedCommunities
          type:
            - array
          description: The communities of bgp peering. Spepcified for microsoft peering
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixesState
          type:
            - string
          description: "AdvertisedPublicPrefixState of the Peering resource. Possible values are\r'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.\rPossible values include: 'NotConfigured', 'Configuring', 'Configured',\r'ValidationNeeded'"
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.legacyMode
          type:
            - number
          description: "The\rlegacy mode of the peering."
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.customerASN
          type:
            - number
          description: "The\rCustomerASN of the peering."
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName
          type:
            - string
          description: The RoutingRegistryName of the configuration.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter
          type:
            - object
          description: "The\rreference of the RouteFilter resource."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.rules
          type:
            - array
          description: Collection of RouteFilterRules contained within a route filter.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.peerings
          type:
            - array
          description: "A\rcollection of references to express route circuit peerings."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.location
          type:
            - string
          description: Resource location.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.state
          type:
            - string
          description: "The state of\rpeering. Possible values are: 'Disabled' and 'Enabled'. Possible values\rinclude: 'Disabled', 'Enabled'"
          optional: true
        - id: peeringParameters.name
          type:
            - string
          description: "Gets name of the resource that is\runique within a resource group. This name can be used to access the\rresource."
          optional: true
        - id: peeringParameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        crossConnectionName, peeringName, peeringParameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#createOrUpdate'
    id: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#createOrUpdate'
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: >-
      createOrUpdate(resourceGroupName, crossConnectionName, peeringName,
      peeringParameters, options, optionalCallback)
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.createOrUpdate(resourceGroupName,
      crossConnectionName, peeringName, peeringParameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ExpressRouteCrossConnectionPeering} - The deserialized result object.'
        value: '{ExpressRouteCrossConnectionPeering} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ExpressRouteCrossConnectionPeering} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ExpressRouteCrossConnectionPeering} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: peeringName
          type:
            - string
          description: The name of the peering.
        - id: peeringParameters
          type:
            - object
          description: "Parameters supplied to the create or\rupdate ExpressRouteCrossConnection peering operation."
        - id: peeringParameters.peeringType
          type:
            - string
          description: "The peering type. Possible\rvalues include: 'AzurePublicPeering', 'AzurePrivatePeering',\r'MicrosoftPeering'"
          optional: true
        - id: peeringParameters.state
          type:
            - string
          description: "The peering state. Possible values\rinclude: 'Disabled', 'Enabled'"
          optional: true
        - id: peeringParameters.peerASN
          type:
            - number
          description: The peer ASN.
          optional: true
        - id: peeringParameters.primaryPeerAddressPrefix
          type:
            - string
          description: "The primary\raddress prefix."
          optional: true
        - id: peeringParameters.secondaryPeerAddressPrefix
          type:
            - string
          description: "The secondary\raddress prefix."
          optional: true
        - id: peeringParameters.sharedKey
          type:
            - string
          description: The shared key.
          optional: true
        - id: peeringParameters.vlanId
          type:
            - number
          description: The VLAN ID.
          optional: true
        - id: peeringParameters.microsoftPeeringConfig
          type:
            - object
          description: "The Microsoft\rpeering configuration."
          optional: true
        - id: peeringParameters.lastModifiedBy
          type:
            - string
          description: "Gets whether the provider\ror the customer last modified the peering."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig
          type:
            - object
          description: "The IPv6 peering\rconfiguration."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.primaryPeerAddressPrefix
          type:
            - string
          description: "The primary\raddress prefix."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.secondaryPeerAddressPrefix
          type:
            - string
          description: "The\rsecondary address prefix."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig
          type:
            - object
          description: The Microsoft peering configuration.
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixes
          type:
            - array
          description: The reference of AdvertisedPublicPrefixes.
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedCommunities
          type:
            - array
          description: The communities of bgp peering. Spepcified for microsoft peering
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixesState
          type:
            - string
          description: "AdvertisedPublicPrefixState of the Peering resource. Possible values are\r'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.\rPossible values include: 'NotConfigured', 'Configuring', 'Configured',\r'ValidationNeeded'"
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.legacyMode
          type:
            - number
          description: "The\rlegacy mode of the peering."
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.customerASN
          type:
            - number
          description: "The\rCustomerASN of the peering."
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName
          type:
            - string
          description: The RoutingRegistryName of the configuration.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter
          type:
            - object
          description: "The\rreference of the RouteFilter resource."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.rules
          type:
            - array
          description: Collection of RouteFilterRules contained within a route filter.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.peerings
          type:
            - array
          description: "A\rcollection of references to express route circuit peerings."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.location
          type:
            - string
          description: Resource location.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.state
          type:
            - string
          description: "The state of\rpeering. Possible values are: 'Disabled' and 'Enabled'. Possible values\rinclude: 'Disabled', 'Enabled'"
          optional: true
        - id: peeringParameters.name
          type:
            - string
          description: "Gets name of the resource that is\runique within a resource group. This name can be used to access the\rresource."
          optional: true
        - id: peeringParameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createOrUpdate(resourceGroupName, crossConnectionName,
        peeringName, peeringParameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#beginDeleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#beginDeleteMethodWithHttpOperationResponse
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      crossConnectionName, peeringName, options)
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      crossConnectionName, peeringName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: peeringName
          type:
            - string
          description: The name of the peering.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        crossConnectionName, peeringName, options)
    langs:
      - js
  - uid: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#beginDeleteMethod'
    id: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#beginDeleteMethod'
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: >-
      beginDeleteMethod(resourceGroupName, crossConnectionName, peeringName,
      options, optionalCallback)
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.beginDeleteMethod(resourceGroupName,
      crossConnectionName, peeringName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: peeringName
          type:
            - string
          description: The name of the peering.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginDeleteMethod(resourceGroupName, crossConnectionName,
        peeringName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#beginCreateOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#beginCreateOrUpdateWithHttpOperationResponse
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      crossConnectionName, peeringName, peeringParameters, options)
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      crossConnectionName, peeringName, peeringParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ExpressRouteCrossConnectionPeering>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<ExpressRouteCrossConnectionPeering>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: peeringName
          type:
            - string
          description: The name of the peering.
        - id: peeringParameters
          type:
            - object
          description: "Parameters supplied to the create or\rupdate ExpressRouteCrossConnection peering operation."
        - id: peeringParameters.peeringType
          type:
            - string
          description: "The peering type. Possible\rvalues include: 'AzurePublicPeering', 'AzurePrivatePeering',\r'MicrosoftPeering'"
          optional: true
        - id: peeringParameters.state
          type:
            - string
          description: "The peering state. Possible values\rinclude: 'Disabled', 'Enabled'"
          optional: true
        - id: peeringParameters.peerASN
          type:
            - number
          description: The peer ASN.
          optional: true
        - id: peeringParameters.primaryPeerAddressPrefix
          type:
            - string
          description: "The primary\raddress prefix."
          optional: true
        - id: peeringParameters.secondaryPeerAddressPrefix
          type:
            - string
          description: "The secondary\raddress prefix."
          optional: true
        - id: peeringParameters.sharedKey
          type:
            - string
          description: The shared key.
          optional: true
        - id: peeringParameters.vlanId
          type:
            - number
          description: The VLAN ID.
          optional: true
        - id: peeringParameters.microsoftPeeringConfig
          type:
            - object
          description: "The Microsoft\rpeering configuration."
          optional: true
        - id: peeringParameters.lastModifiedBy
          type:
            - string
          description: "Gets whether the provider\ror the customer last modified the peering."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig
          type:
            - object
          description: "The IPv6 peering\rconfiguration."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.primaryPeerAddressPrefix
          type:
            - string
          description: "The primary\raddress prefix."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.secondaryPeerAddressPrefix
          type:
            - string
          description: "The\rsecondary address prefix."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig
          type:
            - object
          description: The Microsoft peering configuration.
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixes
          type:
            - array
          description: The reference of AdvertisedPublicPrefixes.
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedCommunities
          type:
            - array
          description: The communities of bgp peering. Spepcified for microsoft peering
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixesState
          type:
            - string
          description: "AdvertisedPublicPrefixState of the Peering resource. Possible values are\r'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.\rPossible values include: 'NotConfigured', 'Configuring', 'Configured',\r'ValidationNeeded'"
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.legacyMode
          type:
            - number
          description: "The\rlegacy mode of the peering."
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.customerASN
          type:
            - number
          description: "The\rCustomerASN of the peering."
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName
          type:
            - string
          description: The RoutingRegistryName of the configuration.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter
          type:
            - object
          description: "The\rreference of the RouteFilter resource."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.rules
          type:
            - array
          description: Collection of RouteFilterRules contained within a route filter.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.peerings
          type:
            - array
          description: "A\rcollection of references to express route circuit peerings."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.location
          type:
            - string
          description: Resource location.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.state
          type:
            - string
          description: "The state of\rpeering. Possible values are: 'Disabled' and 'Enabled'. Possible values\rinclude: 'Disabled', 'Enabled'"
          optional: true
        - id: peeringParameters.name
          type:
            - string
          description: "Gets name of the resource that is\runique within a resource group. This name can be used to access the\rresource."
          optional: true
        - id: peeringParameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        crossConnectionName, peeringName, peeringParameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#beginCreateOrUpdate'
    id: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#beginCreateOrUpdate'
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: >-
      beginCreateOrUpdate(resourceGroupName, crossConnectionName, peeringName,
      peeringParameters, options, optionalCallback)
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.beginCreateOrUpdate(resourceGroupName,
      crossConnectionName, peeringName, peeringParameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ExpressRouteCrossConnectionPeering} - The deserialized result object.'
        value: '{ExpressRouteCrossConnectionPeering} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ExpressRouteCrossConnectionPeering} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ExpressRouteCrossConnectionPeering} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: "The name of the\rExpressRouteCrossConnection."
        - id: peeringName
          type:
            - string
          description: The name of the peering.
        - id: peeringParameters
          type:
            - object
          description: "Parameters supplied to the create or\rupdate ExpressRouteCrossConnection peering operation."
        - id: peeringParameters.peeringType
          type:
            - string
          description: "The peering type. Possible\rvalues include: 'AzurePublicPeering', 'AzurePrivatePeering',\r'MicrosoftPeering'"
          optional: true
        - id: peeringParameters.state
          type:
            - string
          description: "The peering state. Possible values\rinclude: 'Disabled', 'Enabled'"
          optional: true
        - id: peeringParameters.peerASN
          type:
            - number
          description: The peer ASN.
          optional: true
        - id: peeringParameters.primaryPeerAddressPrefix
          type:
            - string
          description: "The primary\raddress prefix."
          optional: true
        - id: peeringParameters.secondaryPeerAddressPrefix
          type:
            - string
          description: "The secondary\raddress prefix."
          optional: true
        - id: peeringParameters.sharedKey
          type:
            - string
          description: The shared key.
          optional: true
        - id: peeringParameters.vlanId
          type:
            - number
          description: The VLAN ID.
          optional: true
        - id: peeringParameters.microsoftPeeringConfig
          type:
            - object
          description: "The Microsoft\rpeering configuration."
          optional: true
        - id: peeringParameters.lastModifiedBy
          type:
            - string
          description: "Gets whether the provider\ror the customer last modified the peering."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig
          type:
            - object
          description: "The IPv6 peering\rconfiguration."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.primaryPeerAddressPrefix
          type:
            - string
          description: "The primary\raddress prefix."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.secondaryPeerAddressPrefix
          type:
            - string
          description: "The\rsecondary address prefix."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig
          type:
            - object
          description: The Microsoft peering configuration.
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixes
          type:
            - array
          description: The reference of AdvertisedPublicPrefixes.
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedCommunities
          type:
            - array
          description: The communities of bgp peering. Spepcified for microsoft peering
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixesState
          type:
            - string
          description: "AdvertisedPublicPrefixState of the Peering resource. Possible values are\r'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.\rPossible values include: 'NotConfigured', 'Configuring', 'Configured',\r'ValidationNeeded'"
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.legacyMode
          type:
            - number
          description: "The\rlegacy mode of the peering."
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.customerASN
          type:
            - number
          description: "The\rCustomerASN of the peering."
          optional: true
        - id: >-
            peeringParameters.ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName
          type:
            - string
          description: The RoutingRegistryName of the configuration.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter
          type:
            - object
          description: "The\rreference of the RouteFilter resource."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.rules
          type:
            - array
          description: Collection of RouteFilterRules contained within a route filter.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.peerings
          type:
            - array
          description: "A\rcollection of references to express route circuit peerings."
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.location
          type:
            - string
          description: Resource location.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.routeFilter.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: peeringParameters.ipv6PeeringConfig.state
          type:
            - string
          description: "The state of\rpeering. Possible values are: 'Disabled' and 'Enabled'. Possible values\rinclude: 'Disabled', 'Enabled'"
          optional: true
        - id: peeringParameters.name
          type:
            - string
          description: "Gets name of the resource that is\runique within a resource group. This name can be used to access the\rresource."
          optional: true
        - id: peeringParameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreateOrUpdate(resourceGroupName, crossConnectionName,
        peeringName, peeringParameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#listNextWithHttpOperationResponse
    id: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings#listNextWithHttpOperationResponse
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ExpressRouteCrossConnectionPeeringList>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<ExpressRouteCrossConnectionPeeringList>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#listNext'
    id: 'azure-arm-network.ExpressRouteCrossConnectionPeerings#listNext'
    parent: azure-arm-network.ExpressRouteCrossConnectionPeerings
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    fullName: >-
      azure-arm-network.ExpressRouteCrossConnectionPeerings.listNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {ExpressRouteCrossConnectionPeeringList} - The deserialized result
          object.
        value: >-
          {ExpressRouteCrossConnectionPeeringList} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ExpressRouteCrossConnectionPeeringList} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ExpressRouteCrossConnectionPeeringList} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
