### YamlMime:UniversalReference
items:
  - uid: azure-monitor.TenantActivityLogs
    name: TenantActivityLogs
    fullName: TenantActivityLogs
    children:
      - azure-monitor.TenantActivityLogs.list
      - azure-monitor.TenantActivityLogs.list_2
      - azure-monitor.TenantActivityLogs.list_1
      - azure-monitor.TenantActivityLogs.listNext
      - azure-monitor.TenantActivityLogs.listNext_2
      - azure-monitor.TenantActivityLogs.listNext_1
      - azure-monitor.TenantActivityLogs.listNextWithHttpOperationResponse
      - azure-monitor.TenantActivityLogs.listWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-monitor
  - uid: azure-monitor.TenantActivityLogs.list
    name: list(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Activity Logs for the Tenant.<br>Everything that is applicable to

      the API to get the Activity Logs for the subscription is applicable to
      this

      API (the parameters, $filter, etc.).<br>One thing to point out here is
      that

      this API does *not* retrieve the logs at the individual subscription of
      the

      tenant but only surfaces the logs that were generated at the tenant level.
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-monitor.EventDataCollection>
    package: azure-monitor
  - uid: azure-monitor.TenantActivityLogs.list_2
    name: 'list(Object, ServiceCallback<EventDataCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Activity Logs for the Tenant.<br>Everything that is applicable to

      the API to get the Activity Logs for the subscription is applicable to
      this

      API (the parameters, $filter, etc.).<br>One thing to point out here is
      that

      this API does *not* retrieve the logs at the individual subscription of
      the

      tenant but only surfaces the logs that were generated at the tenant level.
    syntax:
      content: >-
        function list(options: Object, callback:
        ServiceCallback<EventDataCollection>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-monitor.EventDataCollection>
          description: ''
      return:
        type:
          - Promise<azure-monitor.EventDataCollection>
    package: azure-monitor
  - uid: azure-monitor.TenantActivityLogs.list_1
    name: list(ServiceCallback<EventDataCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Activity Logs for the Tenant.<br>Everything that is applicable to

      the API to get the Activity Logs for the subscription is applicable to
      this

      API (the parameters, $filter, etc.).<br>One thing to point out here is
      that

      this API does *not* retrieve the logs at the individual subscription of
      the

      tenant but only surfaces the logs that were generated at the tenant level.
    syntax:
      content: 'function list(callback: ServiceCallback<EventDataCollection>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-monitor.EventDataCollection>
          description: ''
      return:
        type:
          - Promise<azure-monitor.EventDataCollection>
    package: azure-monitor
  - uid: azure-monitor.TenantActivityLogs.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Activity Logs for the Tenant.<br>Everything that is applicable to

      the API to get the Activity Logs for the subscription is applicable to
      this

      API (the parameters, $filter, etc.).<br>One thing to point out here is
      that

      this API does *not* retrieve the logs at the individual subscription of
      the

      tenant but only surfaces the logs that were generated at the tenant level.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-monitor.EventDataCollection>
    package: azure-monitor
  - uid: azure-monitor.TenantActivityLogs.listNext_2
    name: 'listNext(string, Object, ServiceCallback<EventDataCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Activity Logs for the Tenant.<br>Everything that is applicable to

      the API to get the Activity Logs for the subscription is applicable to
      this

      API (the parameters, $filter, etc.).<br>One thing to point out here is
      that

      this API does *not* retrieve the logs at the individual subscription of
      the

      tenant but only surfaces the logs that were generated at the tenant level.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<EventDataCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-monitor.EventDataCollection>
          description: ''
      return:
        type:
          - Promise<azure-monitor.EventDataCollection>
    package: azure-monitor
  - uid: azure-monitor.TenantActivityLogs.listNext_1
    name: 'listNext(string, ServiceCallback<EventDataCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Activity Logs for the Tenant.<br>Everything that is applicable to

      the API to get the Activity Logs for the subscription is applicable to
      this

      API (the parameters, $filter, etc.).<br>One thing to point out here is
      that

      this API does *not* retrieve the logs at the individual subscription of
      the

      tenant but only surfaces the logs that were generated at the tenant level.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<EventDataCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-monitor.EventDataCollection>
          description: ''
      return:
        type:
          - Promise<azure-monitor.EventDataCollection>
    package: azure-monitor
  - uid: azure-monitor.TenantActivityLogs.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Activity Logs for the Tenant.<br>Everything that is applicable to

      the API to get the Activity Logs for the subscription is applicable to
      this

      API (the parameters, $filter, etc.).<br>One thing to point out here is
      that

      this API does *not* retrieve the logs at the individual subscription of
      the

      tenant but only surfaces the logs that were generated at the tenant level.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-monitor.EventDataCollection>>
    package: azure-monitor
  - uid: azure-monitor.TenantActivityLogs.listWithHttpOperationResponse
    name: listWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Activity Logs for the Tenant.<br>Everything that is applicable to

      the API to get the Activity Logs for the subscription is applicable to
      this

      API (the parameters, $filter, etc.).<br>One thing to point out here is
      that

      this API does *not* retrieve the logs at the individual subscription of
      the

      tenant but only surfaces the logs that were generated at the tenant level.
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-monitor.EventDataCollection>>
    package: azure-monitor
references:
  - uid: Promise<azure-monitor.EventDataCollection>
    name: EventDataCollection>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EventDataCollection
        fullName: EventDataCollection
        uid: azure-monitor.EventDataCollection
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-monitor.EventDataCollection>
    name: EventDataCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EventDataCollection
        fullName: EventDataCollection
        uid: azure-monitor.EventDataCollection
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-monitor.EventDataCollection>>
    name: EventDataCollection>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: EventDataCollection
        fullName: EventDataCollection
        uid: azure-monitor.EventDataCollection
      - name: '>>'
        fullName: '>>'
