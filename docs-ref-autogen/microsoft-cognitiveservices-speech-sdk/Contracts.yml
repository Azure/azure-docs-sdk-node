### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.Contracts
    name: Contracts
    fullName: Contracts
    children:
      - >-
        microsoft-cognitiveservices-speech-sdk.Contracts.throwIfArrayEmptyOrWhitespace
      - microsoft-cognitiveservices-speech-sdk.Contracts.throwIfDisposed
      - microsoft-cognitiveservices-speech-sdk.Contracts.throwIfFileDoesNotExist
      - microsoft-cognitiveservices-speech-sdk.Contracts.throwIfNull
      - microsoft-cognitiveservices-speech-sdk.Contracts.throwIfNullOrUndefined
      - microsoft-cognitiveservices-speech-sdk.Contracts.throwIfNullOrWhitespace
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.Contracts.throwIfArrayEmptyOrWhitespace
    name: 'throwIfArrayEmptyOrWhitespace(string[], string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function throwIfArrayEmptyOrWhitespace(array: string[], name:
        string)
      parameters:
        - id: array
          type:
            - 'string[]'
          description: ''
        - id: name
          type:
            - string
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Contracts.throwIfDisposed
    name: throwIfDisposed(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function throwIfDisposed(isDisposed: boolean)'
      parameters:
        - id: isDisposed
          type:
            - boolean
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Contracts.throwIfFileDoesNotExist
    name: 'throwIfFileDoesNotExist(any, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function throwIfFileDoesNotExist(param: any, name: string)'
      parameters:
        - id: param
          type:
            - any
          description: ''
        - id: name
          type:
            - string
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Contracts.throwIfNull
    name: 'throwIfNull(any, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function throwIfNull(param: any, name: string)'
      parameters:
        - id: param
          type:
            - any
          description: ''
        - id: name
          type:
            - string
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Contracts.throwIfNullOrUndefined
    name: 'throwIfNullOrUndefined(any, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function throwIfNullOrUndefined(param: any, name: string)'
      parameters:
        - id: param
          type:
            - any
          description: ''
        - id: name
          type:
            - string
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.Contracts.throwIfNullOrWhitespace
    name: 'throwIfNullOrWhitespace(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function throwIfNullOrWhitespace(param: string, name: string)'
      parameters:
        - id: param
          type:
            - string
          description: ''
        - id: name
          type:
            - string
          description: ''
    package: microsoft-cognitiveservices-speech-sdk
