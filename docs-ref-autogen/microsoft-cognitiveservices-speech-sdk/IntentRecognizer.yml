### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer
    name: IntentRecognizer
    fullName: IntentRecognizer
    children:
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addAllIntents
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addIntent
      - >-
        microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addIntentWithLanguageModel
      - >-
        microsoft-cognitiveservices-speech-sdk.IntentRecognizer.authorizationToken
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.canceled
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.close
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.constructor
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.properties
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognized
      - >-
        microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognizeOnceAsync
      - microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognizing
      - >-
        microsoft-cognitiveservices-speech-sdk.IntentRecognizer.speechRecognitionLanguage
      - >-
        microsoft-cognitiveservices-speech-sdk.IntentRecognizer.startContinuousRecognitionAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.IntentRecognizer.startKeywordRecognitionAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.IntentRecognizer.stopContinuousRecognitionAsync
      - >-
        microsoft-cognitiveservices-speech-sdk.IntentRecognizer.stopKeywordRecognitionAsync
    langs:
      - typeScript
    type: class
    summary: Intent recognizer.
    extends:
      name: microsoft-cognitiveservices-speech-sdk.Recognizer
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addAllIntents
    name: addAllIntents
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addAllIntents(model: LanguageUnderstandingModel, intentId?:
        string)
      parameters:
        - id: model
          type:
            - microsoft-cognitiveservices-speech-sdk.LanguageUnderstandingModel
          description: The language understanding model containing the intents.
        - id: intentId
          type:
            - string
          description: >
            A custom id String to be returned in the IntentRecognitionResult's
            getIntentId() method.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addIntent
    name: addIntent
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a phrase that should be recognized as intent.
    syntax:
      content: 'function addIntent(simplePhrase: string, intentId?: string)'
      parameters:
        - id: simplePhrase
          type:
            - string
          description: ''
        - id: intentId
          type:
            - string
          description: >-
            A String that represents the identifier of the intent to be
            recognized.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IntentRecognizer.addIntentWithLanguageModel
    name: addIntentWithLanguageModel
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds an intent from Language Understanding service for recognition.
    syntax:
      content: >-
        function addIntentWithLanguageModel(intentId: string, model:
        LanguageUnderstandingModel, intentName?: string)
      parameters:
        - id: intentId
          type:
            - string
          description: >-
            A String that represents the identifier of the intent to be
            recognized. Ignored if intentName is empty.
        - id: model
          type:
            - microsoft-cognitiveservices-speech-sdk.LanguageUnderstandingModel
          description: The intent model from Language Understanding service.
        - id: intentName
          type:
            - string
          description: >
            The intent name defined in the intent model. If it is empty, all
            intent names defined in the model will be added.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.authorizationToken
    name: authorizationToken
    fullName: authorizationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: Sets the authorization token used to communicate with the service.
    syntax:
      content: 'public authorizationToken: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.canceled
    name: canceled
    fullName: canceled
    children: []
    langs:
      - typeScript
    type: property
    summary: The event canceled signals that an error occurred during recognition.
    syntax:
      content: >-
        public canceled: (sender: IntentRecognizer, event:
        IntentRecognitionCanceledEventArgs) => void
      return:
        type:
          - >-
            (sender: IntentRecognizer, event:
            IntentRecognitionCanceledEventArgs) => void
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.close
    name: close
    children: []
    type: method
    langs:
      - typeScript
    summary: closes all external resources held by an instance of this class.
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.constructor
    name: IntentRecognizer
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes an instance of the IntentRecognizer.
    syntax:
      content: >-
        new IntentRecognizer(speechConfig: SpeechConfig, audioConfig?:
        AudioConfig)
      parameters:
        - id: speechConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.SpeechConfig
          description: The set of configuration properties.
        - id: audioConfig
          type:
            - microsoft-cognitiveservices-speech-sdk.AudioConfig
          description: |
            An optional audio input config associated with the recognizer
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The collection of properties and their values defined for this
      IntentRecognizer.
    syntax:
      content: 'public properties: PropertyCollection'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.PropertyCollection
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognized
    name: recognized
    fullName: recognized
    children: []
    langs:
      - typeScript
    type: property
    summary: The event recognized signals that a final recognition result is received.
    syntax:
      content: >-
        public recognized: (sender: IntentRecognizer, event:
        IntentRecognitionEventArgs) => void
      return:
        type:
          - >-
            (sender: IntentRecognizer, event: IntentRecognitionEventArgs) =>
            void
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognizeOnceAsync
    name: recognizeOnceAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts intent recognition, and stops after the first utterance is
      recognized. The task returns the recognition text and intent as result.

      Note: RecognizeOnceAsync() returns when the first utterance has been
      recognized, so it is suitable only for single shot recognition like
      command or query. For long-running recognition, use
      StartContinuousRecognitionAsync() instead.
    syntax:
      content: >-
        function recognizeOnceAsync(cb?: (e: IntentRecognitionResult) => void,
        err?: (e: string) => void)
      parameters:
        - id: cb
          type:
            - '(e: IntentRecognitionResult) => void'
          description: >-
            Callback that received the recognition has finished with an
            IntentRecognitionResult.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            Callback invoked in case of an error.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.IntentRecognizer.recognizing
    name: recognizing
    fullName: recognizing
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The event recognizing signals that an intermediate recognition result is
      received.
    syntax:
      content: >-
        public recognizing: (sender: IntentRecognizer, event:
        IntentRecognitionEventArgs) => void
      return:
        type:
          - >-
            (sender: IntentRecognizer, event: IntentRecognitionEventArgs) =>
            void
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IntentRecognizer.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the spoken language of recognition.
    syntax:
      content: 'public speechRecognitionLanguage: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IntentRecognizer.startContinuousRecognitionAsync
    name: startContinuousRecognitionAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts speech recognition, until stopContinuousRecognitionAsync() is
      called.

      User must subscribe to events to receive recognition results.
    syntax:
      content: >-
        function startContinuousRecognitionAsync(cb?: () => void, err?: (e:
        string) => void)
      parameters:
        - id: cb
          type:
            - () => void
          description: Callback invoked once the recognition has started.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            Callback invoked in case of an error.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IntentRecognizer.startKeywordRecognitionAsync
    name: startKeywordRecognitionAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Starts speech recognition with keyword spotting, until
      stopKeywordRecognitionAsync() is called.

      User must subscribe to events to receive recognition results.

      Note: Key word spotting functionality is only available on the Speech
      Devices SDK. This functionality is currently not included in the SDK
      itself.
    syntax:
      content: >-
        function startKeywordRecognitionAsync(model: KeywordRecognitionModel,
        cb?: () => void, err?: (e: string) => void)
      parameters:
        - id: model
          type:
            - microsoft-cognitiveservices-speech-sdk.KeywordRecognitionModel
          description: >-
            The keyword recognition model that specifies the keyword to be
            recognized.
        - id: cb
          type:
            - () => void
          description: Callback invoked once the recognition has started.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            Callback invoked in case of an error.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IntentRecognizer.stopContinuousRecognitionAsync
    name: stopContinuousRecognitionAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops continuous intent recognition.
    syntax:
      content: >-
        function stopContinuousRecognitionAsync(cb?: () => void, err?: (e:
        string) => void)
      parameters:
        - id: cb
          type:
            - () => void
          description: Callback invoked once the recognition has stopped.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            Callback invoked in case of an error.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
  - uid: >-
      microsoft-cognitiveservices-speech-sdk.IntentRecognizer.stopKeywordRecognitionAsync
    name: stopKeywordRecognitionAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Stops continuous speech recognition.

      Note: Key word spotting functionality is only available on the Speech
      Devices SDK. This functionality is currently not included in the SDK
      itself.
    syntax:
      content: >-
        function stopKeywordRecognitionAsync(cb?: () => void, err?: (e: string)
        => void)
      parameters:
        - id: cb
          type:
            - () => void
          description: Callback invoked once the recognition has stopped.
          optional: true
        - id: err
          type:
            - '(e: string) => void'
          description: |
            Callback invoked in case of an error.
          optional: true
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.Recognizer
    name: Recognizer
    spec.typeScript:
      - name: Recognizer
        fullName: Recognizer
        uid: microsoft-cognitiveservices-speech-sdk.Recognizer
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    name: SpeechConfig
    spec.typeScript:
      - name: SpeechConfig
        fullName: SpeechConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
  - uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
    name: AudioConfig
    spec.typeScript:
      - name: AudioConfig
        fullName: AudioConfig
        uid: microsoft-cognitiveservices-speech-sdk.AudioConfig
  - uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
    name: PropertyCollection
    spec.typeScript:
      - name: PropertyCollection
        fullName: PropertyCollection
        uid: microsoft-cognitiveservices-speech-sdk.PropertyCollection
  - uid: microsoft-cognitiveservices-speech-sdk.LanguageUnderstandingModel
    name: LanguageUnderstandingModel
    spec.typeScript:
      - name: LanguageUnderstandingModel
        fullName: LanguageUnderstandingModel
        uid: microsoft-cognitiveservices-speech-sdk.LanguageUnderstandingModel
  - uid: microsoft-cognitiveservices-speech-sdk.KeywordRecognitionModel
    name: KeywordRecognitionModel
    spec.typeScript:
      - name: KeywordRecognitionModel
        fullName: KeywordRecognitionModel
        uid: microsoft-cognitiveservices-speech-sdk.KeywordRecognitionModel
