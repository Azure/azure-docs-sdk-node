### YamlMime:UniversalReference
items:
  - uid: msal.Storage
    name: Storage
    fullName: Storage
    children:
      - msal.Storage.clear
      - msal.Storage.clearCookie
      - msal.Storage.getAllAccessTokens
      - msal.Storage.getItem
      - msal.Storage.getItemCookie
      - msal.Storage.removeAcquireTokenEntries
      - msal.Storage.removeItem
      - msal.Storage.resetCacheItems
      - msal.Storage.setExpirationCookie
      - msal.Storage.setItem
      - msal.Storage.setItemCookie
      - msal.Storage.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    package: msal
  - uid: msal.Storage.clear
    name: clear()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function clear()
      parameters: []
    package: msal
  - uid: msal.Storage.clearCookie
    name: clearCookie()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function clearCookie()
      parameters: []
    package: msal
  - uid: msal.Storage.getAllAccessTokens
    name: 'getAllAccessTokens(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllAccessTokens(clientId: string, userIdentifier: string)'
      parameters:
        - id: clientId
          type:
            - string
          description: ''
        - id: userIdentifier
          type:
            - string
          description: ''
      return:
        type:
          - Array<msal.AccessTokenCacheItem>
    package: msal
  - uid: msal.Storage.getItem
    name: 'getItem(string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getItem(key: string, enableCookieStorage?: boolean)'
      parameters:
        - id: key
          type:
            - string
          description: ''
        - id: enableCookieStorage
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - string
    package: msal
  - uid: msal.Storage.getItemCookie
    name: getItemCookie(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getItemCookie(cName: string)'
      parameters:
        - id: cName
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: msal
  - uid: msal.Storage.removeAcquireTokenEntries
    name: 'removeAcquireTokenEntries(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeAcquireTokenEntries(authorityKey: string,
        acquireTokenUserKey: string)
      parameters:
        - id: authorityKey
          type:
            - string
          description: ''
        - id: acquireTokenUserKey
          type:
            - string
          description: ''
    package: msal
  - uid: msal.Storage.removeItem
    name: removeItem(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeItem(key: string)'
      parameters:
        - id: key
          type:
            - string
          description: ''
    package: msal
  - uid: msal.Storage.resetCacheItems
    name: resetCacheItems()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resetCacheItems()
      parameters: []
    package: msal
  - uid: msal.Storage.setExpirationCookie
    name: setExpirationCookie(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setExpirationCookie(cookieLife: number)'
      parameters:
        - id: cookieLife
          type:
            - number
          description: ''
      return:
        type:
          - string
    package: msal
  - uid: msal.Storage.setItem
    name: 'setItem(string, string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setItem(key: string, value: string, enableCookieStorage?:
        boolean)
      parameters:
        - id: key
          type:
            - string
          description: ''
        - id: value
          type:
            - string
          description: ''
        - id: enableCookieStorage
          type:
            - boolean
          description: ''
          optional: true
    package: msal
  - uid: msal.Storage.setItemCookie
    name: 'setItemCookie(string, string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setItemCookie(cName: string, cValue: string, expires?: number)'
      parameters:
        - id: cName
          type:
            - string
          description: ''
        - id: cValue
          type:
            - string
          description: ''
        - id: expires
          type:
            - number
          description: ''
          optional: true
    package: msal
  - uid: msal.Storage.constructor
    name: Storage(string)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Storage(cacheLocation: string)'
      parameters:
        - id: cacheLocation
          type:
            - string
          description: ''
    package: msal
references:
  - uid: Array<msal.AccessTokenCacheItem>
    name: AccessTokenCacheItem>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: AccessTokenCacheItem
        fullName: AccessTokenCacheItem
        uid: msal.AccessTokenCacheItem
      - name: '>'
        fullName: '>'
