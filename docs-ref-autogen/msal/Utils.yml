### YamlMime:UniversalReference
items:
  - uid: msal.Utils
    name: Utils
    fullName: Utils
    children:
      - msal.Utils.base64DecodeStringUrlSafe
      - msal.Utils.base64EncodeStringUrlSafe
      - msal.Utils.CanonicalizeUri
      - msal.Utils.compareObjects
      - msal.Utils.containsScope
      - msal.Utils.convertToLowerCase
      - msal.Utils.createNewGuid
      - msal.Utils.decimalToHex
      - msal.Utils.decode
      - msal.Utils.decodeJwt
      - msal.Utils.deserialize
      - msal.Utils.encode
      - msal.Utils.endsWith
      - msal.Utils.expiresIn
      - msal.Utils.extractIdToken
      - msal.Utils.getLibraryVersion
      - msal.Utils.GetUrlComponents
      - msal.Utils.isEmpty
      - msal.Utils.isIntersectingScopes
      - msal.Utils.now
      - msal.Utils.removeElement
      - msal.Utils.replaceFirstPath
      - msal.Utils.utf8Encode
    langs:
      - typeScript
    type: class
    summary: ''
    package: msal
  - uid: msal.Utils.base64DecodeStringUrlSafe
    name: base64DecodeStringUrlSafe(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function base64DecodeStringUrlSafe(base64IdToken: string)'
      parameters:
        - id: base64IdToken
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: msal
  - uid: msal.Utils.base64EncodeStringUrlSafe
    name: base64EncodeStringUrlSafe(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function base64EncodeStringUrlSafe(input: string)'
      parameters:
        - id: input
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: msal
  - uid: msal.Utils.CanonicalizeUri
    name: CanonicalizeUri(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function CanonicalizeUri(url: string)'
      parameters:
        - id: url
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: msal
  - uid: msal.Utils.compareObjects
    name: 'compareObjects(User, User)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function compareObjects(u1: User, u2: User)'
      parameters:
        - id: u1
          type:
            - msal.User
          description: ''
        - id: u2
          type:
            - msal.User
          description: ''
      return:
        type:
          - boolean
    package: msal
  - uid: msal.Utils.containsScope
    name: 'containsScope(Array<string>, Array<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function containsScope(cachedScopes: Array<string>, scopes:
        Array<string>)
      parameters:
        - id: cachedScopes
          type:
            - Array<string>
          description: ''
        - id: scopes
          type:
            - Array<string>
          description: ''
      return:
        type:
          - boolean
    package: msal
  - uid: msal.Utils.convertToLowerCase
    name: convertToLowerCase(Array<string>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function convertToLowerCase(scopes: Array<string>)'
      parameters:
        - id: scopes
          type:
            - Array<string>
          description: ''
      return:
        type:
          - Array<string>
    package: msal
  - uid: msal.Utils.createNewGuid
    name: createNewGuid()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function createNewGuid()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.Utils.decimalToHex
    name: decimalToHex(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function decimalToHex(num: number)'
      parameters:
        - id: num
          type:
            - number
          description: ''
      return:
        type:
          - string
    package: msal
  - uid: msal.Utils.decode
    name: decode(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function decode(base64IdToken: string)'
      parameters:
        - id: base64IdToken
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: msal
  - uid: msal.Utils.decodeJwt
    name: decodeJwt(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function decodeJwt(jwtToken: string)'
      parameters:
        - id: jwtToken
          type:
            - string
          description: ''
      return:
        type:
          - any
    package: msal
  - uid: msal.Utils.deserialize
    name: deserialize(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function deserialize(query: string)'
      parameters:
        - id: query
          type:
            - string
          description: ''
      return:
        type:
          - any
    package: msal
  - uid: msal.Utils.encode
    name: encode(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function encode(input: string)'
      parameters:
        - id: input
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: msal
  - uid: msal.Utils.endsWith
    name: 'endsWith(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function endsWith(url: string, suffix: string)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: suffix
          type:
            - string
          description: ''
      return:
        type:
          - boolean
    package: msal
  - uid: msal.Utils.expiresIn
    name: expiresIn(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function expiresIn(expires: string)'
      parameters:
        - id: expires
          type:
            - string
          description: ''
      return:
        type:
          - number
    package: msal
  - uid: msal.Utils.extractIdToken
    name: extractIdToken(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function extractIdToken(encodedIdToken: string)'
      parameters:
        - id: encodedIdToken
          type:
            - string
          description: ''
      return:
        type:
          - any
    package: msal
  - uid: msal.Utils.getLibraryVersion
    name: getLibraryVersion()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function getLibraryVersion()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.Utils.GetUrlComponents
    name: GetUrlComponents(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function GetUrlComponents(url: string)'
      parameters:
        - id: url
          type:
            - string
          description: ''
      return:
        type:
          - msal.IUri
    package: msal
  - uid: msal.Utils.isEmpty
    name: isEmpty(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isEmpty(str: string)'
      parameters:
        - id: str
          type:
            - string
          description: ''
      return:
        type:
          - boolean
    package: msal
  - uid: msal.Utils.isIntersectingScopes
    name: 'isIntersectingScopes(Array<string>, Array<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function isIntersectingScopes(cachedScopes: Array<string>,
        scopes: Array<string>)
      parameters:
        - id: cachedScopes
          type:
            - Array<string>
          description: ''
        - id: scopes
          type:
            - Array<string>
          description: ''
      return:
        type:
          - boolean
    package: msal
  - uid: msal.Utils.now
    name: now()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function now()
      parameters: []
      return:
        type:
          - number
    package: msal
  - uid: msal.Utils.removeElement
    name: 'removeElement(Array<string>, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function removeElement(scopes: Array<string>, scope: string)'
      parameters:
        - id: scopes
          type:
            - Array<string>
          description: ''
        - id: scope
          type:
            - string
          description: ''
      return:
        type:
          - Array<string>
    package: msal
  - uid: msal.Utils.replaceFirstPath
    name: 'replaceFirstPath(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function replaceFirstPath(href: string, tenantId: string)'
      parameters:
        - id: href
          type:
            - string
          description: ''
        - id: tenantId
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: msal
  - uid: msal.Utils.utf8Encode
    name: utf8Encode(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function utf8Encode(input: string)'
      parameters:
        - id: input
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: msal
references:
  - uid: msal.IUri
    name: IUri
    spec.typeScript:
      - name: IUri
        fullName: IUri
        uid: msal.IUri
  - uid: msal.User
    name: User
    spec.typeScript:
      - name: User
        fullName: User
        uid: msal.User
