### YamlMime:UniversalReference
items:
  - uid: msal.User
    name: User
    fullName: User
    children:
      - msal.User.createUser
      - msal.User.displayableId
      - msal.User.identityProvider
      - msal.User.idToken
      - msal.User.name
      - msal.User.sid
      - msal.User.constructor
      - msal.User.userIdentifier
    langs:
      - typeScript
    type: class
    summary: ''
    package: msal
  - uid: msal.User.createUser
    name: 'createUser(IdToken, ClientInfo, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function createUser(idToken: IdToken, clientInfo: ClientInfo,
        authority: string)
      parameters:
        - id: idToken
          type:
            - msal.IdToken
          description: ''
        - id: clientInfo
          type:
            - msal.ClientInfo
          description: ''
        - id: authority
          type:
            - string
          description: ''
      return:
        type:
          - msal.User
    package: msal
  - uid: msal.User.displayableId
    name: displayableId
    fullName: displayableId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'displayableId: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.User.identityProvider
    name: identityProvider
    fullName: identityProvider
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'identityProvider: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.User.idToken
    name: idToken
    fullName: idToken
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'idToken: Object'
      return:
        type:
          - Object
    package: msal
  - uid: msal.User.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'name: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.User.sid
    name: sid
    fullName: sid
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'sid: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.User.constructor
    name: 'User(string, string, string, string, Object, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new User(displayableId: string, name: string, identityProvider: string,
        userIdentifier: string, idToken: Object, sid: string)
      parameters:
        - id: displayableId
          type:
            - string
          description: ''
        - id: name
          type:
            - string
          description: ''
        - id: identityProvider
          type:
            - string
          description: ''
        - id: userIdentifier
          type:
            - string
          description: ''
        - id: idToken
          type:
            - Object
          description: ''
        - id: sid
          type:
            - string
          description: ''
    package: msal
  - uid: msal.User.userIdentifier
    name: userIdentifier
    fullName: userIdentifier
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'userIdentifier: string'
      return:
        type:
          - string
    package: msal
references:
  - uid: msal.IdToken
    name: IdToken
    spec.typeScript:
      - name: IdToken
        fullName: IdToken
        uid: msal.IdToken
  - uid: msal.ClientInfo
    name: ClientInfo
    spec.typeScript:
      - name: ClientInfo
        fullName: ClientInfo
        uid: msal.ClientInfo
  - uid: msal.User
    name: User
    spec.typeScript:
      - name: User
        fullName: User
        uid: msal.User
