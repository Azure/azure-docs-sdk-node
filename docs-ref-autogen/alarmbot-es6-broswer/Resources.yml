### YamlMime:UniversalReference
items:
  - uid: botbuilder-packages.Resources
    id: botbuilder-packages.Resources
    name: Resources
    summary: Class representing a Resources.
    fullName: botbuilder-packages.Resources
    source:
      id: botbuilder-packages.Resources
      path: tools\resourceManagement\lib\resource\operations\resources.js
      startLine: 2852
      remote:
        branch: master
        path: tools\resourceManagement\lib\resource\operations\resources.js
        repo: 'https://github.com/Microsoft/botbuilder-js.git'
    type: Class
    children:
      - 'botbuilder-packages.Resources.#ctor'
      - >-
        botbuilder-packages.Resources#listByResourceGroupWithHttpOperationResponse
      - 'botbuilder-packages.Resources#listByResourceGroup'
      - 'botbuilder-packages.Resources#moveResourcesWithHttpOperationResponse'
      - 'botbuilder-packages.Resources#moveResources'
      - >-
        botbuilder-packages.Resources#validateMoveResourcesWithHttpOperationResponse
      - 'botbuilder-packages.Resources#validateMoveResources'
      - 'botbuilder-packages.Resources#listWithHttpOperationResponse'
      - 'botbuilder-packages.Resources#list'
      - 'botbuilder-packages.Resources#checkExistenceWithHttpOperationResponse'
      - 'botbuilder-packages.Resources#checkExistence'
      - 'botbuilder-packages.Resources#deleteMethodWithHttpOperationResponse'
      - 'botbuilder-packages.Resources#deleteMethod'
      - 'botbuilder-packages.Resources#createOrUpdateWithHttpOperationResponse'
      - 'botbuilder-packages.Resources#createOrUpdate'
      - 'botbuilder-packages.Resources#getWithHttpOperationResponse'
      - 'botbuilder-packages.Resources#get'
      - >-
        botbuilder-packages.Resources#checkExistenceByIdWithHttpOperationResponse
      - 'botbuilder-packages.Resources#checkExistenceById'
      - 'botbuilder-packages.Resources#deleteByIdWithHttpOperationResponse'
      - 'botbuilder-packages.Resources#deleteById'
      - >-
        botbuilder-packages.Resources#createOrUpdateByIdWithHttpOperationResponse
      - 'botbuilder-packages.Resources#createOrUpdateById'
      - 'botbuilder-packages.Resources#getByIdWithHttpOperationResponse'
      - 'botbuilder-packages.Resources#getById'
      - >-
        botbuilder-packages.Resources#beginMoveResourcesWithHttpOperationResponse
      - 'botbuilder-packages.Resources#beginMoveResources'
      - >-
        botbuilder-packages.Resources#beginValidateMoveResourcesWithHttpOperationResponse
      - 'botbuilder-packages.Resources#beginValidateMoveResources'
      - 'botbuilder-packages.Resources#beginDeleteMethodWithHttpOperationResponse'
      - 'botbuilder-packages.Resources#beginDeleteMethod'
      - >-
        botbuilder-packages.Resources#beginCreateOrUpdateWithHttpOperationResponse
      - 'botbuilder-packages.Resources#beginCreateOrUpdate'
      - 'botbuilder-packages.Resources#beginDeleteByIdWithHttpOperationResponse'
      - 'botbuilder-packages.Resources#beginDeleteById'
      - >-
        botbuilder-packages.Resources#beginCreateOrUpdateByIdWithHttpOperationResponse
      - 'botbuilder-packages.Resources#beginCreateOrUpdateById'
      - >-
        botbuilder-packages.Resources#listByResourceGroupNextWithHttpOperationResponse
      - 'botbuilder-packages.Resources#listByResourceGroupNext'
      - 'botbuilder-packages.Resources#listNextWithHttpOperationResponse'
      - 'botbuilder-packages.Resources#listNext'
    langs:
      - js
  - id: 'botbuilder-packages.Resources.#ctor'
    uid: 'botbuilder-packages.Resources.#ctor'
    parent: botbuilder-packages.Resources
    name: Resources(client)
    fullName: botbuilder-packages.Resources.Resources(client)
    summary: Create a Resources.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedResourceManagementClient
          description: Reference to the service client.
      content: new Resources(client)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#listByResourceGroupWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#listByResourceGroupWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: Get all the resources for a resource group.
    fullName: >-
      botbuilder-packages.Resources.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The resource group with the resources to\rget."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.expand
          type:
            - string
          description: The $expand query parameter
          optional: true
        - id: options.top
          type:
            - number
          description: "The number of results to return. If null is\rpassed, returns all resources."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#listByResourceGroup'
    id: 'botbuilder-packages.Resources#listByResourceGroup'
    parent: botbuilder-packages.Resources
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: Get all the resources for a resource group.
    fullName: >-
      botbuilder-packages.Resources.listByResourceGroup(resourceGroupName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceListResult} - The deserialized result object.'
        value: '{ResourceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The resource group with the resources to\rget."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.expand
          type:
            - string
          description: The $expand query parameter
          optional: true
        - id: options.top
          type:
            - number
          description: "The number of results to return. If null is\rpassed, returns all resources."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#moveResourcesWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#moveResourcesWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: >-
      moveResourcesWithHttpOperationResponse(sourceResourceGroupName,
      parameters, options)
    summary: "Moves resources from one resource group to another resource group.\r\rThe resources to move must be in the same source resource group. The target\rresource group may be in a different subscription. When moving resources,\rboth the source group and the target group are locked for the duration of\rthe operation. Write and delete operations are blocked on the groups until\rthe move completes."
    fullName: >-
      botbuilder-packages.Resources.moveResourcesWithHttpOperationResponse(sourceResourceGroupName,
      parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: "The name of the resource group\rcontaining the resources to move."
        - id: parameters
          type:
            - object
          description: Parameters for moving resources.
        - id: parameters.resources
          type:
            - array
          description: The IDs of the resources.
          optional: true
        - id: parameters.targetResourceGroup
          type:
            - string
          description: The target resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function moveResourcesWithHttpOperationResponse(sourceResourceGroupName,
        parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#moveResources'
    id: 'botbuilder-packages.Resources#moveResources'
    parent: botbuilder-packages.Resources
    name: >-
      moveResources(sourceResourceGroupName, parameters, options,
      optionalCallback)
    summary: "Moves resources from one resource group to another resource group.\r\rThe resources to move must be in the same source resource group. The target\rresource group may be in a different subscription. When moving resources,\rboth the source group and the target group are locked for the duration of\rthe operation. Write and delete operations are blocked on the groups until\rthe move completes."
    fullName: >-
      botbuilder-packages.Resources.moveResources(sourceResourceGroupName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: "The name of the resource group\rcontaining the resources to move."
        - id: parameters
          type:
            - object
          description: Parameters for moving resources.
        - id: parameters.resources
          type:
            - array
          description: The IDs of the resources.
          optional: true
        - id: parameters.targetResourceGroup
          type:
            - string
          description: The target resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function moveResources(sourceResourceGroupName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      botbuilder-packages.Resources#validateMoveResourcesWithHttpOperationResponse
    id: >-
      botbuilder-packages.Resources#validateMoveResourcesWithHttpOperationResponse
    parent: botbuilder-packages.Resources
    name: >-
      validateMoveResourcesWithHttpOperationResponse(sourceResourceGroupName,
      parameters, options)
    summary: "Validates whether resources can be moved from one resource group to\ranother resource group.\r\rThis operation checks whether the specified resources can be moved to the\rtarget. The resources to move must be in the same source resource group. The\rtarget resource group may be in a different subscription. If validation\rsucceeds, it returns HTTP response code 204 (no content). If validation\rfails, it returns HTTP response code 409 (Conflict) with an error message.\rRetrieve the URL in the Location header value to check the result of the\rlong-running operation."
    fullName: >-
      botbuilder-packages.Resources.validateMoveResourcesWithHttpOperationResponse(sourceResourceGroupName,
      parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: "The name of the resource group\rcontaining the resources to validate for move."
        - id: parameters
          type:
            - object
          description: Parameters for moving resources.
        - id: parameters.resources
          type:
            - array
          description: The IDs of the resources.
          optional: true
        - id: parameters.targetResourceGroup
          type:
            - string
          description: The target resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        validateMoveResourcesWithHttpOperationResponse(sourceResourceGroupName,
        parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#validateMoveResources'
    id: 'botbuilder-packages.Resources#validateMoveResources'
    parent: botbuilder-packages.Resources
    name: >-
      validateMoveResources(sourceResourceGroupName, parameters, options,
      optionalCallback)
    summary: "Validates whether resources can be moved from one resource group to\ranother resource group.\r\rThis operation checks whether the specified resources can be moved to the\rtarget. The resources to move must be in the same source resource group. The\rtarget resource group may be in a different subscription. If validation\rsucceeds, it returns HTTP response code 204 (no content). If validation\rfails, it returns HTTP response code 409 (Conflict) with an error message.\rRetrieve the URL in the Location header value to check the result of the\rlong-running operation."
    fullName: >-
      botbuilder-packages.Resources.validateMoveResources(sourceResourceGroupName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: "The name of the resource group\rcontaining the resources to validate for move."
        - id: parameters
          type:
            - object
          description: Parameters for moving resources.
        - id: parameters.resources
          type:
            - array
          description: The IDs of the resources.
          optional: true
        - id: parameters.targetResourceGroup
          type:
            - string
          description: The target resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function validateMoveResources(sourceResourceGroupName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#listWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#listWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: listWithHttpOperationResponse(options)
    summary: Get all the resources in a subscription.
    fullName: botbuilder-packages.Resources.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.expand
          type:
            - string
          description: The $expand query parameter.
          optional: true
        - id: options.top
          type:
            - number
          description: "The number of results to return. If null is\rpassed, returns all resource groups."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#list'
    id: 'botbuilder-packages.Resources#list'
    parent: botbuilder-packages.Resources
    name: 'list(options, optionalCallback)'
    summary: Get all the resources in a subscription.
    fullName: 'botbuilder-packages.Resources.list(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceListResult} - The deserialized result object.'
        value: '{ResourceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.expand
          type:
            - string
          description: The $expand query parameter.
          optional: true
        - id: options.top
          type:
            - number
          description: "The number of results to return. If null is\rpassed, returns all resource groups."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#checkExistenceWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#checkExistenceWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: >-
      checkExistenceWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, options)
    summary: Checks whether a resource exists.
    fullName: >-
      botbuilder-packages.Resources.checkExistenceWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
        value: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group containing\rthe resource to check. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The resource provider of the\rresource to check."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type.
        - id: resourceName
          type:
            - string
          description: "The name of the resource to check whether it\rexists."
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function checkExistenceWithHttpOperationResponse(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, apiVersion, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#checkExistence'
    id: 'botbuilder-packages.Resources#checkExistence'
    parent: botbuilder-packages.Resources
    name: >-
      checkExistence(resourceGroupName, resourceProviderNamespace,
      parentResourcePath, resourceType, resourceName, apiVersion, options,
      optionalCallback)
    summary: Checks whether a resource exists.
    fullName: >-
      botbuilder-packages.Resources.checkExistence(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Boolean} - The deserialized result object.'
        value: '{Boolean} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group containing\rthe resource to check. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The resource provider of the\rresource to check."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type.
        - id: resourceName
          type:
            - string
          description: "The name of the resource to check whether it\rexists."
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function checkExistence(resourceGroupName, resourceProviderNamespace,
        parentResourcePath, resourceType, resourceName, apiVersion, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#deleteMethodWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#deleteMethodWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, options)
    summary: Deletes a resource.
    fullName: >-
      botbuilder-packages.Resources.deleteMethodWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource to delete. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The namespace of the resource\rprovider."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type.
        - id: resourceName
          type:
            - string
          description: The name of the resource to delete.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, apiVersion, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#deleteMethod'
    id: 'botbuilder-packages.Resources#deleteMethod'
    parent: botbuilder-packages.Resources
    name: >-
      deleteMethod(resourceGroupName, resourceProviderNamespace,
      parentResourcePath, resourceType, resourceName, apiVersion, options,
      optionalCallback)
    summary: Deletes a resource.
    fullName: >-
      botbuilder-packages.Resources.deleteMethod(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource to delete. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The namespace of the resource\rprovider."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type.
        - id: resourceName
          type:
            - string
          description: The name of the resource to delete.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteMethod(resourceGroupName, resourceProviderNamespace,
        parentResourcePath, resourceType, resourceName, apiVersion, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#createOrUpdateWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#createOrUpdateWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, parameters, options)
    summary: Creates a resource.
    fullName: >-
      botbuilder-packages.Resources.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group for the\rresource. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The namespace of the resource\rprovider."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource to create.
        - id: resourceName
          type:
            - string
          description: The name of the resource to create.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - object
          description: Parameters for creating or updating the resource.
        - id: parameters.plan
          type:
            - object
          description: The plan of the resource.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: The offer ID.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: The resource properties.
          optional: true
        - id: parameters.kind
          type:
            - string
          description: The kind of the resource.
          optional: true
        - id: parameters.managedBy
          type:
            - string
          description: "ID of the resource that manages this\rresource."
          optional: true
        - id: parameters.sku
          type:
            - object
          description: The SKU of the resource.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The SKU name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: The SKU tier.
          optional: true
        - id: parameters.sku.size
          type:
            - string
          description: The SKU size.
          optional: true
        - id: parameters.sku.family
          type:
            - string
          description: The SKU family.
          optional: true
        - id: parameters.sku.model
          type:
            - string
          description: The SKU model.
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: The SKU capacity.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: The identity of the resource.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: "The identity type. Possible\rvalues include: 'SystemAssigned'"
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, apiVersion, parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#createOrUpdate'
    id: 'botbuilder-packages.Resources#createOrUpdate'
    parent: botbuilder-packages.Resources
    name: >-
      createOrUpdate(resourceGroupName, resourceProviderNamespace,
      parentResourcePath, resourceType, resourceName, apiVersion, parameters,
      options, optionalCallback)
    summary: Creates a resource.
    fullName: >-
      botbuilder-packages.Resources.createOrUpdate(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{GenericResource} - The deserialized result object.'
        value: '{GenericResource} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group for the\rresource. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The namespace of the resource\rprovider."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource to create.
        - id: resourceName
          type:
            - string
          description: The name of the resource to create.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - object
          description: Parameters for creating or updating the resource.
        - id: parameters.plan
          type:
            - object
          description: The plan of the resource.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: The offer ID.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: The resource properties.
          optional: true
        - id: parameters.kind
          type:
            - string
          description: The kind of the resource.
          optional: true
        - id: parameters.managedBy
          type:
            - string
          description: "ID of the resource that manages this\rresource."
          optional: true
        - id: parameters.sku
          type:
            - object
          description: The SKU of the resource.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The SKU name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: The SKU tier.
          optional: true
        - id: parameters.sku.size
          type:
            - string
          description: The SKU size.
          optional: true
        - id: parameters.sku.family
          type:
            - string
          description: The SKU family.
          optional: true
        - id: parameters.sku.model
          type:
            - string
          description: The SKU model.
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: The SKU capacity.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: The identity of the resource.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: "The identity type. Possible\rvalues include: 'SystemAssigned'"
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createOrUpdate(resourceGroupName, resourceProviderNamespace,
        parentResourcePath, resourceType, resourceName, apiVersion, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#getWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#getWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: >-
      getWithHttpOperationResponse(resourceGroupName, resourceProviderNamespace,
      parentResourcePath, resourceType, resourceName, apiVersion, options)
    summary: Gets a resource.
    fullName: >-
      botbuilder-packages.Resources.getWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group containing\rthe resource to get. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The namespace of the resource\rprovider."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource.
        - id: resourceName
          type:
            - string
          description: The name of the resource to get.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, apiVersion, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#get'
    id: 'botbuilder-packages.Resources#get'
    parent: botbuilder-packages.Resources
    name: >-
      get(resourceGroupName, resourceProviderNamespace, parentResourcePath,
      resourceType, resourceName, apiVersion, options, optionalCallback)
    summary: Gets a resource.
    fullName: >-
      botbuilder-packages.Resources.get(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{GenericResource} - The deserialized result object.'
        value: '{GenericResource} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group containing\rthe resource to get. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The namespace of the resource\rprovider."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource.
        - id: resourceName
          type:
            - string
          description: The name of the resource to get.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function get(resourceGroupName, resourceProviderNamespace,
        parentResourcePath, resourceType, resourceName, apiVersion, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#checkExistenceByIdWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#checkExistenceByIdWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: >-
      checkExistenceByIdWithHttpOperationResponse(resourceId, apiVersion,
      options)
    summary: Checks by ID whether a resource exists.
    fullName: >-
      botbuilder-packages.Resources.checkExistenceByIdWithHttpOperationResponse(resourceId,
      apiVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
        value: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function checkExistenceByIdWithHttpOperationResponse(resourceId,
        apiVersion, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#checkExistenceById'
    id: 'botbuilder-packages.Resources#checkExistenceById'
    parent: botbuilder-packages.Resources
    name: 'checkExistenceById(resourceId, apiVersion, options, optionalCallback)'
    summary: Checks by ID whether a resource exists.
    fullName: >-
      botbuilder-packages.Resources.checkExistenceById(resourceId, apiVersion,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Boolean} - The deserialized result object.'
        value: '{Boolean} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function checkExistenceById(resourceId, apiVersion, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#deleteByIdWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#deleteByIdWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: 'deleteByIdWithHttpOperationResponse(resourceId, apiVersion, options)'
    summary: Deletes a resource by ID.
    fullName: >-
      botbuilder-packages.Resources.deleteByIdWithHttpOperationResponse(resourceId,
      apiVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteByIdWithHttpOperationResponse(resourceId, apiVersion,
        options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#deleteById'
    id: 'botbuilder-packages.Resources#deleteById'
    parent: botbuilder-packages.Resources
    name: 'deleteById(resourceId, apiVersion, options, optionalCallback)'
    summary: Deletes a resource by ID.
    fullName: >-
      botbuilder-packages.Resources.deleteById(resourceId, apiVersion, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function deleteById(resourceId, apiVersion, options, optionalCallback)'
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#createOrUpdateByIdWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#createOrUpdateByIdWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: >-
      createOrUpdateByIdWithHttpOperationResponse(resourceId, apiVersion,
      parameters, options)
    summary: Create a resource by ID.
    fullName: >-
      botbuilder-packages.Resources.createOrUpdateByIdWithHttpOperationResponse(resourceId,
      apiVersion, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - object
          description: Create or update resource parameters.
        - id: parameters.plan
          type:
            - object
          description: The plan of the resource.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: The offer ID.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: The resource properties.
          optional: true
        - id: parameters.kind
          type:
            - string
          description: The kind of the resource.
          optional: true
        - id: parameters.managedBy
          type:
            - string
          description: "ID of the resource that manages this\rresource."
          optional: true
        - id: parameters.sku
          type:
            - object
          description: The SKU of the resource.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The SKU name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: The SKU tier.
          optional: true
        - id: parameters.sku.size
          type:
            - string
          description: The SKU size.
          optional: true
        - id: parameters.sku.family
          type:
            - string
          description: The SKU family.
          optional: true
        - id: parameters.sku.model
          type:
            - string
          description: The SKU model.
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: The SKU capacity.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: The identity of the resource.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: "The identity type. Possible\rvalues include: 'SystemAssigned'"
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateByIdWithHttpOperationResponse(resourceId,
        apiVersion, parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#createOrUpdateById'
    id: 'botbuilder-packages.Resources#createOrUpdateById'
    parent: botbuilder-packages.Resources
    name: >-
      createOrUpdateById(resourceId, apiVersion, parameters, options,
      optionalCallback)
    summary: Create a resource by ID.
    fullName: >-
      botbuilder-packages.Resources.createOrUpdateById(resourceId, apiVersion,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{GenericResource} - The deserialized result object.'
        value: '{GenericResource} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - object
          description: Create or update resource parameters.
        - id: parameters.plan
          type:
            - object
          description: The plan of the resource.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: The offer ID.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: The resource properties.
          optional: true
        - id: parameters.kind
          type:
            - string
          description: The kind of the resource.
          optional: true
        - id: parameters.managedBy
          type:
            - string
          description: "ID of the resource that manages this\rresource."
          optional: true
        - id: parameters.sku
          type:
            - object
          description: The SKU of the resource.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The SKU name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: The SKU tier.
          optional: true
        - id: parameters.sku.size
          type:
            - string
          description: The SKU size.
          optional: true
        - id: parameters.sku.family
          type:
            - string
          description: The SKU family.
          optional: true
        - id: parameters.sku.model
          type:
            - string
          description: The SKU model.
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: The SKU capacity.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: The identity of the resource.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: "The identity type. Possible\rvalues include: 'SystemAssigned'"
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createOrUpdateById(resourceId, apiVersion, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#getByIdWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#getByIdWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: 'getByIdWithHttpOperationResponse(resourceId, apiVersion, options)'
    summary: Gets a resource by ID.
    fullName: >-
      botbuilder-packages.Resources.getByIdWithHttpOperationResponse(resourceId,
      apiVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getByIdWithHttpOperationResponse(resourceId, apiVersion,
        options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#getById'
    id: 'botbuilder-packages.Resources#getById'
    parent: botbuilder-packages.Resources
    name: 'getById(resourceId, apiVersion, options, optionalCallback)'
    summary: Gets a resource by ID.
    fullName: >-
      botbuilder-packages.Resources.getById(resourceId, apiVersion, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{GenericResource} - The deserialized result object.'
        value: '{GenericResource} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getById(resourceId, apiVersion, options, optionalCallback)'
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#beginMoveResourcesWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#beginMoveResourcesWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: >-
      beginMoveResourcesWithHttpOperationResponse(sourceResourceGroupName,
      parameters, options)
    summary: "Moves resources from one resource group to another resource group.\r\rThe resources to move must be in the same source resource group. The target\rresource group may be in a different subscription. When moving resources,\rboth the source group and the target group are locked for the duration of\rthe operation. Write and delete operations are blocked on the groups until\rthe move completes."
    fullName: >-
      botbuilder-packages.Resources.beginMoveResourcesWithHttpOperationResponse(sourceResourceGroupName,
      parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: "The name of the resource group\rcontaining the resources to move."
        - id: parameters
          type:
            - object
          description: Parameters for moving resources.
        - id: parameters.resources
          type:
            - array
          description: The IDs of the resources.
          optional: true
        - id: parameters.targetResourceGroup
          type:
            - string
          description: The target resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginMoveResourcesWithHttpOperationResponse(sourceResourceGroupName,
        parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#beginMoveResources'
    id: 'botbuilder-packages.Resources#beginMoveResources'
    parent: botbuilder-packages.Resources
    name: >-
      beginMoveResources(sourceResourceGroupName, parameters, options,
      optionalCallback)
    summary: "Moves resources from one resource group to another resource group.\r\rThe resources to move must be in the same source resource group. The target\rresource group may be in a different subscription. When moving resources,\rboth the source group and the target group are locked for the duration of\rthe operation. Write and delete operations are blocked on the groups until\rthe move completes."
    fullName: >-
      botbuilder-packages.Resources.beginMoveResources(sourceResourceGroupName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: "The name of the resource group\rcontaining the resources to move."
        - id: parameters
          type:
            - object
          description: Parameters for moving resources.
        - id: parameters.resources
          type:
            - array
          description: The IDs of the resources.
          optional: true
        - id: parameters.targetResourceGroup
          type:
            - string
          description: The target resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginMoveResources(sourceResourceGroupName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      botbuilder-packages.Resources#beginValidateMoveResourcesWithHttpOperationResponse
    id: >-
      botbuilder-packages.Resources#beginValidateMoveResourcesWithHttpOperationResponse
    parent: botbuilder-packages.Resources
    name: >-
      beginValidateMoveResourcesWithHttpOperationResponse(sourceResourceGroupName,
      parameters, options)
    summary: "Validates whether resources can be moved from one resource group to\ranother resource group.\r\rThis operation checks whether the specified resources can be moved to the\rtarget. The resources to move must be in the same source resource group. The\rtarget resource group may be in a different subscription. If validation\rsucceeds, it returns HTTP response code 204 (no content). If validation\rfails, it returns HTTP response code 409 (Conflict) with an error message.\rRetrieve the URL in the Location header value to check the result of the\rlong-running operation."
    fullName: >-
      botbuilder-packages.Resources.beginValidateMoveResourcesWithHttpOperationResponse(sourceResourceGroupName,
      parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: "The name of the resource group\rcontaining the resources to validate for move."
        - id: parameters
          type:
            - object
          description: Parameters for moving resources.
        - id: parameters.resources
          type:
            - array
          description: The IDs of the resources.
          optional: true
        - id: parameters.targetResourceGroup
          type:
            - string
          description: The target resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginValidateMoveResourcesWithHttpOperationResponse(sourceResourceGroupName,
        parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#beginValidateMoveResources'
    id: 'botbuilder-packages.Resources#beginValidateMoveResources'
    parent: botbuilder-packages.Resources
    name: >-
      beginValidateMoveResources(sourceResourceGroupName, parameters, options,
      optionalCallback)
    summary: "Validates whether resources can be moved from one resource group to\ranother resource group.\r\rThis operation checks whether the specified resources can be moved to the\rtarget. The resources to move must be in the same source resource group. The\rtarget resource group may be in a different subscription. If validation\rsucceeds, it returns HTTP response code 204 (no content). If validation\rfails, it returns HTTP response code 409 (Conflict) with an error message.\rRetrieve the URL in the Location header value to check the result of the\rlong-running operation."
    fullName: >-
      botbuilder-packages.Resources.beginValidateMoveResources(sourceResourceGroupName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: sourceResourceGroupName
          type:
            - string
          description: "The name of the resource group\rcontaining the resources to validate for move."
        - id: parameters
          type:
            - object
          description: Parameters for moving resources.
        - id: parameters.resources
          type:
            - array
          description: The IDs of the resources.
          optional: true
        - id: parameters.targetResourceGroup
          type:
            - string
          description: The target resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginValidateMoveResources(sourceResourceGroupName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#beginDeleteMethodWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#beginDeleteMethodWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, options)
    summary: Deletes a resource.
    fullName: >-
      botbuilder-packages.Resources.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource to delete. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The namespace of the resource\rprovider."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type.
        - id: resourceName
          type:
            - string
          description: The name of the resource to delete.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, apiVersion, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#beginDeleteMethod'
    id: 'botbuilder-packages.Resources#beginDeleteMethod'
    parent: botbuilder-packages.Resources
    name: >-
      beginDeleteMethod(resourceGroupName, resourceProviderNamespace,
      parentResourcePath, resourceType, resourceName, apiVersion, options,
      optionalCallback)
    summary: Deletes a resource.
    fullName: >-
      botbuilder-packages.Resources.beginDeleteMethod(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource to delete. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The namespace of the resource\rprovider."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type.
        - id: resourceName
          type:
            - string
          description: The name of the resource to delete.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginDeleteMethod(resourceGroupName, resourceProviderNamespace,
        parentResourcePath, resourceType, resourceName, apiVersion, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#beginCreateOrUpdateWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#beginCreateOrUpdateWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, parameters, options)
    summary: Creates a resource.
    fullName: >-
      botbuilder-packages.Resources.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group for the\rresource. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The namespace of the resource\rprovider."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource to create.
        - id: resourceName
          type:
            - string
          description: The name of the resource to create.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - object
          description: Parameters for creating or updating the resource.
        - id: parameters.plan
          type:
            - object
          description: The plan of the resource.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: The offer ID.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: The resource properties.
          optional: true
        - id: parameters.kind
          type:
            - string
          description: The kind of the resource.
          optional: true
        - id: parameters.managedBy
          type:
            - string
          description: "ID of the resource that manages this\rresource."
          optional: true
        - id: parameters.sku
          type:
            - object
          description: The SKU of the resource.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The SKU name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: The SKU tier.
          optional: true
        - id: parameters.sku.size
          type:
            - string
          description: The SKU size.
          optional: true
        - id: parameters.sku.family
          type:
            - string
          description: The SKU family.
          optional: true
        - id: parameters.sku.model
          type:
            - string
          description: The SKU model.
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: The SKU capacity.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: The identity of the resource.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: "The identity type. Possible\rvalues include: 'SystemAssigned'"
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, apiVersion, parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#beginCreateOrUpdate'
    id: 'botbuilder-packages.Resources#beginCreateOrUpdate'
    parent: botbuilder-packages.Resources
    name: >-
      beginCreateOrUpdate(resourceGroupName, resourceProviderNamespace,
      parentResourcePath, resourceType, resourceName, apiVersion, parameters,
      options, optionalCallback)
    summary: Creates a resource.
    fullName: >-
      botbuilder-packages.Resources.beginCreateOrUpdate(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      apiVersion, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{GenericResource} - The deserialized result object.'
        value: '{GenericResource} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group for the\rresource. The name is case insensitive."
        - id: resourceProviderNamespace
          type:
            - string
          description: "The namespace of the resource\rprovider."
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource to create.
        - id: resourceName
          type:
            - string
          description: The name of the resource to create.
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - object
          description: Parameters for creating or updating the resource.
        - id: parameters.plan
          type:
            - object
          description: The plan of the resource.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: The offer ID.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: The resource properties.
          optional: true
        - id: parameters.kind
          type:
            - string
          description: The kind of the resource.
          optional: true
        - id: parameters.managedBy
          type:
            - string
          description: "ID of the resource that manages this\rresource."
          optional: true
        - id: parameters.sku
          type:
            - object
          description: The SKU of the resource.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The SKU name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: The SKU tier.
          optional: true
        - id: parameters.sku.size
          type:
            - string
          description: The SKU size.
          optional: true
        - id: parameters.sku.family
          type:
            - string
          description: The SKU family.
          optional: true
        - id: parameters.sku.model
          type:
            - string
          description: The SKU model.
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: The SKU capacity.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: The identity of the resource.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: "The identity type. Possible\rvalues include: 'SystemAssigned'"
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreateOrUpdate(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, apiVersion, parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#beginDeleteByIdWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#beginDeleteByIdWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: 'beginDeleteByIdWithHttpOperationResponse(resourceId, apiVersion, options)'
    summary: Deletes a resource by ID.
    fullName: >-
      botbuilder-packages.Resources.beginDeleteByIdWithHttpOperationResponse(resourceId,
      apiVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteByIdWithHttpOperationResponse(resourceId,
        apiVersion, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#beginDeleteById'
    id: 'botbuilder-packages.Resources#beginDeleteById'
    parent: botbuilder-packages.Resources
    name: 'beginDeleteById(resourceId, apiVersion, options, optionalCallback)'
    summary: Deletes a resource by ID.
    fullName: >-
      botbuilder-packages.Resources.beginDeleteById(resourceId, apiVersion,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginDeleteById(resourceId, apiVersion, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      botbuilder-packages.Resources#beginCreateOrUpdateByIdWithHttpOperationResponse
    id: >-
      botbuilder-packages.Resources#beginCreateOrUpdateByIdWithHttpOperationResponse
    parent: botbuilder-packages.Resources
    name: >-
      beginCreateOrUpdateByIdWithHttpOperationResponse(resourceId, apiVersion,
      parameters, options)
    summary: Create a resource by ID.
    fullName: >-
      botbuilder-packages.Resources.beginCreateOrUpdateByIdWithHttpOperationResponse(resourceId,
      apiVersion, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<GenericResource>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - object
          description: Create or update resource parameters.
        - id: parameters.plan
          type:
            - object
          description: The plan of the resource.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: The offer ID.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: The resource properties.
          optional: true
        - id: parameters.kind
          type:
            - string
          description: The kind of the resource.
          optional: true
        - id: parameters.managedBy
          type:
            - string
          description: "ID of the resource that manages this\rresource."
          optional: true
        - id: parameters.sku
          type:
            - object
          description: The SKU of the resource.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The SKU name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: The SKU tier.
          optional: true
        - id: parameters.sku.size
          type:
            - string
          description: The SKU size.
          optional: true
        - id: parameters.sku.family
          type:
            - string
          description: The SKU family.
          optional: true
        - id: parameters.sku.model
          type:
            - string
          description: The SKU model.
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: The SKU capacity.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: The identity of the resource.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: "The identity type. Possible\rvalues include: 'SystemAssigned'"
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateByIdWithHttpOperationResponse(resourceId,
        apiVersion, parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#beginCreateOrUpdateById'
    id: 'botbuilder-packages.Resources#beginCreateOrUpdateById'
    parent: botbuilder-packages.Resources
    name: >-
      beginCreateOrUpdateById(resourceId, apiVersion, parameters, options,
      optionalCallback)
    summary: Create a resource by ID.
    fullName: >-
      botbuilder-packages.Resources.beginCreateOrUpdateById(resourceId,
      apiVersion, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{GenericResource} - The deserialized result object.'
        value: '{GenericResource} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GenericResource} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceId
          type:
            - string
          description: "The fully qualified ID of the resource, including\rthe resource name and resource type. Use the format,\r/subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
        - id: apiVersion
          type:
            - string
          description: The API version to use for the operation.
        - id: parameters
          type:
            - object
          description: Create or update resource parameters.
        - id: parameters.plan
          type:
            - object
          description: The plan of the resource.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: The offer ID.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: The resource properties.
          optional: true
        - id: parameters.kind
          type:
            - string
          description: The kind of the resource.
          optional: true
        - id: parameters.managedBy
          type:
            - string
          description: "ID of the resource that manages this\rresource."
          optional: true
        - id: parameters.sku
          type:
            - object
          description: The SKU of the resource.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The SKU name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: The SKU tier.
          optional: true
        - id: parameters.sku.size
          type:
            - string
          description: The SKU size.
          optional: true
        - id: parameters.sku.family
          type:
            - string
          description: The SKU family.
          optional: true
        - id: parameters.sku.model
          type:
            - string
          description: The SKU model.
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: The SKU capacity.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: The identity of the resource.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: "The identity type. Possible\rvalues include: 'SystemAssigned'"
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreateOrUpdateById(resourceId, apiVersion, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      botbuilder-packages.Resources#listByResourceGroupNextWithHttpOperationResponse
    id: >-
      botbuilder-packages.Resources#listByResourceGroupNextWithHttpOperationResponse
    parent: botbuilder-packages.Resources
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Get all the resources for a resource group.
    fullName: >-
      botbuilder-packages.Resources.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#listByResourceGroupNext'
    id: 'botbuilder-packages.Resources#listByResourceGroupNext'
    parent: botbuilder-packages.Resources
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: Get all the resources for a resource group.
    fullName: >-
      botbuilder-packages.Resources.listByResourceGroupNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceListResult} - The deserialized result object.'
        value: '{ResourceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#listNextWithHttpOperationResponse'
    id: 'botbuilder-packages.Resources#listNextWithHttpOperationResponse'
    parent: botbuilder-packages.Resources
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Get all the resources in a subscription.
    fullName: >-
      botbuilder-packages.Resources.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'botbuilder-packages.Resources#listNext'
    id: 'botbuilder-packages.Resources#listNext'
    parent: botbuilder-packages.Resources
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Get all the resources in a subscription.
    fullName: >-
      botbuilder-packages.Resources.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceListResult} - The deserialized result object.'
        value: '{ResourceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
