### YamlMime:UniversalReference
items:
  - uid: botbuilder-packages.ResourceGroups
    id: botbuilder-packages.ResourceGroups
    name: ResourceGroups
    summary: Class representing a ResourceGroups.
    fullName: botbuilder-packages.ResourceGroups
    source:
      id: botbuilder-packages.ResourceGroups
      path: tools\resourceManagement\lib\resource\operations\resourceGroups.js
      startLine: 1368
      remote:
        branch: master
        path: tools\resourceManagement\lib\resource\operations\resourceGroups.js
        repo: 'https://github.com/Microsoft/botbuilder-js.git'
    type: Class
    children:
      - 'botbuilder-packages.ResourceGroups.#ctor'
      - >-
        botbuilder-packages.ResourceGroups#checkExistenceWithHttpOperationResponse
      - 'botbuilder-packages.ResourceGroups#checkExistence'
      - >-
        botbuilder-packages.ResourceGroups#createOrUpdateWithHttpOperationResponse
      - 'botbuilder-packages.ResourceGroups#createOrUpdate'
      - 'botbuilder-packages.ResourceGroups#deleteMethodWithHttpOperationResponse'
      - 'botbuilder-packages.ResourceGroups#deleteMethod'
      - 'botbuilder-packages.ResourceGroups#getWithHttpOperationResponse'
      - 'botbuilder-packages.ResourceGroups#get'
      - 'botbuilder-packages.ResourceGroups#updateWithHttpOperationResponse'
      - 'botbuilder-packages.ResourceGroups#update'
      - >-
        botbuilder-packages.ResourceGroups#exportTemplateWithHttpOperationResponse
      - 'botbuilder-packages.ResourceGroups#exportTemplate'
      - 'botbuilder-packages.ResourceGroups#listWithHttpOperationResponse'
      - 'botbuilder-packages.ResourceGroups#list'
      - >-
        botbuilder-packages.ResourceGroups#beginDeleteMethodWithHttpOperationResponse
      - 'botbuilder-packages.ResourceGroups#beginDeleteMethod'
      - 'botbuilder-packages.ResourceGroups#listNextWithHttpOperationResponse'
      - 'botbuilder-packages.ResourceGroups#listNext'
    langs:
      - js
  - id: 'botbuilder-packages.ResourceGroups.#ctor'
    uid: 'botbuilder-packages.ResourceGroups.#ctor'
    parent: botbuilder-packages.ResourceGroups
    name: ResourceGroups(client)
    fullName: botbuilder-packages.ResourceGroups.ResourceGroups(client)
    summary: Create a ResourceGroups.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedResourceManagementClient
          description: Reference to the service client.
      content: new ResourceGroups(client)
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#checkExistenceWithHttpOperationResponse'
    id: 'botbuilder-packages.ResourceGroups#checkExistenceWithHttpOperationResponse'
    parent: botbuilder-packages.ResourceGroups
    name: 'checkExistenceWithHttpOperationResponse(resourceGroupName, options)'
    summary: Checks whether a resource group exists.
    fullName: >-
      botbuilder-packages.ResourceGroups.checkExistenceWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
        value: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to check.\rThe name is case insensitive."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function checkExistenceWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#checkExistence'
    id: 'botbuilder-packages.ResourceGroups#checkExistence'
    parent: botbuilder-packages.ResourceGroups
    name: 'checkExistence(resourceGroupName, options, optionalCallback)'
    summary: Checks whether a resource group exists.
    fullName: >-
      botbuilder-packages.ResourceGroups.checkExistence(resourceGroupName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Boolean} - The deserialized result object.'
        value: '{Boolean} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to check.\rThe name is case insensitive."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function checkExistence(resourceGroupName, options, optionalCallback)'
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#createOrUpdateWithHttpOperationResponse'
    id: 'botbuilder-packages.ResourceGroups#createOrUpdateWithHttpOperationResponse'
    parent: botbuilder-packages.ResourceGroups
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, parameters,
      options)
    summary: Creates or updates a resource group.
    fullName: >-
      botbuilder-packages.ResourceGroups.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceGroup>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ResourceGroup>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to create\ror update."
        - id: parameters
          type:
            - object
          description: "Parameters supplied to the create or update a\rresource group."
        - id: parameters.name
          type:
            - string
          description: The name of the resource group.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: ''
          optional: true
        - id: parameters.location
          type:
            - string
          description: "The location of the resource group. It\rcannot be changed after the resource group has been created. It muct be one\rof the supported Azure locations."
        - id: parameters.managedBy
          type:
            - string
          description: "The ID of the resource that manages\rthis resource group."
          optional: true
        - id: parameters.tags
          type:
            - object
          description: The tags attached to the resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#createOrUpdate'
    id: 'botbuilder-packages.ResourceGroups#createOrUpdate'
    parent: botbuilder-packages.ResourceGroups
    name: 'createOrUpdate(resourceGroupName, parameters, options, optionalCallback)'
    summary: Creates or updates a resource group.
    fullName: >-
      botbuilder-packages.ResourceGroups.createOrUpdate(resourceGroupName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceGroup} - The deserialized result object.'
        value: '{ResourceGroup} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroup} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroup} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to create\ror update."
        - id: parameters
          type:
            - object
          description: "Parameters supplied to the create or update a\rresource group."
        - id: parameters.name
          type:
            - string
          description: The name of the resource group.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: ''
          optional: true
        - id: parameters.location
          type:
            - string
          description: "The location of the resource group. It\rcannot be changed after the resource group has been created. It muct be one\rof the supported Azure locations."
        - id: parameters.managedBy
          type:
            - string
          description: "The ID of the resource that manages\rthis resource group."
          optional: true
        - id: parameters.tags
          type:
            - object
          description: The tags attached to the resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createOrUpdate(resourceGroupName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#deleteMethodWithHttpOperationResponse'
    id: 'botbuilder-packages.ResourceGroups#deleteMethodWithHttpOperationResponse'
    parent: botbuilder-packages.ResourceGroups
    name: 'deleteMethodWithHttpOperationResponse(resourceGroupName, options)'
    summary: "Deletes a resource group.\r\rWhen you delete a resource group, all of its resources are also deleted.\rDeleting a resource group deletes all of its template deployments and\rcurrently stored operations."
    fullName: >-
      botbuilder-packages.ResourceGroups.deleteMethodWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to delete.\rThe name is case insensitive."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#deleteMethod'
    id: 'botbuilder-packages.ResourceGroups#deleteMethod'
    parent: botbuilder-packages.ResourceGroups
    name: 'deleteMethod(resourceGroupName, options, optionalCallback)'
    summary: "Deletes a resource group.\r\rWhen you delete a resource group, all of its resources are also deleted.\rDeleting a resource group deletes all of its template deployments and\rcurrently stored operations."
    fullName: >-
      botbuilder-packages.ResourceGroups.deleteMethod(resourceGroupName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to delete.\rThe name is case insensitive."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function deleteMethod(resourceGroupName, options, optionalCallback)'
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#getWithHttpOperationResponse'
    id: 'botbuilder-packages.ResourceGroups#getWithHttpOperationResponse'
    parent: botbuilder-packages.ResourceGroups
    name: 'getWithHttpOperationResponse(resourceGroupName, options)'
    summary: Gets a resource group.
    fullName: >-
      botbuilder-packages.ResourceGroups.getWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceGroup>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ResourceGroup>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to get. The\rname is case insensitive."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getWithHttpOperationResponse(resourceGroupName, options)'
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#get'
    id: 'botbuilder-packages.ResourceGroups#get'
    parent: botbuilder-packages.ResourceGroups
    name: 'get(resourceGroupName, options, optionalCallback)'
    summary: Gets a resource group.
    fullName: >-
      botbuilder-packages.ResourceGroups.get(resourceGroupName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceGroup} - The deserialized result object.'
        value: '{ResourceGroup} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroup} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroup} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to get. The\rname is case insensitive."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function get(resourceGroupName, options, optionalCallback)'
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#updateWithHttpOperationResponse'
    id: 'botbuilder-packages.ResourceGroups#updateWithHttpOperationResponse'
    parent: botbuilder-packages.ResourceGroups
    name: 'updateWithHttpOperationResponse(resourceGroupName, parameters, options)'
    summary: "Updates a resource group.\r\rResource groups can be updated through a simple PATCH operation to a group\raddress. The format of the request is the same as that for creating a\rresource group. If a field is unspecified, the current value is retained."
    fullName: >-
      botbuilder-packages.ResourceGroups.updateWithHttpOperationResponse(resourceGroupName,
      parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceGroup>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ResourceGroup>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to update.\rThe name is case insensitive."
        - id: parameters
          type:
            - object
          description: Parameters supplied to update a resource group.
        - id: parameters.name
          type:
            - string
          description: The name of the resource group.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: ''
          optional: true
        - id: parameters.managedBy
          type:
            - string
          description: "The ID of the resource that manages\rthis resource group."
          optional: true
        - id: parameters.tags
          type:
            - object
          description: The tags attached to the resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName, parameters,
        options)
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#update'
    id: 'botbuilder-packages.ResourceGroups#update'
    parent: botbuilder-packages.ResourceGroups
    name: 'update(resourceGroupName, parameters, options, optionalCallback)'
    summary: "Updates a resource group.\r\rResource groups can be updated through a simple PATCH operation to a group\raddress. The format of the request is the same as that for creating a\rresource group. If a field is unspecified, the current value is retained."
    fullName: >-
      botbuilder-packages.ResourceGroups.update(resourceGroupName, parameters,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceGroup} - The deserialized result object.'
        value: '{ResourceGroup} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroup} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroup} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to update.\rThe name is case insensitive."
        - id: parameters
          type:
            - object
          description: Parameters supplied to update a resource group.
        - id: parameters.name
          type:
            - string
          description: The name of the resource group.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: ''
          optional: true
        - id: parameters.managedBy
          type:
            - string
          description: "The ID of the resource that manages\rthis resource group."
          optional: true
        - id: parameters.tags
          type:
            - object
          description: The tags attached to the resource group.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function update(resourceGroupName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#exportTemplateWithHttpOperationResponse'
    id: 'botbuilder-packages.ResourceGroups#exportTemplateWithHttpOperationResponse'
    parent: botbuilder-packages.ResourceGroups
    name: >-
      exportTemplateWithHttpOperationResponse(resourceGroupName, parameters,
      options)
    summary: Captures the specified resource group as a template.
    fullName: >-
      botbuilder-packages.ResourceGroups.exportTemplateWithHttpOperationResponse(resourceGroupName,
      parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceGroupExportResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ResourceGroupExportResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to export\ras a template."
        - id: parameters
          type:
            - object
          description: Parameters for exporting the template.
        - id: parameters.resources
          type:
            - array
          description: "The IDs of the resources. The only\rsupported string currently is '*' (all resources). Future updates will\rsupport exporting specific resources."
          optional: true
        - id: parameters.options
          type:
            - string
          description: "The export template options. Supported\rvalues include 'IncludeParameterDefaultValue', 'IncludeComments' or\r'IncludeParameterDefaultValue, IncludeComments"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function exportTemplateWithHttpOperationResponse(resourceGroupName,
        parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#exportTemplate'
    id: 'botbuilder-packages.ResourceGroups#exportTemplate'
    parent: botbuilder-packages.ResourceGroups
    name: 'exportTemplate(resourceGroupName, parameters, options, optionalCallback)'
    summary: Captures the specified resource group as a template.
    fullName: >-
      botbuilder-packages.ResourceGroups.exportTemplate(resourceGroupName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceGroupExportResult} - The deserialized result object.'
        value: '{ResourceGroupExportResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroupExportResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroupExportResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to export\ras a template."
        - id: parameters
          type:
            - object
          description: Parameters for exporting the template.
        - id: parameters.resources
          type:
            - array
          description: "The IDs of the resources. The only\rsupported string currently is '*' (all resources). Future updates will\rsupport exporting specific resources."
          optional: true
        - id: parameters.options
          type:
            - string
          description: "The export template options. Supported\rvalues include 'IncludeParameterDefaultValue', 'IncludeComments' or\r'IncludeParameterDefaultValue, IncludeComments"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function exportTemplate(resourceGroupName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#listWithHttpOperationResponse'
    id: 'botbuilder-packages.ResourceGroups#listWithHttpOperationResponse'
    parent: botbuilder-packages.ResourceGroups
    name: listWithHttpOperationResponse(options)
    summary: Gets all the resource groups for a subscription.
    fullName: botbuilder-packages.ResourceGroups.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceGroupListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ResourceGroupListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.top
          type:
            - number
          description: "The number of results to return. If null is\rpassed, returns all resource groups."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#list'
    id: 'botbuilder-packages.ResourceGroups#list'
    parent: botbuilder-packages.ResourceGroups
    name: 'list(options, optionalCallback)'
    summary: Gets all the resource groups for a subscription.
    fullName: 'botbuilder-packages.ResourceGroups.list(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceGroupListResult} - The deserialized result object.'
        value: '{ResourceGroupListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroupListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroupListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.top
          type:
            - number
          description: "The number of results to return. If null is\rpassed, returns all resource groups."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      botbuilder-packages.ResourceGroups#beginDeleteMethodWithHttpOperationResponse
    id: >-
      botbuilder-packages.ResourceGroups#beginDeleteMethodWithHttpOperationResponse
    parent: botbuilder-packages.ResourceGroups
    name: 'beginDeleteMethodWithHttpOperationResponse(resourceGroupName, options)'
    summary: "Deletes a resource group.\r\rWhen you delete a resource group, all of its resources are also deleted.\rDeleting a resource group deletes all of its template deployments and\rcurrently stored operations."
    fullName: >-
      botbuilder-packages.ResourceGroups.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to delete.\rThe name is case insensitive."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#beginDeleteMethod'
    id: 'botbuilder-packages.ResourceGroups#beginDeleteMethod'
    parent: botbuilder-packages.ResourceGroups
    name: 'beginDeleteMethod(resourceGroupName, options, optionalCallback)'
    summary: "Deletes a resource group.\r\rWhen you delete a resource group, all of its resources are also deleted.\rDeleting a resource group deletes all of its template deployments and\rcurrently stored operations."
    fullName: >-
      botbuilder-packages.ResourceGroups.beginDeleteMethod(resourceGroupName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to delete.\rThe name is case insensitive."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function beginDeleteMethod(resourceGroupName, options, optionalCallback)'
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#listNextWithHttpOperationResponse'
    id: 'botbuilder-packages.ResourceGroups#listNextWithHttpOperationResponse'
    parent: botbuilder-packages.ResourceGroups
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets all the resource groups for a subscription.
    fullName: >-
      botbuilder-packages.ResourceGroups.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceGroupListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ResourceGroupListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'botbuilder-packages.ResourceGroups#listNext'
    id: 'botbuilder-packages.ResourceGroups#listNext'
    parent: botbuilder-packages.ResourceGroups
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Gets all the resource groups for a subscription.
    fullName: >-
      botbuilder-packages.ResourceGroups.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceGroupListResult} - The deserialized result object.'
        value: '{ResourceGroupListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroupListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResourceGroupListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
