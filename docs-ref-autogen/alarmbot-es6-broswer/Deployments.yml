### YamlMime:UniversalReference
items:
  - uid: botbuilder-packages.Deployments
    id: botbuilder-packages.Deployments
    name: Deployments
    summary: Class representing a Deployments.
    fullName: botbuilder-packages.Deployments
    source:
      id: botbuilder-packages.Deployments
      path: tools\resourceManagement\lib\resource\operations\deployments.js
      startLine: 1908
      remote:
        branch: master
        path: tools\resourceManagement\lib\resource\operations\deployments.js
        repo: 'https://github.com/Microsoft/botbuilder-js.git'
    type: Class
    children:
      - 'botbuilder-packages.Deployments.#ctor'
      - 'botbuilder-packages.Deployments#deleteMethodWithHttpOperationResponse'
      - 'botbuilder-packages.Deployments#deleteMethod'
      - 'botbuilder-packages.Deployments#checkExistenceWithHttpOperationResponse'
      - 'botbuilder-packages.Deployments#checkExistence'
      - 'botbuilder-packages.Deployments#createOrUpdateWithHttpOperationResponse'
      - 'botbuilder-packages.Deployments#createOrUpdate'
      - 'botbuilder-packages.Deployments#getWithHttpOperationResponse'
      - 'botbuilder-packages.Deployments#get'
      - 'botbuilder-packages.Deployments#cancelWithHttpOperationResponse'
      - 'botbuilder-packages.Deployments#cancel'
      - 'botbuilder-packages.Deployments#validateWithHttpOperationResponse'
      - 'botbuilder-packages.Deployments#validate'
      - 'botbuilder-packages.Deployments#exportTemplateWithHttpOperationResponse'
      - 'botbuilder-packages.Deployments#exportTemplate'
      - >-
        botbuilder-packages.Deployments#listByResourceGroupWithHttpOperationResponse
      - 'botbuilder-packages.Deployments#listByResourceGroup'
      - >-
        botbuilder-packages.Deployments#beginDeleteMethodWithHttpOperationResponse
      - 'botbuilder-packages.Deployments#beginDeleteMethod'
      - >-
        botbuilder-packages.Deployments#beginCreateOrUpdateWithHttpOperationResponse
      - 'botbuilder-packages.Deployments#beginCreateOrUpdate'
      - >-
        botbuilder-packages.Deployments#listByResourceGroupNextWithHttpOperationResponse
      - 'botbuilder-packages.Deployments#listByResourceGroupNext'
    langs:
      - js
  - id: 'botbuilder-packages.Deployments.#ctor'
    uid: 'botbuilder-packages.Deployments.#ctor'
    parent: botbuilder-packages.Deployments
    name: Deployments(client)
    fullName: botbuilder-packages.Deployments.Deployments(client)
    summary: Create a Deployments.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedResourceManagementClient
          description: Reference to the service client.
      content: new Deployments(client)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#deleteMethodWithHttpOperationResponse'
    id: 'botbuilder-packages.Deployments#deleteMethodWithHttpOperationResponse'
    parent: botbuilder-packages.Deployments
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, deploymentName,
      options)
    summary: "Deletes a deployment from the deployment history.\r\rA template deployment that is currently running cannot be deleted. Deleting\ra template deployment removes the associated deployment operations. Deleting\ra template deployment does not affect the state of the resource group. This\ris an asynchronous operation that returns a status of 202 until the template\rdeployment is successfully deleted. The Location response header contains\rthe URI that is used to obtain the status of the process. While the process\ris running, a call to the URI in the Location header returns a status of\r202. When the process finishes, the URI in the Location header returns a\rstatus of 204 on success. If the asynchronous request failed, the URI in the\rLocation header returns an error-level status code."
    fullName: >-
      botbuilder-packages.Deployments.deleteMethodWithHttpOperationResponse(resourceGroupName,
      deploymentName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group with the\rdeployment to delete. The name is case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        deploymentName, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#deleteMethod'
    id: 'botbuilder-packages.Deployments#deleteMethod'
    parent: botbuilder-packages.Deployments
    name: 'deleteMethod(resourceGroupName, deploymentName, options, optionalCallback)'
    summary: "Deletes a deployment from the deployment history.\r\rA template deployment that is currently running cannot be deleted. Deleting\ra template deployment removes the associated deployment operations. Deleting\ra template deployment does not affect the state of the resource group. This\ris an asynchronous operation that returns a status of 202 until the template\rdeployment is successfully deleted. The Location response header contains\rthe URI that is used to obtain the status of the process. While the process\ris running, a call to the URI in the Location header returns a status of\r202. When the process finishes, the URI in the Location header returns a\rstatus of 204 on success. If the asynchronous request failed, the URI in the\rLocation header returns an error-level status code."
    fullName: >-
      botbuilder-packages.Deployments.deleteMethod(resourceGroupName,
      deploymentName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group with the\rdeployment to delete. The name is case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteMethod(resourceGroupName, deploymentName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#checkExistenceWithHttpOperationResponse'
    id: 'botbuilder-packages.Deployments#checkExistenceWithHttpOperationResponse'
    parent: botbuilder-packages.Deployments
    name: >-
      checkExistenceWithHttpOperationResponse(resourceGroupName, deploymentName,
      options)
    summary: Checks whether the deployment exists.
    fullName: >-
      botbuilder-packages.Deployments.checkExistenceWithHttpOperationResponse(resourceGroupName,
      deploymentName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
        value: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group with the\rdeployment to check. The name is case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to check.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function checkExistenceWithHttpOperationResponse(resourceGroupName,
        deploymentName, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#checkExistence'
    id: 'botbuilder-packages.Deployments#checkExistence'
    parent: botbuilder-packages.Deployments
    name: >-
      checkExistence(resourceGroupName, deploymentName, options,
      optionalCallback)
    summary: Checks whether the deployment exists.
    fullName: >-
      botbuilder-packages.Deployments.checkExistence(resourceGroupName,
      deploymentName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Boolean} - The deserialized result object.'
        value: '{Boolean} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group with the\rdeployment to check. The name is case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to check.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function checkExistence(resourceGroupName, deploymentName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#createOrUpdateWithHttpOperationResponse'
    id: 'botbuilder-packages.Deployments#createOrUpdateWithHttpOperationResponse'
    parent: botbuilder-packages.Deployments
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, deploymentName,
      parameters, options)
    summary: "Deploys resources to a resource group.\r\rYou can provide the template and parameters directly in the request or link\rto JSON files."
    fullName: >-
      botbuilder-packages.Deployments.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      deploymentName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeploymentExtended>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<DeploymentExtended>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to deploy\rthe resources to. The name is case insensitive. The resource group must\ralready exist."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment.
        - id: parameters
          type:
            - object
          description: Additional parameters supplied to the operation.
        - id: parameters.properties
          type:
            - object
          description: The deployment properties.
        - id: parameters.properties.template
          type:
            - object
          description: "The template content. You\ruse this element when you want to pass the template syntax directly in the\rrequest rather than link to an existing template. It can be a JObject or\rwell-formed JSON string. Use either the templateLink property or the\rtemplate property, but not both."
          optional: true
        - id: parameters.properties.templateLink
          type:
            - object
          description: "The URI of the\rtemplate. Use either the templateLink property or the template property, but\rnot both."
          optional: true
        - id: parameters.properties.templateLink.uri
          type:
            - string
          description: "The URI of the\rtemplate to deploy."
        - id: parameters.properties.templateLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.parameters
          type:
            - object
          description: "Name and value pairs that\rdefine the deployment parameters for the template. You use this element when\ryou want to provide the parameter values directly in the request rather than\rlink to an existing parameter file. Use either the parametersLink property\ror the parameters property, but not both. It can be a JObject or a well\rformed JSON string."
          optional: true
        - id: parameters.properties.parametersLink
          type:
            - object
          description: "The URI of parameters\rfile. You use this element to link to an existing parameters file. Use\reither the parametersLink property or the parameters property, but not both."
          optional: true
        - id: parameters.properties.parametersLink.uri
          type:
            - string
          description: "The URI of the\rparameters file."
        - id: parameters.properties.parametersLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.mode
          type:
            - string
          description: "The mode that is used to deploy\rresources. This value can be either Incremental or Complete. In Incremental\rmode, resources are deployed without deleting existing resources that are\rnot included in the template. In Complete mode, resources are deployed and\rexisting resources in the resource group that are not included in the\rtemplate are deleted. Be careful when using Complete mode as you may\runintentionally delete resources. Possible values include: 'Incremental',\r'Complete'"
        - id: parameters.properties.debugSetting
          type:
            - object
          description: "The debug setting of\rthe deployment."
          optional: true
        - id: parameters.properties.debugSetting.detailLevel
          type:
            - string
          description: "Specifies\rthe type of information to log for debugging. The permitted values are none,\rrequestContent, responseContent, or both requestContent and responseContent\rseparated by a comma. The default is none. When setting this value,\rcarefully consider the type of information you are passing in during\rdeployment. By logging information about the request or response, you could\rpotentially expose sensitive data that is retrieved through the deployment\roperations."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        deploymentName, parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#createOrUpdate'
    id: 'botbuilder-packages.Deployments#createOrUpdate'
    parent: botbuilder-packages.Deployments
    name: >-
      createOrUpdate(resourceGroupName, deploymentName, parameters, options,
      optionalCallback)
    summary: "Deploys resources to a resource group.\r\rYou can provide the template and parameters directly in the request or link\rto JSON files."
    fullName: >-
      botbuilder-packages.Deployments.createOrUpdate(resourceGroupName,
      deploymentName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeploymentExtended} - The deserialized result object.'
        value: '{DeploymentExtended} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentExtended} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentExtended} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to deploy\rthe resources to. The name is case insensitive. The resource group must\ralready exist."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment.
        - id: parameters
          type:
            - object
          description: Additional parameters supplied to the operation.
        - id: parameters.properties
          type:
            - object
          description: The deployment properties.
        - id: parameters.properties.template
          type:
            - object
          description: "The template content. You\ruse this element when you want to pass the template syntax directly in the\rrequest rather than link to an existing template. It can be a JObject or\rwell-formed JSON string. Use either the templateLink property or the\rtemplate property, but not both."
          optional: true
        - id: parameters.properties.templateLink
          type:
            - object
          description: "The URI of the\rtemplate. Use either the templateLink property or the template property, but\rnot both."
          optional: true
        - id: parameters.properties.templateLink.uri
          type:
            - string
          description: "The URI of the\rtemplate to deploy."
        - id: parameters.properties.templateLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.parameters
          type:
            - object
          description: "Name and value pairs that\rdefine the deployment parameters for the template. You use this element when\ryou want to provide the parameter values directly in the request rather than\rlink to an existing parameter file. Use either the parametersLink property\ror the parameters property, but not both. It can be a JObject or a well\rformed JSON string."
          optional: true
        - id: parameters.properties.parametersLink
          type:
            - object
          description: "The URI of parameters\rfile. You use this element to link to an existing parameters file. Use\reither the parametersLink property or the parameters property, but not both."
          optional: true
        - id: parameters.properties.parametersLink.uri
          type:
            - string
          description: "The URI of the\rparameters file."
        - id: parameters.properties.parametersLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.mode
          type:
            - string
          description: "The mode that is used to deploy\rresources. This value can be either Incremental or Complete. In Incremental\rmode, resources are deployed without deleting existing resources that are\rnot included in the template. In Complete mode, resources are deployed and\rexisting resources in the resource group that are not included in the\rtemplate are deleted. Be careful when using Complete mode as you may\runintentionally delete resources. Possible values include: 'Incremental',\r'Complete'"
        - id: parameters.properties.debugSetting
          type:
            - object
          description: "The debug setting of\rthe deployment."
          optional: true
        - id: parameters.properties.debugSetting.detailLevel
          type:
            - string
          description: "Specifies\rthe type of information to log for debugging. The permitted values are none,\rrequestContent, responseContent, or both requestContent and responseContent\rseparated by a comma. The default is none. When setting this value,\rcarefully consider the type of information you are passing in during\rdeployment. By logging information about the request or response, you could\rpotentially expose sensitive data that is retrieved through the deployment\roperations."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createOrUpdate(resourceGroupName, deploymentName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#getWithHttpOperationResponse'
    id: 'botbuilder-packages.Deployments#getWithHttpOperationResponse'
    parent: botbuilder-packages.Deployments
    name: 'getWithHttpOperationResponse(resourceGroupName, deploymentName, options)'
    summary: Gets a deployment.
    fullName: >-
      botbuilder-packages.Deployments.getWithHttpOperationResponse(resourceGroupName,
      deploymentName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeploymentExtended>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<DeploymentExtended>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, deploymentName,
        options)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#get'
    id: 'botbuilder-packages.Deployments#get'
    parent: botbuilder-packages.Deployments
    name: 'get(resourceGroupName, deploymentName, options, optionalCallback)'
    summary: Gets a deployment.
    fullName: >-
      botbuilder-packages.Deployments.get(resourceGroupName, deploymentName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeploymentExtended} - The deserialized result object.'
        value: '{DeploymentExtended} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentExtended} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentExtended} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function get(resourceGroupName, deploymentName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#cancelWithHttpOperationResponse'
    id: 'botbuilder-packages.Deployments#cancelWithHttpOperationResponse'
    parent: botbuilder-packages.Deployments
    name: >-
      cancelWithHttpOperationResponse(resourceGroupName, deploymentName,
      options)
    summary: "Cancels a currently running template deployment.\r\rYou can cancel a deployment only if the provisioningState is Accepted or\rRunning. After the deployment is canceled, the provisioningState is set to\rCanceled. Canceling a template deployment stops the currently running\rtemplate deployment and leaves the resource group partially deployed."
    fullName: >-
      botbuilder-packages.Deployments.cancelWithHttpOperationResponse(resourceGroupName,
      deploymentName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to cancel.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function cancelWithHttpOperationResponse(resourceGroupName,
        deploymentName, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#cancel'
    id: 'botbuilder-packages.Deployments#cancel'
    parent: botbuilder-packages.Deployments
    name: 'cancel(resourceGroupName, deploymentName, options, optionalCallback)'
    summary: "Cancels a currently running template deployment.\r\rYou can cancel a deployment only if the provisioningState is Accepted or\rRunning. After the deployment is canceled, the provisioningState is set to\rCanceled. Canceling a template deployment stops the currently running\rtemplate deployment and leaves the resource group partially deployed."
    fullName: >-
      botbuilder-packages.Deployments.cancel(resourceGroupName, deploymentName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to cancel.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function cancel(resourceGroupName, deploymentName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#validateWithHttpOperationResponse'
    id: 'botbuilder-packages.Deployments#validateWithHttpOperationResponse'
    parent: botbuilder-packages.Deployments
    name: >-
      validateWithHttpOperationResponse(resourceGroupName, deploymentName,
      parameters, options)
    summary: "Validates whether the specified template is syntactically correct and will\rbe accepted by Azure Resource Manager.."
    fullName: >-
      botbuilder-packages.Deployments.validateWithHttpOperationResponse(resourceGroupName,
      deploymentName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeploymentValidateResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeploymentValidateResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group the\rtemplate will be deployed to. The name is case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment.
        - id: parameters
          type:
            - object
          description: Parameters to validate.
        - id: parameters.properties
          type:
            - object
          description: The deployment properties.
        - id: parameters.properties.template
          type:
            - object
          description: "The template content. You\ruse this element when you want to pass the template syntax directly in the\rrequest rather than link to an existing template. It can be a JObject or\rwell-formed JSON string. Use either the templateLink property or the\rtemplate property, but not both."
          optional: true
        - id: parameters.properties.templateLink
          type:
            - object
          description: "The URI of the\rtemplate. Use either the templateLink property or the template property, but\rnot both."
          optional: true
        - id: parameters.properties.templateLink.uri
          type:
            - string
          description: "The URI of the\rtemplate to deploy."
        - id: parameters.properties.templateLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.parameters
          type:
            - object
          description: "Name and value pairs that\rdefine the deployment parameters for the template. You use this element when\ryou want to provide the parameter values directly in the request rather than\rlink to an existing parameter file. Use either the parametersLink property\ror the parameters property, but not both. It can be a JObject or a well\rformed JSON string."
          optional: true
        - id: parameters.properties.parametersLink
          type:
            - object
          description: "The URI of parameters\rfile. You use this element to link to an existing parameters file. Use\reither the parametersLink property or the parameters property, but not both."
          optional: true
        - id: parameters.properties.parametersLink.uri
          type:
            - string
          description: "The URI of the\rparameters file."
        - id: parameters.properties.parametersLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.mode
          type:
            - string
          description: "The mode that is used to deploy\rresources. This value can be either Incremental or Complete. In Incremental\rmode, resources are deployed without deleting existing resources that are\rnot included in the template. In Complete mode, resources are deployed and\rexisting resources in the resource group that are not included in the\rtemplate are deleted. Be careful when using Complete mode as you may\runintentionally delete resources. Possible values include: 'Incremental',\r'Complete'"
        - id: parameters.properties.debugSetting
          type:
            - object
          description: "The debug setting of\rthe deployment."
          optional: true
        - id: parameters.properties.debugSetting.detailLevel
          type:
            - string
          description: "Specifies\rthe type of information to log for debugging. The permitted values are none,\rrequestContent, responseContent, or both requestContent and responseContent\rseparated by a comma. The default is none. When setting this value,\rcarefully consider the type of information you are passing in during\rdeployment. By logging information about the request or response, you could\rpotentially expose sensitive data that is retrieved through the deployment\roperations."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function validateWithHttpOperationResponse(resourceGroupName,
        deploymentName, parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#validate'
    id: 'botbuilder-packages.Deployments#validate'
    parent: botbuilder-packages.Deployments
    name: >-
      validate(resourceGroupName, deploymentName, parameters, options,
      optionalCallback)
    summary: "Validates whether the specified template is syntactically correct and will\rbe accepted by Azure Resource Manager.."
    fullName: >-
      botbuilder-packages.Deployments.validate(resourceGroupName,
      deploymentName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeploymentValidateResult} - The deserialized result object.'
        value: '{DeploymentValidateResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentValidateResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentValidateResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group the\rtemplate will be deployed to. The name is case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment.
        - id: parameters
          type:
            - object
          description: Parameters to validate.
        - id: parameters.properties
          type:
            - object
          description: The deployment properties.
        - id: parameters.properties.template
          type:
            - object
          description: "The template content. You\ruse this element when you want to pass the template syntax directly in the\rrequest rather than link to an existing template. It can be a JObject or\rwell-formed JSON string. Use either the templateLink property or the\rtemplate property, but not both."
          optional: true
        - id: parameters.properties.templateLink
          type:
            - object
          description: "The URI of the\rtemplate. Use either the templateLink property or the template property, but\rnot both."
          optional: true
        - id: parameters.properties.templateLink.uri
          type:
            - string
          description: "The URI of the\rtemplate to deploy."
        - id: parameters.properties.templateLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.parameters
          type:
            - object
          description: "Name and value pairs that\rdefine the deployment parameters for the template. You use this element when\ryou want to provide the parameter values directly in the request rather than\rlink to an existing parameter file. Use either the parametersLink property\ror the parameters property, but not both. It can be a JObject or a well\rformed JSON string."
          optional: true
        - id: parameters.properties.parametersLink
          type:
            - object
          description: "The URI of parameters\rfile. You use this element to link to an existing parameters file. Use\reither the parametersLink property or the parameters property, but not both."
          optional: true
        - id: parameters.properties.parametersLink.uri
          type:
            - string
          description: "The URI of the\rparameters file."
        - id: parameters.properties.parametersLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.mode
          type:
            - string
          description: "The mode that is used to deploy\rresources. This value can be either Incremental or Complete. In Incremental\rmode, resources are deployed without deleting existing resources that are\rnot included in the template. In Complete mode, resources are deployed and\rexisting resources in the resource group that are not included in the\rtemplate are deleted. Be careful when using Complete mode as you may\runintentionally delete resources. Possible values include: 'Incremental',\r'Complete'"
        - id: parameters.properties.debugSetting
          type:
            - object
          description: "The debug setting of\rthe deployment."
          optional: true
        - id: parameters.properties.debugSetting.detailLevel
          type:
            - string
          description: "Specifies\rthe type of information to log for debugging. The permitted values are none,\rrequestContent, responseContent, or both requestContent and responseContent\rseparated by a comma. The default is none. When setting this value,\rcarefully consider the type of information you are passing in during\rdeployment. By logging information about the request or response, you could\rpotentially expose sensitive data that is retrieved through the deployment\roperations."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function validate(resourceGroupName, deploymentName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#exportTemplateWithHttpOperationResponse'
    id: 'botbuilder-packages.Deployments#exportTemplateWithHttpOperationResponse'
    parent: botbuilder-packages.Deployments
    name: >-
      exportTemplateWithHttpOperationResponse(resourceGroupName, deploymentName,
      options)
    summary: Exports the template used for specified deployment.
    fullName: >-
      botbuilder-packages.Deployments.exportTemplateWithHttpOperationResponse(resourceGroupName,
      deploymentName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeploymentExportResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeploymentExportResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type:
            - string
          description: "The name of the deployment from which to get\rthe template."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function exportTemplateWithHttpOperationResponse(resourceGroupName,
        deploymentName, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#exportTemplate'
    id: 'botbuilder-packages.Deployments#exportTemplate'
    parent: botbuilder-packages.Deployments
    name: >-
      exportTemplate(resourceGroupName, deploymentName, options,
      optionalCallback)
    summary: Exports the template used for specified deployment.
    fullName: >-
      botbuilder-packages.Deployments.exportTemplate(resourceGroupName,
      deploymentName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeploymentExportResult} - The deserialized result object.'
        value: '{DeploymentExportResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentExportResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentExportResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group. The name\ris case insensitive."
        - id: deploymentName
          type:
            - string
          description: "The name of the deployment from which to get\rthe template."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function exportTemplate(resourceGroupName, deploymentName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      botbuilder-packages.Deployments#listByResourceGroupWithHttpOperationResponse
    id: >-
      botbuilder-packages.Deployments#listByResourceGroupWithHttpOperationResponse
    parent: botbuilder-packages.Deployments
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: Get all the deployments for a resource group.
    fullName: >-
      botbuilder-packages.Deployments.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeploymentListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeploymentListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group with the\rdeployments to get. The name is case insensitive."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: "The filter to apply on the operation. For\rexample, you can use $filter=provisioningState eq '{state}'."
          optional: true
        - id: options.top
          type:
            - number
          description: "The number of results to get. If null is\rpassed, returns all deployments."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#listByResourceGroup'
    id: 'botbuilder-packages.Deployments#listByResourceGroup'
    parent: botbuilder-packages.Deployments
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: Get all the deployments for a resource group.
    fullName: >-
      botbuilder-packages.Deployments.listByResourceGroup(resourceGroupName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeploymentListResult} - The deserialized result object.'
        value: '{DeploymentListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group with the\rdeployments to get. The name is case insensitive."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: "The filter to apply on the operation. For\rexample, you can use $filter=provisioningState eq '{state}'."
          optional: true
        - id: options.top
          type:
            - number
          description: "The number of results to get. If null is\rpassed, returns all deployments."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#beginDeleteMethodWithHttpOperationResponse'
    id: 'botbuilder-packages.Deployments#beginDeleteMethodWithHttpOperationResponse'
    parent: botbuilder-packages.Deployments
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      deploymentName, options)
    summary: "Deletes a deployment from the deployment history.\r\rA template deployment that is currently running cannot be deleted. Deleting\ra template deployment removes the associated deployment operations. Deleting\ra template deployment does not affect the state of the resource group. This\ris an asynchronous operation that returns a status of 202 until the template\rdeployment is successfully deleted. The Location response header contains\rthe URI that is used to obtain the status of the process. While the process\ris running, a call to the URI in the Location header returns a status of\r202. When the process finishes, the URI in the Location header returns a\rstatus of 204 on success. If the asynchronous request failed, the URI in the\rLocation header returns an error-level status code."
    fullName: >-
      botbuilder-packages.Deployments.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      deploymentName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group with the\rdeployment to delete. The name is case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        deploymentName, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#beginDeleteMethod'
    id: 'botbuilder-packages.Deployments#beginDeleteMethod'
    parent: botbuilder-packages.Deployments
    name: >-
      beginDeleteMethod(resourceGroupName, deploymentName, options,
      optionalCallback)
    summary: "Deletes a deployment from the deployment history.\r\rA template deployment that is currently running cannot be deleted. Deleting\ra template deployment removes the associated deployment operations. Deleting\ra template deployment does not affect the state of the resource group. This\ris an asynchronous operation that returns a status of 202 until the template\rdeployment is successfully deleted. The Location response header contains\rthe URI that is used to obtain the status of the process. While the process\ris running, a call to the URI in the Location header returns a status of\r202. When the process finishes, the URI in the Location header returns a\rstatus of 204 on success. If the asynchronous request failed, the URI in the\rLocation header returns an error-level status code."
    fullName: >-
      botbuilder-packages.Deployments.beginDeleteMethod(resourceGroupName,
      deploymentName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group with the\rdeployment to delete. The name is case insensitive."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginDeleteMethod(resourceGroupName, deploymentName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      botbuilder-packages.Deployments#beginCreateOrUpdateWithHttpOperationResponse
    id: >-
      botbuilder-packages.Deployments#beginCreateOrUpdateWithHttpOperationResponse
    parent: botbuilder-packages.Deployments
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      deploymentName, parameters, options)
    summary: "Deploys resources to a resource group.\r\rYou can provide the template and parameters directly in the request or link\rto JSON files."
    fullName: >-
      botbuilder-packages.Deployments.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      deploymentName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeploymentExtended>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<DeploymentExtended>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to deploy\rthe resources to. The name is case insensitive. The resource group must\ralready exist."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment.
        - id: parameters
          type:
            - object
          description: Additional parameters supplied to the operation.
        - id: parameters.properties
          type:
            - object
          description: The deployment properties.
        - id: parameters.properties.template
          type:
            - object
          description: "The template content. You\ruse this element when you want to pass the template syntax directly in the\rrequest rather than link to an existing template. It can be a JObject or\rwell-formed JSON string. Use either the templateLink property or the\rtemplate property, but not both."
          optional: true
        - id: parameters.properties.templateLink
          type:
            - object
          description: "The URI of the\rtemplate. Use either the templateLink property or the template property, but\rnot both."
          optional: true
        - id: parameters.properties.templateLink.uri
          type:
            - string
          description: "The URI of the\rtemplate to deploy."
        - id: parameters.properties.templateLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.parameters
          type:
            - object
          description: "Name and value pairs that\rdefine the deployment parameters for the template. You use this element when\ryou want to provide the parameter values directly in the request rather than\rlink to an existing parameter file. Use either the parametersLink property\ror the parameters property, but not both. It can be a JObject or a well\rformed JSON string."
          optional: true
        - id: parameters.properties.parametersLink
          type:
            - object
          description: "The URI of parameters\rfile. You use this element to link to an existing parameters file. Use\reither the parametersLink property or the parameters property, but not both."
          optional: true
        - id: parameters.properties.parametersLink.uri
          type:
            - string
          description: "The URI of the\rparameters file."
        - id: parameters.properties.parametersLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.mode
          type:
            - string
          description: "The mode that is used to deploy\rresources. This value can be either Incremental or Complete. In Incremental\rmode, resources are deployed without deleting existing resources that are\rnot included in the template. In Complete mode, resources are deployed and\rexisting resources in the resource group that are not included in the\rtemplate are deleted. Be careful when using Complete mode as you may\runintentionally delete resources. Possible values include: 'Incremental',\r'Complete'"
        - id: parameters.properties.debugSetting
          type:
            - object
          description: "The debug setting of\rthe deployment."
          optional: true
        - id: parameters.properties.debugSetting.detailLevel
          type:
            - string
          description: "Specifies\rthe type of information to log for debugging. The permitted values are none,\rrequestContent, responseContent, or both requestContent and responseContent\rseparated by a comma. The default is none. When setting this value,\rcarefully consider the type of information you are passing in during\rdeployment. By logging information about the request or response, you could\rpotentially expose sensitive data that is retrieved through the deployment\roperations."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        deploymentName, parameters, options)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#beginCreateOrUpdate'
    id: 'botbuilder-packages.Deployments#beginCreateOrUpdate'
    parent: botbuilder-packages.Deployments
    name: >-
      beginCreateOrUpdate(resourceGroupName, deploymentName, parameters,
      options, optionalCallback)
    summary: "Deploys resources to a resource group.\r\rYou can provide the template and parameters directly in the request or link\rto JSON files."
    fullName: >-
      botbuilder-packages.Deployments.beginCreateOrUpdate(resourceGroupName,
      deploymentName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeploymentExtended} - The deserialized result object.'
        value: '{DeploymentExtended} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentExtended} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentExtended} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group to deploy\rthe resources to. The name is case insensitive. The resource group must\ralready exist."
        - id: deploymentName
          type:
            - string
          description: The name of the deployment.
        - id: parameters
          type:
            - object
          description: Additional parameters supplied to the operation.
        - id: parameters.properties
          type:
            - object
          description: The deployment properties.
        - id: parameters.properties.template
          type:
            - object
          description: "The template content. You\ruse this element when you want to pass the template syntax directly in the\rrequest rather than link to an existing template. It can be a JObject or\rwell-formed JSON string. Use either the templateLink property or the\rtemplate property, but not both."
          optional: true
        - id: parameters.properties.templateLink
          type:
            - object
          description: "The URI of the\rtemplate. Use either the templateLink property or the template property, but\rnot both."
          optional: true
        - id: parameters.properties.templateLink.uri
          type:
            - string
          description: "The URI of the\rtemplate to deploy."
        - id: parameters.properties.templateLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.parameters
          type:
            - object
          description: "Name and value pairs that\rdefine the deployment parameters for the template. You use this element when\ryou want to provide the parameter values directly in the request rather than\rlink to an existing parameter file. Use either the parametersLink property\ror the parameters property, but not both. It can be a JObject or a well\rformed JSON string."
          optional: true
        - id: parameters.properties.parametersLink
          type:
            - object
          description: "The URI of parameters\rfile. You use this element to link to an existing parameters file. Use\reither the parametersLink property or the parameters property, but not both."
          optional: true
        - id: parameters.properties.parametersLink.uri
          type:
            - string
          description: "The URI of the\rparameters file."
        - id: parameters.properties.parametersLink.contentVersion
          type:
            - string
          description: "If\rincluded, must match the ContentVersion in the template."
          optional: true
        - id: parameters.properties.mode
          type:
            - string
          description: "The mode that is used to deploy\rresources. This value can be either Incremental or Complete. In Incremental\rmode, resources are deployed without deleting existing resources that are\rnot included in the template. In Complete mode, resources are deployed and\rexisting resources in the resource group that are not included in the\rtemplate are deleted. Be careful when using Complete mode as you may\runintentionally delete resources. Possible values include: 'Incremental',\r'Complete'"
        - id: parameters.properties.debugSetting
          type:
            - object
          description: "The debug setting of\rthe deployment."
          optional: true
        - id: parameters.properties.debugSetting.detailLevel
          type:
            - string
          description: "Specifies\rthe type of information to log for debugging. The permitted values are none,\rrequestContent, responseContent, or both requestContent and responseContent\rseparated by a comma. The default is none. When setting this value,\rcarefully consider the type of information you are passing in during\rdeployment. By logging information about the request or response, you could\rpotentially expose sensitive data that is retrieved through the deployment\roperations."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreateOrUpdate(resourceGroupName, deploymentName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      botbuilder-packages.Deployments#listByResourceGroupNextWithHttpOperationResponse
    id: >-
      botbuilder-packages.Deployments#listByResourceGroupNextWithHttpOperationResponse
    parent: botbuilder-packages.Deployments
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Get all the deployments for a resource group.
    fullName: >-
      botbuilder-packages.Deployments.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeploymentListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeploymentListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'botbuilder-packages.Deployments#listByResourceGroupNext'
    id: 'botbuilder-packages.Deployments#listByResourceGroupNext'
    parent: botbuilder-packages.Deployments
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: Get all the deployments for a resource group.
    fullName: >-
      botbuilder-packages.Deployments.listByResourceGroupNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeploymentListResult} - The deserialized result object.'
        value: '{DeploymentListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeploymentListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
