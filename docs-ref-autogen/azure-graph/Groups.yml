### YamlMime:UniversalReference
items:
  - uid: azure-graph.Groups
    name: Groups
    fullName: Groups
    children:
      - azure-graph.Groups.addMember
      - azure-graph.Groups.addMember_2
      - azure-graph.Groups.addMember_1
      - azure-graph.Groups.addMemberWithHttpOperationResponse
      - azure-graph.Groups.addOwner
      - azure-graph.Groups.addOwner_2
      - azure-graph.Groups.addOwner_1
      - azure-graph.Groups.addOwnerWithHttpOperationResponse
      - azure-graph.Groups.create
      - azure-graph.Groups.create_2
      - azure-graph.Groups.create_1
      - azure-graph.Groups.createWithHttpOperationResponse
      - azure-graph.Groups.deleteMethod
      - azure-graph.Groups.deleteMethod_2
      - azure-graph.Groups.deleteMethod_1
      - azure-graph.Groups.deleteMethodWithHttpOperationResponse
      - azure-graph.Groups.get
      - azure-graph.Groups.get_2
      - azure-graph.Groups.get_1
      - azure-graph.Groups.getGroupMembers
      - azure-graph.Groups.getGroupMembers_2
      - azure-graph.Groups.getGroupMembers_1
      - azure-graph.Groups.getGroupMembersNext
      - azure-graph.Groups.getGroupMembersNext_2
      - azure-graph.Groups.getGroupMembersNext_1
      - azure-graph.Groups.getGroupMembersNextWithHttpOperationResponse
      - azure-graph.Groups.getGroupMembersWithHttpOperationResponse
      - azure-graph.Groups.getMemberGroups
      - azure-graph.Groups.getMemberGroups_2
      - azure-graph.Groups.getMemberGroups_1
      - azure-graph.Groups.getMemberGroupsWithHttpOperationResponse
      - azure-graph.Groups.getWithHttpOperationResponse
      - azure-graph.Groups.isMemberOf
      - azure-graph.Groups.isMemberOf_2
      - azure-graph.Groups.isMemberOf_1
      - azure-graph.Groups.isMemberOfWithHttpOperationResponse
      - azure-graph.Groups.list
      - azure-graph.Groups.list_2
      - azure-graph.Groups.list_1
      - azure-graph.Groups.listNext
      - azure-graph.Groups.listNext_2
      - azure-graph.Groups.listNext_1
      - azure-graph.Groups.listNextWithHttpOperationResponse
      - azure-graph.Groups.listOwners
      - azure-graph.Groups.listOwners_2
      - azure-graph.Groups.listOwners_1
      - azure-graph.Groups.listOwnersNext
      - azure-graph.Groups.listOwnersNext_2
      - azure-graph.Groups.listOwnersNext_1
      - azure-graph.Groups.listOwnersNextWithHttpOperationResponse
      - azure-graph.Groups.listOwnersWithHttpOperationResponse
      - azure-graph.Groups.listWithHttpOperationResponse
      - azure-graph.Groups.removeMember
      - azure-graph.Groups.removeMember_2
      - azure-graph.Groups.removeMember_1
      - azure-graph.Groups.removeMemberWithHttpOperationResponse
      - azure-graph.Groups.removeOwner
      - azure-graph.Groups.removeOwner_2
      - azure-graph.Groups.removeOwner_1
      - azure-graph.Groups.removeOwnerWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-graph
  - uid: azure-graph.Groups.addMember
    name: 'addMember(string, GroupAddMemberParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add a member to a group.
    syntax:
      content: >-
        function addMember(groupObjectId: string, parameters:
        GroupAddMemberParameters, options?: Object)
      parameters:
        - id: groupObjectId
          type:
            - string
          description: |
            The object ID of the group to which to add the
            member.
        - id: parameters
          type:
            - azure-graph.GroupAddMemberParameters
          description: >
            The URL of the member object, such as

            https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.addMember_2
    name: 'addMember(string, GroupAddMemberParameters, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add a member to a group.
    syntax:
      content: >-
        function addMember(groupObjectId: string, parameters:
        GroupAddMemberParameters, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: groupObjectId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-graph.GroupAddMemberParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.addMember_1
    name: 'addMember(string, GroupAddMemberParameters, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add a member to a group.
    syntax:
      content: >-
        function addMember(groupObjectId: string, parameters:
        GroupAddMemberParameters, callback: ServiceCallback<void>)
      parameters:
        - id: groupObjectId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-graph.GroupAddMemberParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.addMemberWithHttpOperationResponse
    name: >-
      addMemberWithHttpOperationResponse(string, GroupAddMemberParameters,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Add a member to a group.
    syntax:
      content: >-
        function addMemberWithHttpOperationResponse(groupObjectId: string,
        parameters: GroupAddMemberParameters, options?: Object)
      parameters:
        - id: groupObjectId
          type:
            - string
          description: |
            The object ID of the group to which to add the
            member.
        - id: parameters
          type:
            - azure-graph.GroupAddMemberParameters
          description: >
            The URL of the member object, such as

            https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-graph
  - uid: azure-graph.Groups.addOwner
    name: 'addOwner(string, AddOwnerParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add an owner to a group.
    syntax:
      content: >-
        function addOwner(objectId: string, parameters: AddOwnerParameters,
        options?: Object)
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the application to which to add
            the owner.
        - id: parameters
          type:
            - azure-graph.AddOwnerParameters
          description: >
            The URL of the owner object, such as

            https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.addOwner_2
    name: 'addOwner(string, AddOwnerParameters, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add an owner to a group.
    syntax:
      content: >-
        function addOwner(objectId: string, parameters: AddOwnerParameters,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-graph.AddOwnerParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.addOwner_1
    name: 'addOwner(string, AddOwnerParameters, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add an owner to a group.
    syntax:
      content: >-
        function addOwner(objectId: string, parameters: AddOwnerParameters,
        callback: ServiceCallback<void>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-graph.AddOwnerParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.addOwnerWithHttpOperationResponse
    name: 'addOwnerWithHttpOperationResponse(string, AddOwnerParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add an owner to a group.
    syntax:
      content: >-
        function addOwnerWithHttpOperationResponse(objectId: string, parameters:
        AddOwnerParameters, options?: Object)
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the application to which to add
            the owner.
        - id: parameters
          type:
            - azure-graph.AddOwnerParameters
          description: >
            The URL of the owner object, such as

            https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-graph
  - uid: azure-graph.Groups.create
    name: 'create(GroupCreateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a group in the directory.
    syntax:
      content: 'function create(parameters: GroupCreateParameters, options?: Object)'
      parameters:
        - id: parameters
          type:
            - azure-graph.GroupCreateParameters
          description: |
            The parameters for the group to create.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-graph.ADGroup>
    package: azure-graph
  - uid: azure-graph.Groups.create_2
    name: 'create(GroupCreateParameters, Object, ServiceCallback<ADGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a group in the directory.
    syntax:
      content: >-
        function create(parameters: GroupCreateParameters, options: Object,
        callback: ServiceCallback<ADGroup>)
      parameters:
        - id: parameters
          type:
            - azure-graph.GroupCreateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.ADGroup>
          description: ''
      return:
        type:
          - Promise<azure-graph.ADGroup>
    package: azure-graph
  - uid: azure-graph.Groups.create_1
    name: 'create(GroupCreateParameters, ServiceCallback<ADGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a group in the directory.
    syntax:
      content: >-
        function create(parameters: GroupCreateParameters, callback:
        ServiceCallback<ADGroup>)
      parameters:
        - id: parameters
          type:
            - azure-graph.GroupCreateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.ADGroup>
          description: ''
      return:
        type:
          - Promise<azure-graph.ADGroup>
    package: azure-graph
  - uid: azure-graph.Groups.createWithHttpOperationResponse
    name: 'createWithHttpOperationResponse(GroupCreateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a group in the directory.
    syntax:
      content: >-
        function createWithHttpOperationResponse(parameters:
        GroupCreateParameters, options?: Object)
      parameters:
        - id: parameters
          type:
            - azure-graph.GroupCreateParameters
          description: |
            The parameters for the group to create.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-graph.ADGroup>>
    package: azure-graph
  - uid: azure-graph.Groups.deleteMethod
    name: 'deleteMethod(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a group from the directory.
    syntax:
      content: 'function deleteMethod(objectId: string, options?: Object)'
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the group to delete.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.deleteMethod_2
    name: 'deleteMethod(string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a group from the directory.
    syntax:
      content: >-
        function deleteMethod(objectId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.deleteMethod_1
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a group from the directory.
    syntax:
      content: 'function deleteMethod(objectId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete a group from the directory.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(objectId: string,
        options?: Object)
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the group to delete.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-graph
  - uid: azure-graph.Groups.get
    name: 'get(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets group information from the directory.
    syntax:
      content: 'function get(objectId: string, options?: Object)'
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the user for which to get group
            information.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-graph.ADGroup>
    package: azure-graph
  - uid: azure-graph.Groups.get_2
    name: 'get(string, Object, ServiceCallback<ADGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets group information from the directory.
    syntax:
      content: >-
        function get(objectId: string, options: Object, callback:
        ServiceCallback<ADGroup>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.ADGroup>
          description: ''
      return:
        type:
          - Promise<azure-graph.ADGroup>
    package: azure-graph
  - uid: azure-graph.Groups.get_1
    name: 'get(string, ServiceCallback<ADGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets group information from the directory.
    syntax:
      content: 'function get(objectId: string, callback: ServiceCallback<ADGroup>)'
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.ADGroup>
          description: ''
      return:
        type:
          - Promise<azure-graph.ADGroup>
    package: azure-graph
  - uid: azure-graph.Groups.getGroupMembers
    name: 'getGroupMembers(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the members of a group.
    syntax:
      content: 'function getGroupMembers(objectId: string, options?: Object)'
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the group whose members should be
            retrieved.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.getGroupMembers_2
    name: >-
      getGroupMembers(string, Object,
      ServiceCallback<DirectoryObjectListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the members of a group.
    syntax:
      content: >-
        function getGroupMembers(objectId: string, options: Object, callback:
        ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.DirectoryObjectListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.getGroupMembers_1
    name: 'getGroupMembers(string, ServiceCallback<DirectoryObjectListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the members of a group.
    syntax:
      content: >-
        function getGroupMembers(objectId: string, callback:
        ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.DirectoryObjectListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.getGroupMembersNext
    name: 'getGroupMembersNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the members of a group.
    syntax:
      content: 'function getGroupMembersNext(nextLink: string, options?: Object)'
      parameters:
        - id: nextLink
          type:
            - string
          description: |
            Next link for the list operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.getGroupMembersNext_2
    name: >-
      getGroupMembersNext(string, Object,
      ServiceCallback<DirectoryObjectListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the members of a group.
    syntax:
      content: >-
        function getGroupMembersNext(nextLink: string, options: Object,
        callback: ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: nextLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.DirectoryObjectListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.getGroupMembersNext_1
    name: 'getGroupMembersNext(string, ServiceCallback<DirectoryObjectListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the members of a group.
    syntax:
      content: >-
        function getGroupMembersNext(nextLink: string, callback:
        ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: nextLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.DirectoryObjectListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.getGroupMembersNextWithHttpOperationResponse
    name: 'getGroupMembersNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the members of a group.
    syntax:
      content: >-
        function getGroupMembersNextWithHttpOperationResponse(nextLink: string,
        options?: Object)
      parameters:
        - id: nextLink
          type:
            - string
          description: |
            Next link for the list operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-graph.DirectoryObjectListResult>>
    package: azure-graph
  - uid: azure-graph.Groups.getGroupMembersWithHttpOperationResponse
    name: 'getGroupMembersWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the members of a group.
    syntax:
      content: >-
        function getGroupMembersWithHttpOperationResponse(objectId: string,
        options?: Object)
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the group whose members should be
            retrieved.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-graph.DirectoryObjectListResult>>
    package: azure-graph
  - uid: azure-graph.Groups.getMemberGroups
    name: 'getMemberGroups(string, GroupGetMemberGroupsParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a collection of object IDs of groups of which the specified group is
      a

      member.
    syntax:
      content: >-
        function getMemberGroups(objectId: string, parameters:
        GroupGetMemberGroupsParameters, options?: Object)
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the group for which to get group
            membership.
        - id: parameters
          type:
            - azure-graph.GroupGetMemberGroupsParameters
          description: |
            Group filtering parameters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-graph.GroupGetMemberGroupsResult>
    package: azure-graph
  - uid: azure-graph.Groups.getMemberGroups_2
    name: >-
      getMemberGroups(string, GroupGetMemberGroupsParameters, Object,
      ServiceCallback<GroupGetMemberGroupsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a collection of object IDs of groups of which the specified group is
      a

      member.
    syntax:
      content: >-
        function getMemberGroups(objectId: string, parameters:
        GroupGetMemberGroupsParameters, options: Object, callback:
        ServiceCallback<GroupGetMemberGroupsResult>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-graph.GroupGetMemberGroupsParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.GroupGetMemberGroupsResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.GroupGetMemberGroupsResult>
    package: azure-graph
  - uid: azure-graph.Groups.getMemberGroups_1
    name: >-
      getMemberGroups(string, GroupGetMemberGroupsParameters,
      ServiceCallback<GroupGetMemberGroupsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a collection of object IDs of groups of which the specified group is
      a

      member.
    syntax:
      content: >-
        function getMemberGroups(objectId: string, parameters:
        GroupGetMemberGroupsParameters, callback:
        ServiceCallback<GroupGetMemberGroupsResult>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-graph.GroupGetMemberGroupsParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.GroupGetMemberGroupsResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.GroupGetMemberGroupsResult>
    package: azure-graph
  - uid: azure-graph.Groups.getMemberGroupsWithHttpOperationResponse
    name: >-
      getMemberGroupsWithHttpOperationResponse(string,
      GroupGetMemberGroupsParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a collection of object IDs of groups of which the specified group is
      a

      member.
    syntax:
      content: >-
        function getMemberGroupsWithHttpOperationResponse(objectId: string,
        parameters: GroupGetMemberGroupsParameters, options?: Object)
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the group for which to get group
            membership.
        - id: parameters
          type:
            - azure-graph.GroupGetMemberGroupsParameters
          description: |
            Group filtering parameters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-graph.GroupGetMemberGroupsResult>>
    package: azure-graph
  - uid: azure-graph.Groups.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets group information from the directory.
    syntax:
      content: >-
        function getWithHttpOperationResponse(objectId: string, options?:
        Object)
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the user for which to get group
            information.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-graph.ADGroup>>
    package: azure-graph
  - uid: azure-graph.Groups.isMemberOf
    name: 'isMemberOf(CheckGroupMembershipParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks whether the specified user, group, contact, or service principal is
      a

      direct or transitive member of the specified group.
    syntax:
      content: >-
        function isMemberOf(parameters: CheckGroupMembershipParameters,
        options?: Object)
      parameters:
        - id: parameters
          type:
            - azure-graph.CheckGroupMembershipParameters
          description: |
            The check group membership parameters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-graph.CheckGroupMembershipResult>
    package: azure-graph
  - uid: azure-graph.Groups.isMemberOf_2
    name: >-
      isMemberOf(CheckGroupMembershipParameters, Object,
      ServiceCallback<CheckGroupMembershipResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks whether the specified user, group, contact, or service principal is
      a

      direct or transitive member of the specified group.
    syntax:
      content: >-
        function isMemberOf(parameters: CheckGroupMembershipParameters, options:
        Object, callback: ServiceCallback<CheckGroupMembershipResult>)
      parameters:
        - id: parameters
          type:
            - azure-graph.CheckGroupMembershipParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.CheckGroupMembershipResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.CheckGroupMembershipResult>
    package: azure-graph
  - uid: azure-graph.Groups.isMemberOf_1
    name: >-
      isMemberOf(CheckGroupMembershipParameters,
      ServiceCallback<CheckGroupMembershipResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks whether the specified user, group, contact, or service principal is
      a

      direct or transitive member of the specified group.
    syntax:
      content: >-
        function isMemberOf(parameters: CheckGroupMembershipParameters,
        callback: ServiceCallback<CheckGroupMembershipResult>)
      parameters:
        - id: parameters
          type:
            - azure-graph.CheckGroupMembershipParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.CheckGroupMembershipResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.CheckGroupMembershipResult>
    package: azure-graph
  - uid: azure-graph.Groups.isMemberOfWithHttpOperationResponse
    name: >-
      isMemberOfWithHttpOperationResponse(CheckGroupMembershipParameters,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks whether the specified user, group, contact, or service principal is
      a

      direct or transitive member of the specified group.
    syntax:
      content: >-
        function isMemberOfWithHttpOperationResponse(parameters:
        CheckGroupMembershipParameters, options?: Object)
      parameters:
        - id: parameters
          type:
            - azure-graph.CheckGroupMembershipParameters
          description: |
            The check group membership parameters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-graph.CheckGroupMembershipResult>>
    package: azure-graph
  - uid: azure-graph.Groups.list
    name: list(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of groups for the current tenant.
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-graph.GroupListResult>
    package: azure-graph
  - uid: azure-graph.Groups.list_2
    name: 'list(Object, ServiceCallback<GroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of groups for the current tenant.
    syntax:
      content: >-
        function list(options: Object, callback:
        ServiceCallback<GroupListResult>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.GroupListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.GroupListResult>
    package: azure-graph
  - uid: azure-graph.Groups.list_1
    name: list(ServiceCallback<GroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of groups for the current tenant.
    syntax:
      content: 'function list(callback: ServiceCallback<GroupListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-graph.GroupListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.GroupListResult>
    package: azure-graph
  - uid: azure-graph.Groups.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of groups for the current tenant.
    syntax:
      content: 'function listNext(nextLink: string, options?: Object)'
      parameters:
        - id: nextLink
          type:
            - string
          description: |
            Next link for the list operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-graph.GroupListResult>
    package: azure-graph
  - uid: azure-graph.Groups.listNext_2
    name: 'listNext(string, Object, ServiceCallback<GroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of groups for the current tenant.
    syntax:
      content: >-
        function listNext(nextLink: string, options: Object, callback:
        ServiceCallback<GroupListResult>)
      parameters:
        - id: nextLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.GroupListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.GroupListResult>
    package: azure-graph
  - uid: azure-graph.Groups.listNext_1
    name: 'listNext(string, ServiceCallback<GroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of groups for the current tenant.
    syntax:
      content: >-
        function listNext(nextLink: string, callback:
        ServiceCallback<GroupListResult>)
      parameters:
        - id: nextLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.GroupListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.GroupListResult>
    package: azure-graph
  - uid: azure-graph.Groups.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of groups for the current tenant.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextLink: string, options?:
        Object)
      parameters:
        - id: nextLink
          type:
            - string
          description: |
            Next link for the list operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-graph.GroupListResult>>
    package: azure-graph
  - uid: azure-graph.Groups.listOwners
    name: 'listOwners(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOwners(objectId: string, options?: Object)'
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the group for which to get owners.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.listOwners_2
    name: 'listOwners(string, Object, ServiceCallback<DirectoryObjectListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listOwners(objectId: string, options: Object, callback:
        ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.DirectoryObjectListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.listOwners_1
    name: 'listOwners(string, ServiceCallback<DirectoryObjectListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listOwners(objectId: string, callback:
        ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.DirectoryObjectListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.listOwnersNext
    name: 'listOwnersNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOwnersNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.listOwnersNext_2
    name: 'listOwnersNext(string, Object, ServiceCallback<DirectoryObjectListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listOwnersNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.DirectoryObjectListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.listOwnersNext_1
    name: 'listOwnersNext(string, ServiceCallback<DirectoryObjectListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listOwnersNext(nextPageLink: string, callback:
        ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-graph.DirectoryObjectListResult>
          description: ''
      return:
        type:
          - Promise<azure-graph.DirectoryObjectListResult>
    package: azure-graph
  - uid: azure-graph.Groups.listOwnersNextWithHttpOperationResponse
    name: 'listOwnersNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listOwnersNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-graph.DirectoryObjectListResult>>
    package: azure-graph
  - uid: azure-graph.Groups.listOwnersWithHttpOperationResponse
    name: 'listOwnersWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listOwnersWithHttpOperationResponse(objectId: string, options?:
        Object)
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the group for which to get owners.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-graph.DirectoryObjectListResult>>
    package: azure-graph
  - uid: azure-graph.Groups.listWithHttpOperationResponse
    name: listWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of groups for the current tenant.
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-graph.GroupListResult>>
    package: azure-graph
  - uid: azure-graph.Groups.removeMember
    name: 'removeMember(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a member from a group.
    syntax:
      content: >-
        function removeMember(groupObjectId: string, memberObjectId: string,
        options?: Object)
      parameters:
        - id: groupObjectId
          type:
            - string
          description: |
            The object ID of the group from which to
            remove the member.
        - id: memberObjectId
          type:
            - string
          description: |
            Member object id
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.removeMember_2
    name: 'removeMember(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a member from a group.
    syntax:
      content: >-
        function removeMember(groupObjectId: string, memberObjectId: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: groupObjectId
          type:
            - string
          description: ''
        - id: memberObjectId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.removeMember_1
    name: 'removeMember(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a member from a group.
    syntax:
      content: >-
        function removeMember(groupObjectId: string, memberObjectId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: groupObjectId
          type:
            - string
          description: ''
        - id: memberObjectId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.removeMemberWithHttpOperationResponse
    name: 'removeMemberWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a member from a group.
    syntax:
      content: >-
        function removeMemberWithHttpOperationResponse(groupObjectId: string,
        memberObjectId: string, options?: Object)
      parameters:
        - id: groupObjectId
          type:
            - string
          description: |
            The object ID of the group from which to
            remove the member.
        - id: memberObjectId
          type:
            - string
          description: |
            Member object id
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-graph
  - uid: azure-graph.Groups.removeOwner
    name: 'removeOwner(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a member from owners.
    syntax:
      content: >-
        function removeOwner(objectId: string, ownerObjectId: string, options?:
        Object)
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the group from which to remove the
            owner.
        - id: ownerObjectId
          type:
            - string
          description: |
            Owner object id
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.removeOwner_2
    name: 'removeOwner(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a member from owners.
    syntax:
      content: >-
        function removeOwner(objectId: string, ownerObjectId: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: ownerObjectId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.removeOwner_1
    name: 'removeOwner(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a member from owners.
    syntax:
      content: >-
        function removeOwner(objectId: string, ownerObjectId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: objectId
          type:
            - string
          description: ''
        - id: ownerObjectId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-graph
  - uid: azure-graph.Groups.removeOwnerWithHttpOperationResponse
    name: 'removeOwnerWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove a member from owners.
    syntax:
      content: >-
        function removeOwnerWithHttpOperationResponse(objectId: string,
        ownerObjectId: string, options?: Object)
      parameters:
        - id: objectId
          type:
            - string
          description: |
            The object ID of the group from which to remove the
            owner.
        - id: ownerObjectId
          type:
            - string
          description: |
            Owner object id
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-graph
references:
  - uid: azure-graph.GroupAddMemberParameters
    name: GroupAddMemberParameters
    spec.typeScript:
      - name: GroupAddMemberParameters
        fullName: GroupAddMemberParameters
        uid: azure-graph.GroupAddMemberParameters
  - uid: azure-graph.AddOwnerParameters
    name: AddOwnerParameters
    spec.typeScript:
      - name: AddOwnerParameters
        fullName: AddOwnerParameters
        uid: azure-graph.AddOwnerParameters
  - uid: azure-graph.GroupCreateParameters
    name: GroupCreateParameters
    spec.typeScript:
      - name: GroupCreateParameters
        fullName: GroupCreateParameters
        uid: azure-graph.GroupCreateParameters
  - uid: Promise<azure-graph.ADGroup>
    name: ADGroup>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ADGroup
        fullName: ADGroup
        uid: azure-graph.ADGroup
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-graph.ADGroup>
    name: ADGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ADGroup
        fullName: ADGroup
        uid: azure-graph.ADGroup
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-graph.ADGroup>>
    name: ADGroup>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ADGroup
        fullName: ADGroup
        uid: azure-graph.ADGroup
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-graph.DirectoryObjectListResult>
    name: DirectoryObjectListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DirectoryObjectListResult
        fullName: DirectoryObjectListResult
        uid: azure-graph.DirectoryObjectListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-graph.DirectoryObjectListResult>
    name: DirectoryObjectListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DirectoryObjectListResult
        fullName: DirectoryObjectListResult
        uid: azure-graph.DirectoryObjectListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-graph.DirectoryObjectListResult>>
    name: DirectoryObjectListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DirectoryObjectListResult
        fullName: DirectoryObjectListResult
        uid: azure-graph.DirectoryObjectListResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-graph.GroupGetMemberGroupsParameters
    name: GroupGetMemberGroupsParameters
    spec.typeScript:
      - name: GroupGetMemberGroupsParameters
        fullName: GroupGetMemberGroupsParameters
        uid: azure-graph.GroupGetMemberGroupsParameters
  - uid: Promise<azure-graph.GroupGetMemberGroupsResult>
    name: GroupGetMemberGroupsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GroupGetMemberGroupsResult
        fullName: GroupGetMemberGroupsResult
        uid: azure-graph.GroupGetMemberGroupsResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-graph.GroupGetMemberGroupsResult>
    name: GroupGetMemberGroupsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GroupGetMemberGroupsResult
        fullName: GroupGetMemberGroupsResult
        uid: azure-graph.GroupGetMemberGroupsResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-graph.GroupGetMemberGroupsResult>>
    name: GroupGetMemberGroupsResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: GroupGetMemberGroupsResult
        fullName: GroupGetMemberGroupsResult
        uid: azure-graph.GroupGetMemberGroupsResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-graph.CheckGroupMembershipParameters
    name: CheckGroupMembershipParameters
    spec.typeScript:
      - name: CheckGroupMembershipParameters
        fullName: CheckGroupMembershipParameters
        uid: azure-graph.CheckGroupMembershipParameters
  - uid: Promise<azure-graph.CheckGroupMembershipResult>
    name: CheckGroupMembershipResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CheckGroupMembershipResult
        fullName: CheckGroupMembershipResult
        uid: azure-graph.CheckGroupMembershipResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-graph.CheckGroupMembershipResult>
    name: CheckGroupMembershipResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckGroupMembershipResult
        fullName: CheckGroupMembershipResult
        uid: azure-graph.CheckGroupMembershipResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-graph.CheckGroupMembershipResult>>
    name: CheckGroupMembershipResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CheckGroupMembershipResult
        fullName: CheckGroupMembershipResult
        uid: azure-graph.CheckGroupMembershipResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-graph.GroupListResult>
    name: GroupListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GroupListResult
        fullName: GroupListResult
        uid: azure-graph.GroupListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-graph.GroupListResult>
    name: GroupListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GroupListResult
        fullName: GroupListResult
        uid: azure-graph.GroupListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-graph.GroupListResult>>
    name: GroupListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: GroupListResult
        fullName: GroupListResult
        uid: azure-graph.GroupListResult
      - name: '>>'
        fullName: '>>'
