### YamlMime:UniversalReference
items:
  - uid: azure-arm-authorization.RoleDefinition
    name: RoleDefinition
    fullName: RoleDefinition
    children:
      - azure-arm-authorization.RoleDefinition.assignableScopes
      - azure-arm-authorization.RoleDefinition.description
      - azure-arm-authorization.RoleDefinition.id
      - azure-arm-authorization.RoleDefinition.name
      - azure-arm-authorization.RoleDefinition.permissions
      - azure-arm-authorization.RoleDefinition.roleName
      - azure-arm-authorization.RoleDefinition.roleType
      - azure-arm-authorization.RoleDefinition.type
    langs:
      - typeScript
    type: interface
    summary: Role definition.
    package: azure-arm-authorization
  - uid: azure-arm-authorization.RoleDefinition.assignableScopes
    name: assignableScopes
    fullName: assignableScopes
    children: []
    langs:
      - typeScript
    type: property
    summary: Role definition assignable scopes.
    optional: true
    syntax:
      content: 'assignableScopes?: string[]'
      return:
        type:
          - 'string[]'
    package: azure-arm-authorization
  - uid: azure-arm-authorization.RoleDefinition.description
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: The role definition description.
    optional: true
    syntax:
      content: 'description?: string'
      return:
        type:
          - string
    package: azure-arm-authorization
  - uid: azure-arm-authorization.RoleDefinition.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: The role definition ID.
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: azure-arm-authorization
  - uid: azure-arm-authorization.RoleDefinition.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: The role definition name.
    optional: true
    syntax:
      content: 'name?: string'
      return:
        type:
          - string
    package: azure-arm-authorization
  - uid: azure-arm-authorization.RoleDefinition.permissions
    name: permissions
    fullName: permissions
    children: []
    langs:
      - typeScript
    type: property
    summary: Role definition permissions.
    optional: true
    syntax:
      content: 'permissions?: Permission[]'
      return:
        type:
          - 'azure-arm-authorization.Permission[]'
    package: azure-arm-authorization
  - uid: azure-arm-authorization.RoleDefinition.roleName
    name: roleName
    fullName: roleName
    children: []
    langs:
      - typeScript
    type: property
    summary: The role name.
    optional: true
    syntax:
      content: 'roleName?: string'
      return:
        type:
          - string
    package: azure-arm-authorization
  - uid: azure-arm-authorization.RoleDefinition.roleType
    name: roleType
    fullName: roleType
    children: []
    langs:
      - typeScript
    type: property
    summary: The role type.
    optional: true
    syntax:
      content: 'roleType?: string'
      return:
        type:
          - string
    package: azure-arm-authorization
  - uid: azure-arm-authorization.RoleDefinition.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: The role definition type.
    optional: true
    syntax:
      content: 'type?: string'
      return:
        type:
          - string
    package: azure-arm-authorization
references:
  - uid: 'azure-arm-authorization.Permission[]'
    name: 'Permission[]'
    spec.typeScript:
      - name: Permission
        fullName: Permission
        uid: azure-arm-authorization.Permission
      - name: '[]'
        fullName: '[]'
