### YamlMime:UniversalReference
items:
  - uid: azure-arm-resource.PolicyAssignments
    name: PolicyAssignments
    fullName: PolicyAssignments
    children:
      - azure-arm-resource.PolicyAssignments.create
      - azure-arm-resource.PolicyAssignments.create_2
      - azure-arm-resource.PolicyAssignments.create_1
      - azure-arm-resource.PolicyAssignments.createById
      - azure-arm-resource.PolicyAssignments.createById_2
      - azure-arm-resource.PolicyAssignments.createById_1
      - azure-arm-resource.PolicyAssignments.createByIdWithHttpOperationResponse
      - azure-arm-resource.PolicyAssignments.createWithHttpOperationResponse
      - azure-arm-resource.PolicyAssignments.deleteById
      - azure-arm-resource.PolicyAssignments.deleteById_2
      - azure-arm-resource.PolicyAssignments.deleteById_1
      - azure-arm-resource.PolicyAssignments.deleteByIdWithHttpOperationResponse
      - azure-arm-resource.PolicyAssignments.deleteMethod
      - azure-arm-resource.PolicyAssignments.deleteMethod_2
      - azure-arm-resource.PolicyAssignments.deleteMethod_1
      - >-
        azure-arm-resource.PolicyAssignments.deleteMethodWithHttpOperationResponse
      - azure-arm-resource.PolicyAssignments.get
      - azure-arm-resource.PolicyAssignments.get_2
      - azure-arm-resource.PolicyAssignments.get_1
      - azure-arm-resource.PolicyAssignments.getById
      - azure-arm-resource.PolicyAssignments.getById_2
      - azure-arm-resource.PolicyAssignments.getById_1
      - azure-arm-resource.PolicyAssignments.getByIdWithHttpOperationResponse
      - azure-arm-resource.PolicyAssignments.getWithHttpOperationResponse
      - azure-arm-resource.PolicyAssignments.list
      - azure-arm-resource.PolicyAssignments.list_2
      - azure-arm-resource.PolicyAssignments.list_1
      - azure-arm-resource.PolicyAssignments.listForResource
      - azure-arm-resource.PolicyAssignments.listForResource_2
      - azure-arm-resource.PolicyAssignments.listForResource_1
      - azure-arm-resource.PolicyAssignments.listForResourceGroup
      - azure-arm-resource.PolicyAssignments.listForResourceGroup_2
      - azure-arm-resource.PolicyAssignments.listForResourceGroup_1
      - azure-arm-resource.PolicyAssignments.listForResourceGroupNext
      - azure-arm-resource.PolicyAssignments.listForResourceGroupNext_2
      - azure-arm-resource.PolicyAssignments.listForResourceGroupNext_1
      - >-
        azure-arm-resource.PolicyAssignments.listForResourceGroupNextWithHttpOperationResponse
      - >-
        azure-arm-resource.PolicyAssignments.listForResourceGroupWithHttpOperationResponse
      - azure-arm-resource.PolicyAssignments.listForResourceNext
      - azure-arm-resource.PolicyAssignments.listForResourceNext_2
      - azure-arm-resource.PolicyAssignments.listForResourceNext_1
      - >-
        azure-arm-resource.PolicyAssignments.listForResourceNextWithHttpOperationResponse
      - >-
        azure-arm-resource.PolicyAssignments.listForResourceWithHttpOperationResponse
      - azure-arm-resource.PolicyAssignments.listNext
      - azure-arm-resource.PolicyAssignments.listNext_2
      - azure-arm-resource.PolicyAssignments.listNext_1
      - azure-arm-resource.PolicyAssignments.listNextWithHttpOperationResponse
      - azure-arm-resource.PolicyAssignments.listWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.create
    name: 'create(string, string, PolicyAssignment, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(scope: string, policyAssignmentName: string, parameters:
        PolicyAssignment, options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the policy assignment. Valid scopes are:

            management group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),

            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group

            (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or

            resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyAssignmentName
          type:
            - string
          description: |
            The name of the policy assignment.
        - id: parameters
          type:
            - azure-arm-resource.PolicyAssignment
          description: |
            Parameters for the policy assignment.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.create_2
    name: >-
      create(string, string, PolicyAssignment, Object,
      ServiceCallback<PolicyAssignment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(scope: string, policyAssignmentName: string, parameters:
        PolicyAssignment, options: Object, callback:
        ServiceCallback<PolicyAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: policyAssignmentName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-resource.PolicyAssignment
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.create_1
    name: >-
      create(string, string, PolicyAssignment,
      ServiceCallback<PolicyAssignment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(scope: string, policyAssignmentName: string, parameters:
        PolicyAssignment, callback: ServiceCallback<PolicyAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: policyAssignmentName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-resource.PolicyAssignment
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.createById
    name: 'createById(string, PolicyAssignment, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createById(policyAssignmentId: string, parameters:
        PolicyAssignment, options?: Object)
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: >
            The ID of the policy assignment to

            create. Use the format

            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
        - id: parameters
          type:
            - azure-arm-resource.PolicyAssignment
          description: |
            Parameters for policy assignment.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.createById_2
    name: >-
      createById(string, PolicyAssignment, Object,
      ServiceCallback<PolicyAssignment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createById(policyAssignmentId: string, parameters:
        PolicyAssignment, options: Object, callback:
        ServiceCallback<PolicyAssignment>)
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-resource.PolicyAssignment
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.createById_1
    name: 'createById(string, PolicyAssignment, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createById(policyAssignmentId: string, parameters:
        PolicyAssignment, callback: ServiceCallback<PolicyAssignment>)
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-resource.PolicyAssignment
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.createByIdWithHttpOperationResponse
    name: 'createByIdWithHttpOperationResponse(string, PolicyAssignment, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createByIdWithHttpOperationResponse(policyAssignmentId: string,
        parameters: PolicyAssignment, options?: Object)
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: >
            The ID of the policy assignment to

            create. Use the format

            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
        - id: parameters
          type:
            - azure-arm-resource.PolicyAssignment
          description: |
            Parameters for policy assignment.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignment>>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.createWithHttpOperationResponse
    name: 'createWithHttpOperationResponse(string, string, PolicyAssignment, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createWithHttpOperationResponse(scope: string,
        policyAssignmentName: string, parameters: PolicyAssignment, options?:
        Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the policy assignment. Valid scopes are:

            management group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),

            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group

            (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or

            resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyAssignmentName
          type:
            - string
          description: |
            The name of the policy assignment.
        - id: parameters
          type:
            - azure-arm-resource.PolicyAssignment
          description: |
            Parameters for the policy assignment.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignment>>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.deleteById
    name: 'deleteById(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteById(policyAssignmentId: string, options?: Object)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: >
            The ID of the policy assignment to

            delete. Use the format

            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.deleteById_2
    name: 'deleteById(string, Object, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteById(policyAssignmentId: string, options: Object,
        callback: ServiceCallback<PolicyAssignment>)
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.deleteById_1
    name: 'deleteById(string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteById(policyAssignmentId: string, callback:
        ServiceCallback<PolicyAssignment>)
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.deleteByIdWithHttpOperationResponse
    name: 'deleteByIdWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteByIdWithHttpOperationResponse(policyAssignmentId: string,
        options?: Object)
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: >
            The ID of the policy assignment to

            delete. Use the format

            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignment>>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(scope: string, policyAssignmentName: string,
        options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the policy assignment. Valid scopes are:

            management group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),

            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group

            (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or

            resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyAssignmentName
          type:
            - string
          description: |
            The name of the policy assignment to
            delete.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(scope: string, policyAssignmentName: string,
        options: Object, callback: ServiceCallback<PolicyAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: policyAssignmentName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(scope: string, policyAssignmentName: string,
        callback: ServiceCallback<PolicyAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: policyAssignmentName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(scope: string,
        policyAssignmentName: string, options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the policy assignment. Valid scopes are:

            management group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),

            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group

            (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or

            resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyAssignmentName
          type:
            - string
          description: |
            The name of the policy assignment to
            delete.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignment>>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, policyAssignmentName: string, options?:
        Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the policy assignment. Valid scopes are:

            management group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),

            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group

            (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or

            resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyAssignmentName
          type:
            - string
          description: |
            The name of the policy assignment to
            get.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.get_2
    name: 'get(string, string, Object, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, policyAssignmentName: string, options:
        Object, callback: ServiceCallback<PolicyAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: policyAssignmentName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.get_1
    name: 'get(string, string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(scope: string, policyAssignmentName: string, callback:
        ServiceCallback<PolicyAssignment>)
      parameters:
        - id: scope
          type:
            - string
          description: ''
        - id: policyAssignmentName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.getById
    name: 'getById(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getById(policyAssignmentId: string, options?: Object)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: >
            The ID of the policy assignment to get.

            Use the format

            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.getById_2
    name: 'getById(string, Object, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getById(policyAssignmentId: string, options: Object, callback:
        ServiceCallback<PolicyAssignment>)
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.getById_1
    name: 'getById(string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getById(policyAssignmentId: string, callback:
        ServiceCallback<PolicyAssignment>)
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignment>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignment>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.getByIdWithHttpOperationResponse
    name: 'getByIdWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getByIdWithHttpOperationResponse(policyAssignmentId: string,
        options?: Object)
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: >
            The ID of the policy assignment to get.

            Use the format

            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignment>>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWithHttpOperationResponse(scope: string,
        policyAssignmentName: string, options?: Object)
      parameters:
        - id: scope
          type:
            - string
          description: >
            The scope of the policy assignment. Valid scopes are:

            management group (format:

            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),

            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group

            (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or

            resource (format:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        - id: policyAssignmentName
          type:
            - string
          description: |
            The name of the policy assignment to
            get.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignment>>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.list
    name: list(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.list_2
    name: 'list(Object, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: Object, callback:
        ServiceCallback<PolicyAssignmentListResult>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.list_1
    name: list(ServiceCallback<PolicyAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResource
    name: 'listForResource(string, string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group containing
            the resource.
        - id: resourceProviderNamespace
          type:
            - string
          description: |
            The namespace of the resource
            provider. For example, the namespace of a virtual machine is
            Microsoft.Compute (from Microsoft.Compute/virtualMachines)
        - id: parentResourcePath
          type:
            - string
          description: |
            The parent resource path. Use empty
            string if there is none.
        - id: resourceType
          type:
            - string
          description: |
            The resource type name. For example the type
            name of a web app is 'sites' (from Microsoft.Web/sites).
        - id: resourceName
          type:
            - string
          description: |
            The name of the resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResource_2
    name: >-
      listForResource(string, string, string, string, string, Object,
      ServiceCallback<PolicyAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options: Object, callback:
        ServiceCallback<PolicyAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: resourceProviderNamespace
          type:
            - string
          description: ''
        - id: parentResourcePath
          type:
            - string
          description: ''
        - id: resourceType
          type:
            - string
          description: ''
        - id: resourceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResource_1
    name: >-
      listForResource(string, string, string, string, string,
      ServiceCallback<PolicyAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, callback:
        ServiceCallback<PolicyAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: resourceProviderNamespace
          type:
            - string
          description: ''
        - id: parentResourcePath
          type:
            - string
          description: ''
        - id: resourceType
          type:
            - string
          description: ''
        - id: resourceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResourceGroup
    name: 'listForResourceGroup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group that
            contains policy assignments.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResourceGroup_2
    name: >-
      listForResourceGroup(string, Object,
      ServiceCallback<PolicyAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, options:
        Object, callback: ServiceCallback<PolicyAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResourceGroup_1
    name: 'listForResourceGroup(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<PolicyAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResourceGroupNext
    name: 'listForResourceGroupNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResourceGroupNext_2
    name: >-
      listForResourceGroupNext(string, Object,
      ServiceCallback<PolicyAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<PolicyAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResourceGroupNext_1
    name: >-
      listForResourceGroupNext(string,
      ServiceCallback<PolicyAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<PolicyAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: >-
      azure-arm-resource.PolicyAssignments.listForResourceGroupNextWithHttpOperationResponse
    name: 'listForResourceGroupNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignmentListResult>>
    package: azure-arm-resource
  - uid: >-
      azure-arm-resource.PolicyAssignments.listForResourceGroupWithHttpOperationResponse
    name: 'listForResourceGroupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        listForResourceGroupWithHttpOperationResponse(resourceGroupName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group that
            contains policy assignments.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignmentListResult>>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResourceNext
    name: 'listForResourceNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResourceNext_2
    name: >-
      listForResourceNext(string, Object,
      ServiceCallback<PolicyAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<PolicyAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listForResourceNext_1
    name: 'listForResourceNext(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, callback:
        ServiceCallback<PolicyAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: >-
      azure-arm-resource.PolicyAssignments.listForResourceNextWithHttpOperationResponse
    name: 'listForResourceNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignmentListResult>>
    package: azure-arm-resource
  - uid: >-
      azure-arm-resource.PolicyAssignments.listForResourceWithHttpOperationResponse
    name: >-
      listForResourceWithHttpOperationResponse(string, string, string, string,
      string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listForResourceWithHttpOperationResponse(resourceGroupName:
        string, resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group containing
            the resource.
        - id: resourceProviderNamespace
          type:
            - string
          description: |
            The namespace of the resource
            provider. For example, the namespace of a virtual machine is
            Microsoft.Compute (from Microsoft.Compute/virtualMachines)
        - id: parentResourcePath
          type:
            - string
          description: |
            The parent resource path. Use empty
            string if there is none.
        - id: resourceType
          type:
            - string
          description: |
            The resource type name. For example the type
            name of a web app is 'sites' (from Microsoft.Web/sites).
        - id: resourceName
          type:
            - string
          description: |
            The name of the resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignmentListResult>>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listNext_2
    name: 'listNext(string, Object, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<PolicyAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listNext_1
    name: 'listNext(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<PolicyAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-resource.PolicyAssignmentListResult>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignmentListResult>>
    package: azure-arm-resource
  - uid: azure-arm-resource.PolicyAssignments.listWithHttpOperationResponse
    name: listWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignmentListResult>>
    package: azure-arm-resource
references:
  - uid: azure-arm-resource.PolicyAssignment
    name: PolicyAssignment
    spec.typeScript:
      - name: PolicyAssignment
        fullName: PolicyAssignment
        uid: azure-arm-resource.PolicyAssignment
  - uid: Promise<azure-arm-resource.PolicyAssignment>
    name: PolicyAssignment>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PolicyAssignment
        fullName: PolicyAssignment
        uid: azure-arm-resource.PolicyAssignment
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-resource.PolicyAssignment>
    name: PolicyAssignment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PolicyAssignment
        fullName: PolicyAssignment
        uid: azure-arm-resource.PolicyAssignment
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignment>>
    name: PolicyAssignment>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PolicyAssignment
        fullName: PolicyAssignment
        uid: azure-arm-resource.PolicyAssignment
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-resource.PolicyAssignmentListResult>
    name: PolicyAssignmentListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PolicyAssignmentListResult
        fullName: PolicyAssignmentListResult
        uid: azure-arm-resource.PolicyAssignmentListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-resource.PolicyAssignmentListResult>
    name: PolicyAssignmentListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PolicyAssignmentListResult
        fullName: PolicyAssignmentListResult
        uid: azure-arm-resource.PolicyAssignmentListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-resource.PolicyAssignmentListResult>>
    name: PolicyAssignmentListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PolicyAssignmentListResult
        fullName: PolicyAssignmentListResult
        uid: azure-arm-resource.PolicyAssignmentListResult
      - name: '>>'
        fullName: '>>'
