### YamlMime:UniversalReference
items:
  - uid: durable-functions.Task
    name: Task
    fullName: Task
    children:
      - durable-functions.Task.exception
      - durable-functions.Task.isCompleted
      - durable-functions.Task.isFaulted
      - durable-functions.Task.result
    langs:
      - typeScript
    type: class
    summary: |
      Represents some pending action. Similar to a native JavaScript promise in
      that it acts as a placeholder for outstanding asynchronous work, but has
      a synchronous implementation and is specific to Durable Functions.
      Tasks are only returned to an orchestration function when a
      [[DurableOrchestrationContext]] operation is not called with `yield`. They
      are useful for parallelization and timeout operations in conjunction with
      Task.all and Task.any.

      We discourage the usage of `instanceof`-style guards on this type,
      as it is subject to change in the future.
    package: durable-functions
  - uid: durable-functions.Task.exception
    name: exception
    fullName: exception
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The error thrown when attempting to perform the task's action. If
      the Task has not yet completed or has completed successfully,
      `undefined`.
    optional: true
    syntax:
      content: 'exception?: Error | undefined'
      return:
        type:
          - Error | undefined
        description: ''
    package: durable-functions
  - uid: durable-functions.Task.isCompleted
    name: isCompleted
    fullName: isCompleted
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Whether the task has completed. Note that completion is not
      equivalent to success.
    syntax:
      content: 'isCompleted: boolean'
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.Task.isFaulted
    name: isFaulted
    fullName: isFaulted
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the task faulted in some way due to error.
    syntax:
      content: 'isFaulted: boolean'
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.Task.result
    name: result
    fullName: result
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The result of the task, if completed. Otherwise `undefined`.'
    optional: true
    syntax:
      content: 'result?: unknown'
      return:
        type:
          - unknown
        description: ''
    package: durable-functions
