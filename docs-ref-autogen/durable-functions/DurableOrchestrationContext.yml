### YamlMime:UniversalReference
items:
  - uid: durable-functions.DurableOrchestrationContext
    name: DurableOrchestrationContext
    fullName: DurableOrchestrationContext
    children:
      - durable-functions.DurableOrchestrationContext.callActivity
      - durable-functions.DurableOrchestrationContext.callActivityWithRetry
      - durable-functions.DurableOrchestrationContext.callEntity
      - durable-functions.DurableOrchestrationContext.callHttp
      - durable-functions.DurableOrchestrationContext.callSubOrchestrator
      - >-
        durable-functions.DurableOrchestrationContext.callSubOrchestratorWithRetry
      - durable-functions.DurableOrchestrationContext.continueAsNew
      - durable-functions.DurableOrchestrationContext.createTimer
      - durable-functions.DurableOrchestrationContext.currentUtcDateTime
      - durable-functions.DurableOrchestrationContext.getInput
      - durable-functions.DurableOrchestrationContext.instanceId
      - durable-functions.DurableOrchestrationContext.isReplaying
      - durable-functions.DurableOrchestrationContext.newGuid
      - durable-functions.DurableOrchestrationContext.parentInstanceId
      - durable-functions.DurableOrchestrationContext.setCustomStatus
      - durable-functions.DurableOrchestrationContext.Task
      - durable-functions.DurableOrchestrationContext.waitForExternalEvent
    langs:
      - typeScript
    type: class
    summary: |-
      Parameter data for orchestration bindings that can be used to schedule
      function-based activities.
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.callActivity
    name: 'callActivity(string, unknown)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Schedules an activity function named `name` for execution.
    syntax:
      content: 'function callActivity(name: string, input?: unknown)'
      parameters:
        - id: name
          type:
            - string
          description: The name of the activity function to call.
        - id: input
          type:
            - unknown
          description: |-
            The JSON-serializable input to pass to the activity
            function.
          optional: true
      return:
        type:
          - durable-functions.Task
        description: |-
          A Durable Task that completes when the called activity
          function completes or fails.
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.callActivityWithRetry
    name: 'callActivityWithRetry(string, RetryOptions, unknown)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Schedules an activity function named `name` for execution with
      retry options.
    syntax:
      content: >-
        function callActivityWithRetry(name: string, retryOptions: RetryOptions,
        input?: unknown)
      parameters:
        - id: name
          type:
            - string
          description: The name of the activity function to call.
        - id: retryOptions
          type:
            - durable-functions.RetryOptions
          description: The retry options for the activity function.
        - id: input
          type:
            - unknown
          description: |
            The JSON-serializable input to pass to the activity
            function.
          optional: true
      return:
        type:
          - durable-functions.Task
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.callEntity
    name: 'callEntity(EntityId, string, unknown)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Calls an operation on an entity, passing an argument, and waits for it
      to complete.
    syntax:
      content: >-
        function callEntity(entityId: EntityId, operationName: string,
        operationInput?: unknown)
      parameters:
        - id: entityId
          type:
            - durable-functions.EntityId
          description: The target entity.
        - id: operationName
          type:
            - string
          description: The name of the operation.
        - id: operationInput
          type:
            - unknown
          description: |
            The input for the operation.
          optional: true
      return:
        type:
          - durable-functions.Task
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.callHttp
    name: >-
      callHttp(string, string, string | object, [key: string]: string,
      TokenSource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Schedules a durable HTTP call to the specified endpoint.
    syntax:
      content: >-
        function callHttp(method: string, uri: string, content?: string |
        object, headers?: [key: string]: string, tokenSource?: TokenSource)
      parameters:
        - id: method
          type:
            - string
          description: ''
        - id: uri
          type:
            - string
          description: ''
        - id: content
          type:
            - string | object
          description: ''
          optional: true
        - id: headers
          type:
            - '[key: string]: string'
          description: ''
          optional: true
        - id: tokenSource
          type:
            - durable-functions.TokenSource
          description: ''
          optional: true
      return:
        type:
          - durable-functions.Task
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.callSubOrchestrator
    name: 'callSubOrchestrator(string, unknown, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Schedules an orchestration function named `name` for execution.
    syntax:
      content: >-
        function callSubOrchestrator(name: string, input?: unknown, instanceId?:
        string)
      parameters:
        - id: name
          type:
            - string
          description: The name of the orchestrator function to call.
        - id: input
          type:
            - unknown
          description: |-
            The JSON-serializable input to pass to the orchestrator
            function.
          optional: true
        - id: instanceId
          type:
            - string
          description: >
            A unique ID to use for the sub-orchestration instance.

            If `instanceId` is not specified, the extension will generate an id
            in

            the format `<calling orchestrator instance ID>:<#>`
          optional: true
      return:
        type:
          - durable-functions.Task
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.callSubOrchestratorWithRetry
    name: 'callSubOrchestratorWithRetry(string, RetryOptions, unknown, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Schedules an orchestrator function named `name` for execution with retry
      options.
    syntax:
      content: >-
        function callSubOrchestratorWithRetry(name: string, retryOptions:
        RetryOptions, input?: unknown, instanceId?: string)
      parameters:
        - id: name
          type:
            - string
          description: The name of the orchestrator function to call.
        - id: retryOptions
          type:
            - durable-functions.RetryOptions
          description: The retry options for the orchestrator function.
        - id: input
          type:
            - unknown
          description: |-
            The JSON-serializable input to pass to the orchestrator
            function.
          optional: true
        - id: instanceId
          type:
            - string
          description: |
            A unique ID to use for the sub-orchestration instance.
          optional: true
      return:
        type:
          - durable-functions.Task
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.continueAsNew
    name: continueAsNew(unknown)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts the orchestration by clearing its history.
    syntax:
      content: 'function continueAsNew(input: unknown)'
      parameters:
        - id: input
          type:
            - unknown
          description: ''
      return:
        type:
          - durable-functions.Task
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.createTimer
    name: createTimer(Date)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Creates a durable timer that expires at a specified time.
      All durable timers created using this method must either expire or be
      cancelled using [[TimerTask]].[[cancel]] before the orchestrator
      function completes. Otherwise, the underlying framework will keep the
      instance alive until the timer expires.

      Timers currently cannot be scheduled further than 7 days into the
      future.
    syntax:
      content: 'function createTimer(fireAt: Date)'
      parameters:
        - id: fireAt
          type:
            - Date
          description: The time at which the timer should expire.
      return:
        type:
          - durable-functions.TimerTask
        description: A TimerTask that completes when the durable timer expires.
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.currentUtcDateTime
    name: currentUtcDateTime
    fullName: currentUtcDateTime
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets the current date/time in a way that is safe for use by orchestrator
      functions.
      This date/time value is derived from the orchestration history. It
      always returns the same value at specific points in the orchestrator
      function code, making it deterministic and safe for replay.
    syntax:
      content: 'currentUtcDateTime: Date'
      return:
        type:
          - Date
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.getInput
    name: getInput()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the input of the current orchestrator function as a deserialized
      value.
    syntax:
      content: function getInput()
      parameters: []
      return:
        type:
          - unknown
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.instanceId
    name: instanceId
    fullName: instanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      The ID of the current orchestration instance.
      The instance ID is generated and fixed when the orchestrator function is
      scheduled. It can be either auto-generated, in which case it is
      formatted as a GUID, or it can be user-specified with any format.
    syntax:
      content: 'instanceId: string'
      return:
        type:
          - string
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.isReplaying
    name: isReplaying
    fullName: isReplaying
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets a value indicating whether the orchestrator function is currently
      replaying itself.
      This property is useful when there is logic that needs to run only when
      the orchestrator function is _not_ replaying. For example, certain types
      of application logging may become too noisy when duplicated as part of
      orchestrator function replay. The orchestrator code could check to see
      whether the function is being replayed and then issue the log statements
      when this value is `false`.
    syntax:
      content: 'isReplaying: boolean'
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.newGuid
    name: newGuid()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Creates a new GUID that is safe for replay within an orchestration or
      operation.
      The default implementation of this method creates a name-based UUID
      using the algorithm from RFC 4122 §4.3. The name input used to generate
      this value is a combination of the orchestration instance ID and an
      internally managed sequence number.
    syntax:
      content: function newGuid()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.parentInstanceId
    name: parentInstanceId
    fullName: parentInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      The ID of the parent orchestration of the current sub-orchestration
      instance. The value will be available only in sub-orchestrations.
      The parent instance ID is generated and fixed when the parent
      orchestrator function is scheduled. It can be either auto-generated, in
      which case it is formatted as a GUID, or it can be user-specified with
      any format.
    syntax:
      content: 'parentInstanceId: string | undefined'
      return:
        type:
          - string | undefined
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.setCustomStatus
    name: setCustomStatus(unknown)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Sets the JSON-serializable status of the current orchestrator function.
      The `customStatusObject` value is serialized to JSON and will be made
      available to the orchestration status query APIs. The serialized JSON
      value must not exceed 16 KB of UTF-16 encoded text.

      The serialized `customStatusObject` value will be made available to the
      aforementioned APIs after the next `yield` or `return` statement.
    syntax:
      content: 'function setCustomStatus(customStatusObject: unknown)'
      parameters:
        - id: customStatusObject
          type:
            - unknown
          description: |
            The JSON-serializable value to use as the
            orchestrator function's custom status.
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.Task
    name: Task
    fullName: Task
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Just an entry point to reference the methods in [[ITaskMethods]].
      Methods to handle collections of pending actions represented by [[Task]]
      instances. For use in parallelization operations.
    syntax:
      content: 'Task: ITaskMethods'
      return:
        type:
          - durable-functions.ITaskMethods
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationContext.waitForExternalEvent
    name: waitForExternalEvent(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Waits asynchronously for an event to be raised with the name `name` and
      returns the event data.
      External clients can raise events to a waiting orchestration instance
      using [[raiseEvent]].
    syntax:
      content: 'function waitForExternalEvent(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
      return:
        type:
          - durable-functions.Task
        description: ''
    package: durable-functions
references:
  - uid: durable-functions.ITaskMethods
    name: ITaskMethods
    spec.typeScript:
      - name: ITaskMethods
        fullName: ITaskMethods
        uid: durable-functions.ITaskMethods
  - uid: durable-functions.Task
    name: Task
    spec.typeScript:
      - name: Task
        fullName: Task
        uid: durable-functions.Task
  - uid: durable-functions.RetryOptions
    name: RetryOptions
    spec.typeScript:
      - name: RetryOptions
        fullName: RetryOptions
        uid: durable-functions.RetryOptions
  - uid: durable-functions.EntityId
    name: EntityId
    spec.typeScript:
      - name: EntityId
        fullName: EntityId
        uid: durable-functions.EntityId
  - uid: durable-functions.TokenSource
    name: TokenSource
    spec.typeScript:
      - name: TokenSource
        fullName: TokenSource
        uid: durable-functions.TokenSource
  - uid: durable-functions.TimerTask
    name: TimerTask
    spec.typeScript:
      - name: TimerTask
        fullName: TimerTask
        uid: durable-functions.TimerTask
