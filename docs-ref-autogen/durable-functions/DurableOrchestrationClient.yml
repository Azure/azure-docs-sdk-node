### YamlMime:UniversalReference
items:
  - uid: durable-functions.DurableOrchestrationClient
    name: DurableOrchestrationClient
    fullName: DurableOrchestrationClient
    children:
      - durable-functions.DurableOrchestrationClient.createCheckStatusResponse
      - durable-functions.DurableOrchestrationClient.createHttpManagementPayload
      - durable-functions.DurableOrchestrationClient.constructor
      - durable-functions.DurableOrchestrationClient.getStatus
      - durable-functions.DurableOrchestrationClient.getStatusAll
      - durable-functions.DurableOrchestrationClient.getStatusBy
      - durable-functions.DurableOrchestrationClient.purgeInstanceHistory
      - durable-functions.DurableOrchestrationClient.purgeInstanceHistoryBy
      - durable-functions.DurableOrchestrationClient.raiseEvent
      - durable-functions.DurableOrchestrationClient.readEntityState
      - durable-functions.DurableOrchestrationClient.rewind
      - durable-functions.DurableOrchestrationClient.signalEntity
      - durable-functions.DurableOrchestrationClient.startNew
      - durable-functions.DurableOrchestrationClient.taskHubName
      - durable-functions.DurableOrchestrationClient.terminate
      - >-
        durable-functions.DurableOrchestrationClient.waitForCompletionOrCreateCheckStatusResponse
    langs:
      - typeScript
    type: class
    summary: |-
      Client for starting, querying, terminating and raising events to
      orchestration instances.
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.createCheckStatusResponse
    name: 'createCheckStatusResponse(IHttpRequest | HttpRequest | undefined, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates an HTTP response that is useful for checking the status of the
      specified instance.
    syntax:
      content: >-
        function createCheckStatusResponse(request: IHttpRequest | HttpRequest |
        undefined, instanceId: string)
      parameters:
        - id: request
          type:
            - durable-functions.IHttpRequest | HttpRequest | undefined
          description: |-
            The HTTP request that triggered the current orchestration
             instance.
        - id: instanceId
          type:
            - string
          description: The ID of the orchestration instance to check.
      return:
        type:
          - durable-functions.IHttpResponse
        description: |-
          An HTTP 202 response with a Location header and a payload
           containing instance management URLs.
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.createHttpManagementPayload
    name: createHttpManagementPayload(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates an [[HttpManagementPayload]] object that contains instance
      management HTTP endpoints.
    syntax:
      content: 'function createHttpManagementPayload(instanceId: string)'
      parameters:
        - id: instanceId
          type:
            - string
          description: |
            The ID of the orchestration instance to check.
      return:
        type:
          - durable-functions.HttpManagementPayload
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.constructor
    name: DurableOrchestrationClient(OrchestrationClientInputData)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new DurableOrchestrationClient(clientData: OrchestrationClientInputData)'
      parameters:
        - id: clientData
          type:
            - OrchestrationClientInputData
          description: |
            The object representing the orchestrationClient input
             binding of the Azure function that will use this client.
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.getStatus
    name: 'getStatus(string, boolean, boolean, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of the specified orchestration instance.
    syntax:
      content: >-
        function getStatus(instanceId: string, showHistory?: boolean,
        showHistoryOutput?: boolean, showInput?: boolean)
      parameters:
        - id: instanceId
          type:
            - string
          description: The ID of the orchestration instance to query.
        - id: showHistory
          type:
            - boolean
          description: |-
            Boolean marker for including execution history in the
             response.
          optional: true
        - id: showHistoryOutput
          type:
            - boolean
          description: |
            Boolean marker for including input and output
             in the execution history response.
          optional: true
        - id: showInput
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - Promise<durable-functions.DurableOrchestrationStatus>
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.getStatusAll
    name: getStatusAll()
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of all orchestration instances.
    syntax:
      content: function getStatusAll()
      parameters: []
      return:
        type:
          - 'Promise<durable-functions.DurableOrchestrationStatus[]>'
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.getStatusBy
    name: >-
      getStatusBy(Date | undefined, Date | undefined,
      OrchestrationRuntimeStatus[])
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the status of all orchestration instances that match the specified
      conditions.
    syntax:
      content: >-
        function getStatusBy(createdTimeFrom: Date | undefined, createdTimeTo:
        Date | undefined, runtimeStatus: OrchestrationRuntimeStatus[])
      parameters:
        - id: createdTimeFrom
          type:
            - Date | undefined
          description: |-
            Return orchestration instances which were created
             after this Date.
        - id: createdTimeTo
          type:
            - Date | undefined
          description: |-
            Return orchestration instances which were created
             before this DateTime.
        - id: runtimeStatus
          type:
            - 'durable-functions.OrchestrationRuntimeStatus[]'
          description: |
            Return orchestration instances which match any of
             the runtimeStatus values in this array.
      return:
        type:
          - 'Promise<durable-functions.DurableOrchestrationStatus[]>'
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.purgeInstanceHistory
    name: purgeInstanceHistory(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Purge the history for a specific orchestration instance.
    syntax:
      content: 'function purgeInstanceHistory(instanceId: string)'
      parameters:
        - id: instanceId
          type:
            - string
          description: |
            The ID of the orchestration instance to purge.
      return:
        type:
          - Promise<durable-functions.PurgeHistoryResult>
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.purgeInstanceHistoryBy
    name: 'purgeInstanceHistoryBy(Date, Date, OrchestrationRuntimeStatus[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Purge the orchestration history for instances that match the conditions.
    syntax:
      content: >-
        function purgeInstanceHistoryBy(createdTimeFrom: Date, createdTimeTo?:
        Date, runtimeStatus?: OrchestrationRuntimeStatus[])
      parameters:
        - id: createdTimeFrom
          type:
            - Date
          description: |-
            Start creation time for querying instances for
             purging.
        - id: createdTimeTo
          type:
            - Date
          description: |-
            End creation time for querying instances for
             purging.
          optional: true
        - id: runtimeStatus
          type:
            - 'durable-functions.OrchestrationRuntimeStatus[]'
          description: |
            List of runtime statuses for querying instances for
             purging. Only Completed, Terminated or Failed will be processed.
          optional: true
      return:
        type:
          - Promise<durable-functions.PurgeHistoryResult>
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.raiseEvent
    name: 'raiseEvent(string, string, unknown, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends an event notification message to a waiting orchestration instance.
    syntax:
      content: >-
        function raiseEvent(instanceId: string, eventName: string, eventData:
        unknown, taskHubName?: string, connectionName?: string)
      parameters:
        - id: instanceId
          type:
            - string
          description: |-
            The ID of the orchestration instance that will handle
             the event.
        - id: eventName
          type:
            - string
          description: The name of the event.
        - id: eventData
          type:
            - unknown
          description: The JSON-serializable data associated with the event.
        - id: taskHubName
          type:
            - string
          description: |-
            The TaskHubName of the orchestration that will handle
             the event.
          optional: true
        - id: connectionName
          type:
            - string
          description: |-
            The name of the connection string associated with
             `taskHubName.`
          optional: true
      return:
        type:
          - Promise<void>
        description: >-
          A promise that resolves when the event notification message has
           been enqueued.

          In order to handle the event, the target orchestration instance must
          be

          waiting for an event named `eventName` using

          [[waitForExternalEvent]].


          If the specified instance is not found or not running, this operation

          will have no effect.
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.readEntityState
    name: 'readEntityState(EntityId, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Tries to read the current state of an entity. Returnes undefined if the
      entity does not exist, or if the JSON-serialized state of the entity is
      larger than 16KB.
    syntax:
      content: >-
        function readEntityState<T>(entityId: EntityId, taskHubName?: string,
        connectionName?: string)
      parameters:
        - id: entityId
          type:
            - durable-functions.EntityId
          description: The target entity.
        - id: taskHubName
          type:
            - string
          description: The TaskHubName of the target entity.
          optional: true
        - id: connectionName
          type:
            - string
          description: |-
            The name of the connection string associated with
            [taskHubName].
          optional: true
      return:
        type:
          - Promise<durable-functions.EntityStateResponse<T>>
        description: A response containing the current state of the entity.
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.rewind
    name: 'rewind(string, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Rewinds the specified failed orchestration instance with a reason.
    syntax:
      content: >-
        function rewind(instanceId: string, reason: string, taskHubName?:
        string, connectionName?: string)
      parameters:
        - id: instanceId
          type:
            - string
          description: The ID of the orchestration instance to rewind.
        - id: reason
          type:
            - string
          description: The reason for rewinding the orchestration instance.
        - id: taskHubName
          type:
            - string
          description: ''
          optional: true
        - id: connectionName
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          A promise that resolves when the rewind message is enqueued.

          This feature is currently in preview.
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.signalEntity
    name: 'signalEntity(EntityId, string, unknown, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Signals an entity to perform an operation.
    syntax:
      content: >-
        function signalEntity(entityId: EntityId, operationName?: string,
        operationContent?: unknown, taskHubName?: string, connectionName?:
        string)
      parameters:
        - id: entityId
          type:
            - durable-functions.EntityId
          description: The target entity.
        - id: operationName
          type:
            - string
          description: The name of the operation.
          optional: true
        - id: operationContent
          type:
            - unknown
          description: The content for the operation.
          optional: true
        - id: taskHubName
          type:
            - string
          description: The TaskHubName of the target entity.
          optional: true
        - id: connectionName
          type:
            - string
          description: |
            The name of the connection string associated with [taskHubName].
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.startNew
    name: 'startNew(string, string, unknown)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Starts a new instance of the specified orchestrator function.
      If an orchestration instance with the specified ID already exists, the
      existing instance will be silently replaced by this new instance.
    syntax:
      content: >-
        function startNew(orchestratorFunctionName: string, instanceId?: string,
        input?: unknown)
      parameters:
        - id: orchestratorFunctionName
          type:
            - string
          description: |-
            The name of the orchestrator function to
             start.
        - id: instanceId
          type:
            - string
          description: |-
            The ID to use for the new orchestration instance. If
             no instanceId is specified, the Durable Functions extension will
             generate a random GUID (recommended).
          optional: true
        - id: input
          type:
            - unknown
          description: |-
            JSON-serializable input value for the orchestrator
             function.
          optional: true
      return:
        type:
          - Promise<string>
        description: The ID of the new orchestration instance.
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.taskHubName
    name: taskHubName
    fullName: taskHubName
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The name of the task hub configured on this orchestration client
      instance.
    syntax:
      content: 'taskHubName: string'
      return:
        type:
          - string
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableOrchestrationClient.terminate
    name: 'terminate(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Terminates a running orchestration instance.
    syntax:
      content: 'function terminate(instanceId: string, reason: string)'
      parameters:
        - id: instanceId
          type:
            - string
          description: The ID of the orchestration instance to terminate.
        - id: reason
          type:
            - string
          description: The reason for terminating the orchestration instance.
      return:
        type:
          - Promise<void>
        description: |-
          A promise that resolves when the terminate message is enqueued.

          Terminating an orchestration instance has no effect on any in-flight
          activity function executions or sub-orchestrations that were started
          by the current orchestration instance.
    package: durable-functions
  - uid: >-
      durable-functions.DurableOrchestrationClient.waitForCompletionOrCreateCheckStatusResponse
    name: >-
      waitForCompletionOrCreateCheckStatusResponse(HttpRequest, string, number,
      number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Creates an HTTP response which either contains a payload of management
      URLs for a non-completed instance or contains the payload containing
      the output of the completed orchestration.
      If the orchestration does not complete within the specified timeout,
      then the HTTP response will be identical to that of
      [[createCheckStatusResponse]].
    syntax:
      content: >-
        function waitForCompletionOrCreateCheckStatusResponse(request:
        HttpRequest, instanceId: string, timeoutInMilliseconds?: number,
        retryIntervalInMilliseconds?: number)
      parameters:
        - id: request
          type:
            - HttpRequest
          description: The HTTP request that triggered the current function.
        - id: instanceId
          type:
            - string
          description: The unique ID of the instance to check.
        - id: timeoutInMilliseconds
          type:
            - number
          description: |-
            Total allowed timeout for output from the
             durable function. The default value is 10 seconds.
          optional: true
        - id: retryIntervalInMilliseconds
          type:
            - number
          description: |
            The timeout between checks for output
             from the durable function. The default value is 1 second.
          optional: true
      return:
        type:
          - Promise<durable-functions.IHttpResponse>
        description: ''
    package: durable-functions
references:
  - uid: durable-functions.IHttpRequest | HttpRequest | undefined
    name: IHttpRequest | HttpRequest | undefined
    spec.typeScript:
      - name: IHttpRequest
        fullName: IHttpRequest
        uid: durable-functions.IHttpRequest
      - name: ' | HttpRequest | undefined'
        fullName: ' | HttpRequest | undefined'
  - uid: durable-functions.IHttpResponse
    name: IHttpResponse
    spec.typeScript:
      - name: IHttpResponse
        fullName: IHttpResponse
        uid: durable-functions.IHttpResponse
  - uid: durable-functions.HttpManagementPayload
    name: HttpManagementPayload
    spec.typeScript:
      - name: HttpManagementPayload
        fullName: HttpManagementPayload
        uid: durable-functions.HttpManagementPayload
  - uid: Promise<durable-functions.DurableOrchestrationStatus>
    name: DurableOrchestrationStatus>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DurableOrchestrationStatus
        fullName: DurableOrchestrationStatus
        uid: durable-functions.DurableOrchestrationStatus
      - name: '>'
        fullName: '>'
  - uid: 'Promise<durable-functions.DurableOrchestrationStatus[]>'
    name: 'DurableOrchestrationStatus[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DurableOrchestrationStatus
        fullName: DurableOrchestrationStatus
        uid: durable-functions.DurableOrchestrationStatus
      - name: '[]>'
        fullName: '[]>'
  - uid: 'durable-functions.OrchestrationRuntimeStatus[]'
    name: 'OrchestrationRuntimeStatus[]'
    spec.typeScript:
      - name: OrchestrationRuntimeStatus
        fullName: OrchestrationRuntimeStatus
        uid: durable-functions.OrchestrationRuntimeStatus
      - name: '[]'
        fullName: '[]'
  - uid: Promise<durable-functions.PurgeHistoryResult>
    name: PurgeHistoryResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PurgeHistoryResult
        fullName: PurgeHistoryResult
        uid: durable-functions.PurgeHistoryResult
      - name: '>'
        fullName: '>'
  - uid: durable-functions.EntityId
    name: EntityId
    spec.typeScript:
      - name: EntityId
        fullName: EntityId
        uid: durable-functions.EntityId
  - uid: Promise<durable-functions.EntityStateResponse<T>>
    name: EntityStateResponse<T>>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EntityStateResponse
        fullName: EntityStateResponse
        uid: durable-functions.EntityStateResponse
      - name: <T>>
        fullName: <T>>
  - uid: Promise<durable-functions.IHttpResponse>
    name: IHttpResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IHttpResponse
        fullName: IHttpResponse
        uid: durable-functions.IHttpResponse
      - name: '>'
        fullName: '>'
