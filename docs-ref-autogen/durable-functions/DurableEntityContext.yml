### YamlMime:UniversalReference
items:
  - uid: durable-functions.DurableEntityContext
    name: DurableEntityContext
    fullName: DurableEntityContext
    children:
      - durable-functions.DurableEntityContext.destructOnExit
      - durable-functions.DurableEntityContext.entityId
      - durable-functions.DurableEntityContext.entityKey
      - durable-functions.DurableEntityContext.entityName
      - durable-functions.DurableEntityContext.getInput
      - durable-functions.DurableEntityContext.getState
      - durable-functions.DurableEntityContext.isNewlyConstructed
      - durable-functions.DurableEntityContext.operationName
      - durable-functions.DurableEntityContext.return
      - durable-functions.DurableEntityContext.setState
      - durable-functions.DurableEntityContext.signalEntity
    langs:
      - typeScript
    type: class
    summary: |-
      Provides functionality for application code implementing an entity
      operation.
    package: durable-functions
  - uid: durable-functions.DurableEntityContext.destructOnExit
    name: destructOnExit()
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes this entity after this operation completes.
    syntax:
      content: function destructOnExit()
      parameters: []
    package: durable-functions
  - uid: durable-functions.DurableEntityContext.entityId
    name: entityId
    fullName: entityId
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the id of the currently executing entity.
    syntax:
      content: 'entityId: EntityId'
      return:
        type:
          - durable-functions.EntityId
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableEntityContext.entityKey
    name: entityKey
    fullName: entityKey
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the key of the currently executing entity.
    syntax:
      content: 'entityKey: string'
      return:
        type:
          - string
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableEntityContext.entityName
    name: entityName
    fullName: entityName
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the name of the currently executing entity.
    syntax:
      content: 'entityName: string'
      return:
        type:
          - string
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableEntityContext.getInput
    name: getInput()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Gets the input for this operation.
      An operation invocation on an entity includes an operation name, which
      states what operation to perform, and optionally an operation input.
    syntax:
      content: function getInput()
      parameters: []
      return:
        type:
          - unknown | undefined
        description: 'The operation input, or undefined if none.'
    package: durable-functions
  - uid: durable-functions.DurableEntityContext.getState
    name: getState(() => unknown)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets the current state of this entity, for reading and/or writing.'
    syntax:
      content: 'function getState(initializer?: () => unknown)'
      parameters:
        - id: initializer
          type:
            - () => unknown
          description: |-
            Provides an initial value to use for the state,
            instead of TState's default.
          optional: true
      return:
        type:
          - unknown | undefined
        description: >-
          The current state of this entity, or undefined if none has been set
          yet.
    package: durable-functions
  - uid: durable-functions.DurableEntityContext.isNewlyConstructed
    name: isNewlyConstructed
    fullName: isNewlyConstructed
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Whether this entity is freshly constructed, i.e. did not exist prior to
      this operation being called.
    syntax:
      content: 'isNewlyConstructed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableEntityContext.operationName
    name: operationName
    fullName: operationName
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets the name of the operation that was called.
      An operation invocation on an entity includes an operation name, which
      states what operation to perform, and optionally an operation input.
    syntax:
      content: 'operationName: string | undefined'
      return:
        type:
          - string | undefined
        description: ''
    package: durable-functions
  - uid: durable-functions.DurableEntityContext.return
    name: return(unknown)
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the given result to the caller of this operation.
    syntax:
      content: 'function return(result: unknown)'
      parameters:
        - id: result
          type:
            - unknown
          description: |
            The result to return.
    package: durable-functions
  - uid: durable-functions.DurableEntityContext.setState
    name: setState(unknown)
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets the current state of this entity.
    syntax:
      content: 'function setState(state: unknown)'
      parameters:
        - id: state
          type:
            - unknown
          description: |
            The state of the entity.
    package: durable-functions
  - uid: durable-functions.DurableEntityContext.signalEntity
    name: 'signalEntity(EntityId, string, unknown)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Signals an entity to perform an operation, without waiting for a
      response. Any result or exception is ignored (fire and forget).
    syntax:
      content: >-
        function signalEntity(entity: EntityId, operationName: string,
        operationInput?: unknown)
      parameters:
        - id: entity
          type:
            - durable-functions.EntityId
          description: The target entity.
        - id: operationName
          type:
            - string
          description: The name of the operation.
        - id: operationInput
          type:
            - unknown
          description: |
            The operation input.
          optional: true
    package: durable-functions
references:
  - uid: durable-functions.EntityId
    name: EntityId
    spec.typeScript:
      - name: EntityId
        fullName: EntityId
        uid: durable-functions.EntityId
