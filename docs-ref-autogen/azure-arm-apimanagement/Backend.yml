### YamlMime:UniversalReference
items:
  - uid: azure-arm-apimanagement.Backend
    name: Backend
    fullName: Backend
    children:
      - azure-arm-apimanagement.Backend.createOrUpdate
      - azure-arm-apimanagement.Backend.createOrUpdate_2
      - azure-arm-apimanagement.Backend.createOrUpdate_1
      - azure-arm-apimanagement.Backend.createOrUpdateWithHttpOperationResponse
      - azure-arm-apimanagement.Backend.deleteMethod
      - azure-arm-apimanagement.Backend.deleteMethod_2
      - azure-arm-apimanagement.Backend.deleteMethod_1
      - azure-arm-apimanagement.Backend.deleteMethodWithHttpOperationResponse
      - azure-arm-apimanagement.Backend.get
      - azure-arm-apimanagement.Backend.get_2
      - azure-arm-apimanagement.Backend.get_1
      - azure-arm-apimanagement.Backend.getEntityTag
      - azure-arm-apimanagement.Backend.getEntityTag_2
      - azure-arm-apimanagement.Backend.getEntityTag_1
      - azure-arm-apimanagement.Backend.getEntityTagWithHttpOperationResponse
      - azure-arm-apimanagement.Backend.getWithHttpOperationResponse
      - azure-arm-apimanagement.Backend.listByService
      - azure-arm-apimanagement.Backend.listByService_2
      - azure-arm-apimanagement.Backend.listByService_1
      - azure-arm-apimanagement.Backend.listByServiceNext
      - azure-arm-apimanagement.Backend.listByServiceNext_2
      - azure-arm-apimanagement.Backend.listByServiceNext_1
      - >-
        azure-arm-apimanagement.Backend.listByServiceNextWithHttpOperationResponse
      - azure-arm-apimanagement.Backend.listByServiceWithHttpOperationResponse
      - azure-arm-apimanagement.Backend.reconnect
      - azure-arm-apimanagement.Backend.reconnect_2
      - azure-arm-apimanagement.Backend.reconnect_1
      - azure-arm-apimanagement.Backend.reconnectWithHttpOperationResponse
      - azure-arm-apimanagement.Backend.update
      - azure-arm-apimanagement.Backend.update_2
      - azure-arm-apimanagement.Backend.update_1
      - azure-arm-apimanagement.Backend.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.createOrUpdate
    name: 'createOrUpdate(string, string, string, BackendContract, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or Updates a backend.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        backendid: string, parameters: BackendContract, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: parameters
          type:
            - azure-arm-apimanagement.BackendContract
          description: |
            Create parameters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, string, BackendContract, Object,
      ServiceCallback<BackendContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or Updates a backend.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        backendid: string, parameters: BackendContract, options: Object,
        callback: ServiceCallback<BackendContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-apimanagement.BackendContract
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.BackendContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, string, BackendContract,
      ServiceCallback<BackendContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or Updates a backend.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        backendid: string, parameters: BackendContract, callback:
        ServiceCallback<BackendContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-apimanagement.BackendContract
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.BackendContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, string,
      BackendContract, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or Updates a backend.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, backendid: string, parameters:
        BackendContract, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: parameters
          type:
            - azure-arm-apimanagement.BackendContract
          description: |
            Create parameters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.BackendContract>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.deleteMethod
    name: 'deleteMethod(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified backend.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        backendid: string, ifMatch: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: ifMatch
          type:
            - string
          description: >
            ETag of the Entity. ETag should match the current

            entity state from the header response of the GET request or it
            should be *

            for unconditional update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.deleteMethod_2
    name: >-
      deleteMethod(string, string, string, string, Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified backend.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        backendid: string, ifMatch: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.deleteMethod_1
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified backend.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        backendid: string, ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.deleteMethodWithHttpOperationResponse
    name: >-
      deleteMethodWithHttpOperationResponse(string, string, string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified backend.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, backendid: string, ifMatch: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: ifMatch
          type:
            - string
          description: >
            ETag of the Entity. ETag should match the current

            entity state from the header response of the GET request or it
            should be *

            for unconditional update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.get
    name: 'get(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the backend specified by its identifier.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, backendid:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.get_2
    name: 'get(string, string, string, Object, ServiceCallback<BackendContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the backend specified by its identifier.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, backendid:
        string, options: Object, callback: ServiceCallback<BackendContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.BackendContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.get_1
    name: 'get(string, string, string, ServiceCallback<BackendContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the backend specified by its identifier.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, backendid:
        string, callback: ServiceCallback<BackendContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.BackendContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.getEntityTag
    name: 'getEntityTag(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the backend specified by its
      identifier.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        backendid: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.getEntityTag_2
    name: 'getEntityTag(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the backend specified by its
      identifier.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        backendid: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.getEntityTag_1
    name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the backend specified by its
      identifier.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        backendid: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.getEntityTagWithHttpOperationResponse
    name: 'getEntityTagWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the backend specified by its
      identifier.
    syntax:
      content: >-
        function getEntityTagWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, backendid: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the backend specified by its identifier.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        serviceName: string, backendid: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.BackendContract>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.listByService
    name: 'listByService(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of backends in the specified service instance.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.listByService_2
    name: 'listByService(string, string, Object, ServiceCallback<BackendCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of backends in the specified service instance.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: Object, callback: ServiceCallback<BackendCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.BackendCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.listByService_1
    name: 'listByService(string, string, ServiceCallback<BackendCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of backends in the specified service instance.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<BackendCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.BackendCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.listByServiceNext
    name: 'listByServiceNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of backends in the specified service instance.
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.listByServiceNext_2
    name: 'listByServiceNext(string, Object, ServiceCallback<BackendCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of backends in the specified service instance.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<BackendCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.BackendCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.listByServiceNext_1
    name: 'listByServiceNext(string, ServiceCallback<BackendCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of backends in the specified service instance.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<BackendCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.BackendCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.BackendCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.listByServiceNextWithHttpOperationResponse
    name: 'listByServiceNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of backends in the specified service instance.
    syntax:
      content: >-
        function listByServiceNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.BackendCollection>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.listByServiceWithHttpOperationResponse
    name: 'listByServiceWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of backends in the specified service instance.
    syntax:
      content: >-
        function listByServiceWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.BackendCollection>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.reconnect
    name: 'reconnect(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Notifies the APIM proxy to create a new connection to the backend after
      the

      specified timeout. If no timeout was specified, timeout of 2 minutes is

      used.
    syntax:
      content: >-
        function reconnect(resourceGroupName: string, serviceName: string,
        backendid: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.reconnect_2
    name: 'reconnect(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Notifies the APIM proxy to create a new connection to the backend after
      the

      specified timeout. If no timeout was specified, timeout of 2 minutes is

      used.
    syntax:
      content: >-
        function reconnect(resourceGroupName: string, serviceName: string,
        backendid: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.reconnect_1
    name: 'reconnect(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Notifies the APIM proxy to create a new connection to the backend after
      the

      specified timeout. If no timeout was specified, timeout of 2 minutes is

      used.
    syntax:
      content: >-
        function reconnect(resourceGroupName: string, serviceName: string,
        backendid: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.reconnectWithHttpOperationResponse
    name: 'reconnectWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Notifies the APIM proxy to create a new connection to the backend after
      the

      specified timeout. If no timeout was specified, timeout of 2 minutes is

      used.
    syntax:
      content: >-
        function reconnectWithHttpOperationResponse(resourceGroupName: string,
        serviceName: string, backendid: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.update
    name: 'update(string, string, string, BackendUpdateParameters, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing backend.
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        backendid: string, parameters: BackendUpdateParameters, ifMatch: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: parameters
          type:
            - azure-arm-apimanagement.BackendUpdateParameters
          description: |
            Update parameters.
        - id: ifMatch
          type:
            - string
          description: >
            ETag of the Entity. ETag should match the current

            entity state from the header response of the GET request or it
            should be *

            for unconditional update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.update_2
    name: >-
      update(string, string, string, BackendUpdateParameters, string, Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing backend.
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        backendid: string, parameters: BackendUpdateParameters, ifMatch: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-apimanagement.BackendUpdateParameters
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.update_1
    name: >-
      update(string, string, string, BackendUpdateParameters, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing backend.
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        backendid: string, parameters: BackendUpdateParameters, ifMatch: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: backendid
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-apimanagement.BackendUpdateParameters
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Backend.updateWithHttpOperationResponse
    name: >-
      updateWithHttpOperationResponse(string, string, string,
      BackendUpdateParameters, string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates an existing backend.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        serviceName: string, backendid: string, parameters:
        BackendUpdateParameters, ifMatch: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: backendid
          type:
            - string
          description: |
            Identifier of the Backend entity. Must be unique
            in the current API Management service instance.
        - id: parameters
          type:
            - azure-arm-apimanagement.BackendUpdateParameters
          description: |
            Update parameters.
        - id: ifMatch
          type:
            - string
          description: >
            ETag of the Entity. ETag should match the current

            entity state from the header response of the GET request or it
            should be *

            for unconditional update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-apimanagement
references:
  - uid: azure-arm-apimanagement.BackendContract
    name: BackendContract
    spec.typeScript:
      - name: BackendContract
        fullName: BackendContract
        uid: azure-arm-apimanagement.BackendContract
  - uid: Promise<azure-arm-apimanagement.BackendContract>
    name: BackendContract>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackendContract
        fullName: BackendContract
        uid: azure-arm-apimanagement.BackendContract
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-apimanagement.BackendContract>
    name: BackendContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackendContract
        fullName: BackendContract
        uid: azure-arm-apimanagement.BackendContract
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-apimanagement.BackendContract>>
    name: BackendContract>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackendContract
        fullName: BackendContract
        uid: azure-arm-apimanagement.BackendContract
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-apimanagement.BackendCollection>
    name: BackendCollection>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackendCollection
        fullName: BackendCollection
        uid: azure-arm-apimanagement.BackendCollection
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-apimanagement.BackendCollection>
    name: BackendCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackendCollection
        fullName: BackendCollection
        uid: azure-arm-apimanagement.BackendCollection
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-apimanagement.BackendCollection>>
    name: BackendCollection>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackendCollection
        fullName: BackendCollection
        uid: azure-arm-apimanagement.BackendCollection
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-apimanagement.BackendUpdateParameters
    name: BackendUpdateParameters
    spec.typeScript:
      - name: BackendUpdateParameters
        fullName: BackendUpdateParameters
        uid: azure-arm-apimanagement.BackendUpdateParameters
