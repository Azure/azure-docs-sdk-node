### YamlMime:UniversalReference
items:
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger
    name: ApiDiagnosticLogger
    fullName: ApiDiagnosticLogger
    children:
      - azure-arm-apimanagement.ApiDiagnosticLogger.checkEntityExists
      - azure-arm-apimanagement.ApiDiagnosticLogger.checkEntityExists_2
      - azure-arm-apimanagement.ApiDiagnosticLogger.checkEntityExists_1
      - >-
        azure-arm-apimanagement.ApiDiagnosticLogger.checkEntityExistsWithHttpOperationResponse
      - azure-arm-apimanagement.ApiDiagnosticLogger.createOrUpdate
      - azure-arm-apimanagement.ApiDiagnosticLogger.createOrUpdate_2
      - azure-arm-apimanagement.ApiDiagnosticLogger.createOrUpdate_1
      - >-
        azure-arm-apimanagement.ApiDiagnosticLogger.createOrUpdateWithHttpOperationResponse
      - azure-arm-apimanagement.ApiDiagnosticLogger.deleteMethod
      - azure-arm-apimanagement.ApiDiagnosticLogger.deleteMethod_2
      - azure-arm-apimanagement.ApiDiagnosticLogger.deleteMethod_1
      - >-
        azure-arm-apimanagement.ApiDiagnosticLogger.deleteMethodWithHttpOperationResponse
      - azure-arm-apimanagement.ApiDiagnosticLogger.listByService
      - azure-arm-apimanagement.ApiDiagnosticLogger.listByService_2
      - azure-arm-apimanagement.ApiDiagnosticLogger.listByService_1
      - azure-arm-apimanagement.ApiDiagnosticLogger.listByServiceNext
      - azure-arm-apimanagement.ApiDiagnosticLogger.listByServiceNext_2
      - azure-arm-apimanagement.ApiDiagnosticLogger.listByServiceNext_1
      - >-
        azure-arm-apimanagement.ApiDiagnosticLogger.listByServiceNextWithHttpOperationResponse
      - >-
        azure-arm-apimanagement.ApiDiagnosticLogger.listByServiceWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.checkEntityExists
    name: 'checkEntityExists(string, string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Checks that logger entity specified by identifier is associated with the
      diagnostics entity.
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, apiId: string, diagnosticId: string, loggerid: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: diagnosticId
          type:
            - string
          description: |
            Diagnostic identifier. Must be unique in the
            current API Management service instance.
        - id: loggerid
          type:
            - string
          description: |
            Logger identifier. Must be unique in the API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<boolean>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.checkEntityExists_2
    name: >-
      checkEntityExists(string, string, string, string, string, Object,
      ServiceCallback<boolean>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Checks that logger entity specified by identifier is associated with the
      diagnostics entity.
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, apiId: string, diagnosticId: string, loggerid: string, options:
        Object, callback: ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: diagnosticId
          type:
            - string
          description: ''
        - id: loggerid
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: ''
      return:
        type:
          - Promise<boolean>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.checkEntityExists_1
    name: >-
      checkEntityExists(string, string, string, string, string,
      ServiceCallback<boolean>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Checks that logger entity specified by identifier is associated with the
      diagnostics entity.
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, apiId: string, diagnosticId: string, loggerid: string, callback:
        ServiceCallback<boolean>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: diagnosticId
          type:
            - string
          description: ''
        - id: loggerid
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: ''
      return:
        type:
          - Promise<boolean>
    package: azure-arm-apimanagement
  - uid: >-
      azure-arm-apimanagement.ApiDiagnosticLogger.checkEntityExistsWithHttpOperationResponse
    name: >-
      checkEntityExistsWithHttpOperationResponse(string, string, string, string,
      string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Checks that logger entity specified by identifier is associated with the
      diagnostics entity.
    syntax:
      content: >-
        function checkEntityExistsWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, apiId: string, diagnosticId: string,
        loggerid: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: diagnosticId
          type:
            - string
          description: |
            Diagnostic identifier. Must be unique in the
            current API Management service instance.
        - id: loggerid
          type:
            - string
          description: |
            Logger identifier. Must be unique in the API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<boolean>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.createOrUpdate
    name: 'createOrUpdate(string, string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Attaches a logger to a dignostic for an API.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, diagnosticId: string, loggerid: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: diagnosticId
          type:
            - string
          description: |
            Diagnostic identifier. Must be unique in the
            current API Management service instance.
        - id: loggerid
          type:
            - string
          description: |
            Logger identifier. Must be unique in the API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.LoggerContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, string, string, string, Object,
      ServiceCallback<LoggerContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Attaches a logger to a dignostic for an API.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, diagnosticId: string, loggerid: string, options: Object,
        callback: ServiceCallback<LoggerContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: diagnosticId
          type:
            - string
          description: ''
        - id: loggerid
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.LoggerContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.LoggerContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, string, string, string,
      ServiceCallback<LoggerContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Attaches a logger to a dignostic for an API.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, diagnosticId: string, loggerid: string, callback:
        ServiceCallback<LoggerContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: diagnosticId
          type:
            - string
          description: ''
        - id: loggerid
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.LoggerContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.LoggerContract>
    package: azure-arm-apimanagement
  - uid: >-
      azure-arm-apimanagement.ApiDiagnosticLogger.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, string, string,
      string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Attaches a logger to a dignostic for an API.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, apiId: string, diagnosticId: string,
        loggerid: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: diagnosticId
          type:
            - string
          description: |
            Diagnostic identifier. Must be unique in the
            current API Management service instance.
        - id: loggerid
          type:
            - string
          description: |
            Logger identifier. Must be unique in the API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerContract>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.deleteMethod
    name: 'deleteMethod(string, string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified Logger from Diagnostic for an API.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, diagnosticId: string, loggerid: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: diagnosticId
          type:
            - string
          description: |
            Diagnostic identifier. Must be unique in the
            current API Management service instance.
        - id: loggerid
          type:
            - string
          description: |
            Logger identifier. Must be unique in the API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.deleteMethod_2
    name: >-
      deleteMethod(string, string, string, string, string, Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified Logger from Diagnostic for an API.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, diagnosticId: string, loggerid: string, options: Object,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: diagnosticId
          type:
            - string
          description: ''
        - id: loggerid
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.deleteMethod_1
    name: >-
      deleteMethod(string, string, string, string, string,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified Logger from Diagnostic for an API.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        apiId: string, diagnosticId: string, loggerid: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: diagnosticId
          type:
            - string
          description: ''
        - id: loggerid
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: >-
      azure-arm-apimanagement.ApiDiagnosticLogger.deleteMethodWithHttpOperationResponse
    name: >-
      deleteMethodWithHttpOperationResponse(string, string, string, string,
      string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified Logger from Diagnostic for an API.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, apiId: string, diagnosticId: string,
        loggerid: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: diagnosticId
          type:
            - string
          description: |
            Diagnostic identifier. Must be unique in the
            current API Management service instance.
        - id: loggerid
          type:
            - string
          description: |
            Logger identifier. Must be unique in the API
            Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.listByService
    name: 'listByService(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all loggers assosiated with the specified Diagnostic of an API.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, diagnosticId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: diagnosticId
          type:
            - string
          description: |
            Diagnostic identifier. Must be unique in the
            current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.LoggerCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.listByService_2
    name: >-
      listByService(string, string, string, string, Object,
      ServiceCallback<LoggerCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all loggers assosiated with the specified Diagnostic of an API.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, diagnosticId: string, options: Object, callback:
        ServiceCallback<LoggerCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: diagnosticId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.LoggerCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.listByService_1
    name: >-
      listByService(string, string, string, string,
      ServiceCallback<LoggerCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all loggers assosiated with the specified Diagnostic of an API.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, diagnosticId: string, callback:
        ServiceCallback<LoggerCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: apiId
          type:
            - string
          description: ''
        - id: diagnosticId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.LoggerCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.listByServiceNext
    name: 'listByServiceNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all loggers assosiated with the specified Diagnostic of an API.
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.LoggerCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.listByServiceNext_2
    name: 'listByServiceNext(string, Object, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all loggers assosiated with the specified Diagnostic of an API.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<LoggerCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.LoggerCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.ApiDiagnosticLogger.listByServiceNext_1
    name: 'listByServiceNext(string, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all loggers assosiated with the specified Diagnostic of an API.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<LoggerCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.LoggerCollection>
    package: azure-arm-apimanagement
  - uid: >-
      azure-arm-apimanagement.ApiDiagnosticLogger.listByServiceNextWithHttpOperationResponse
    name: 'listByServiceNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all loggers assosiated with the specified Diagnostic of an API.
    syntax:
      content: >-
        function listByServiceNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
    package: azure-arm-apimanagement
  - uid: >-
      azure-arm-apimanagement.ApiDiagnosticLogger.listByServiceWithHttpOperationResponse
    name: >-
      listByServiceWithHttpOperationResponse(string, string, string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all loggers assosiated with the specified Diagnostic of an API.
    syntax:
      content: >-
        function listByServiceWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, apiId: string, diagnosticId: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: apiId
          type:
            - string
          description: |
            API identifier. Must be unique in the current API
            Management service instance.
        - id: diagnosticId
          type:
            - string
          description: |
            Diagnostic identifier. Must be unique in the
            current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
    package: azure-arm-apimanagement
references:
  - uid: Promise<azure-arm-apimanagement.LoggerContract>
    name: LoggerContract>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: LoggerContract
        fullName: LoggerContract
        uid: azure-arm-apimanagement.LoggerContract
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-apimanagement.LoggerContract>
    name: LoggerContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerContract
        fullName: LoggerContract
        uid: azure-arm-apimanagement.LoggerContract
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerContract>>
    name: LoggerContract>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: LoggerContract
        fullName: LoggerContract
        uid: azure-arm-apimanagement.LoggerContract
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-apimanagement.LoggerCollection>
    name: LoggerCollection>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: LoggerCollection
        fullName: LoggerCollection
        uid: azure-arm-apimanagement.LoggerCollection
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-apimanagement.LoggerCollection>
    name: LoggerCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerCollection
        fullName: LoggerCollection
        uid: azure-arm-apimanagement.LoggerCollection
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
    name: LoggerCollection>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: LoggerCollection
        fullName: LoggerCollection
        uid: azure-arm-apimanagement.LoggerCollection
      - name: '>>'
        fullName: '>>'
