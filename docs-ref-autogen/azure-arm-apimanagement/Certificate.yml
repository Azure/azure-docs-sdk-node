### YamlMime:UniversalReference
items:
  - uid: azure-arm-apimanagement.Certificate
    name: Certificate
    fullName: Certificate
    children:
      - azure-arm-apimanagement.Certificate.createOrUpdate
      - azure-arm-apimanagement.Certificate.createOrUpdate_2
      - azure-arm-apimanagement.Certificate.createOrUpdate_1
      - >-
        azure-arm-apimanagement.Certificate.createOrUpdateWithHttpOperationResponse
      - azure-arm-apimanagement.Certificate.deleteMethod
      - azure-arm-apimanagement.Certificate.deleteMethod_2
      - azure-arm-apimanagement.Certificate.deleteMethod_1
      - >-
        azure-arm-apimanagement.Certificate.deleteMethodWithHttpOperationResponse
      - azure-arm-apimanagement.Certificate.get
      - azure-arm-apimanagement.Certificate.get_2
      - azure-arm-apimanagement.Certificate.get_1
      - azure-arm-apimanagement.Certificate.getEntityTag
      - azure-arm-apimanagement.Certificate.getEntityTag_2
      - azure-arm-apimanagement.Certificate.getEntityTag_1
      - >-
        azure-arm-apimanagement.Certificate.getEntityTagWithHttpOperationResponse
      - azure-arm-apimanagement.Certificate.getWithHttpOperationResponse
      - azure-arm-apimanagement.Certificate.listByService
      - azure-arm-apimanagement.Certificate.listByService_2
      - azure-arm-apimanagement.Certificate.listByService_1
      - azure-arm-apimanagement.Certificate.listByServiceNext
      - azure-arm-apimanagement.Certificate.listByServiceNext_2
      - azure-arm-apimanagement.Certificate.listByServiceNext_1
      - >-
        azure-arm-apimanagement.Certificate.listByServiceNextWithHttpOperationResponse
      - >-
        azure-arm-apimanagement.Certificate.listByServiceWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.createOrUpdate
    name: >-
      createOrUpdate(string, string, string,
      CertificateCreateOrUpdateParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates the certificate being used for authentication with the
      backend.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        certificateId: string, parameters: CertificateCreateOrUpdateParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: certificateId
          type:
            - string
          description: |
            Identifier of the certificate entity. Must be
            unique in the current API Management service instance.
        - id: parameters
          type:
            - azure-arm-apimanagement.CertificateCreateOrUpdateParameters
          description: |
            Create or Update parameters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, string,
      CertificateCreateOrUpdateParameters, Object,
      ServiceCallback<CertificateContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates the certificate being used for authentication with the
      backend.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        certificateId: string, parameters: CertificateCreateOrUpdateParameters,
        options: Object, callback: ServiceCallback<CertificateContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: certificateId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-apimanagement.CertificateCreateOrUpdateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.CertificateContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, string,
      CertificateCreateOrUpdateParameters, ServiceCallback<CertificateContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates the certificate being used for authentication with the
      backend.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        certificateId: string, parameters: CertificateCreateOrUpdateParameters,
        callback: ServiceCallback<CertificateContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: certificateId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-apimanagement.CertificateCreateOrUpdateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.CertificateContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateContract>
    package: azure-arm-apimanagement
  - uid: >-
      azure-arm-apimanagement.Certificate.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, string,
      CertificateCreateOrUpdateParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates the certificate being used for authentication with the
      backend.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, certificateId: string, parameters:
        CertificateCreateOrUpdateParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: certificateId
          type:
            - string
          description: |
            Identifier of the certificate entity. Must be
            unique in the current API Management service instance.
        - id: parameters
          type:
            - azure-arm-apimanagement.CertificateCreateOrUpdateParameters
          description: |
            Create or Update parameters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.CertificateContract>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.deleteMethod
    name: 'deleteMethod(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes specific certificate.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        certificateId: string, ifMatch: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: certificateId
          type:
            - string
          description: |
            Identifier of the certificate entity. Must be
            unique in the current API Management service instance.
        - id: ifMatch
          type:
            - string
          description: >
            ETag of the Entity. ETag should match the current

            entity state from the header response of the GET request or it
            should be *

            for unconditional update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.deleteMethod_2
    name: >-
      deleteMethod(string, string, string, string, Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes specific certificate.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        certificateId: string, ifMatch: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: certificateId
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.deleteMethod_1
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes specific certificate.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, serviceName: string,
        certificateId: string, ifMatch: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: certificateId
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.deleteMethodWithHttpOperationResponse
    name: >-
      deleteMethodWithHttpOperationResponse(string, string, string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes specific certificate.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, certificateId: string, ifMatch: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: certificateId
          type:
            - string
          description: |
            Identifier of the certificate entity. Must be
            unique in the current API Management service instance.
        - id: ifMatch
          type:
            - string
          description: >
            ETag of the Entity. ETag should match the current

            entity state from the header response of the GET request or it
            should be *

            for unconditional update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.get
    name: 'get(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the certificate specified by its identifier.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string,
        certificateId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: certificateId
          type:
            - string
          description: |
            Identifier of the certificate entity. Must be
            unique in the current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.get_2
    name: 'get(string, string, string, Object, ServiceCallback<CertificateContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the certificate specified by its identifier.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string,
        certificateId: string, options: Object, callback:
        ServiceCallback<CertificateContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: certificateId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.CertificateContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.get_1
    name: 'get(string, string, string, ServiceCallback<CertificateContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the certificate specified by its identifier.
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string,
        certificateId: string, callback: ServiceCallback<CertificateContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: certificateId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.CertificateContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.getEntityTag
    name: 'getEntityTag(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the certificate specified by its
      identifier.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        certificateId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: certificateId
          type:
            - string
          description: |
            Identifier of the certificate entity. Must be
            unique in the current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.getEntityTag_2
    name: 'getEntityTag(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the certificate specified by its
      identifier.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        certificateId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: certificateId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.getEntityTag_1
    name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the certificate specified by its
      identifier.
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        certificateId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: certificateId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.getEntityTagWithHttpOperationResponse
    name: 'getEntityTagWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the entity state (Etag) version of the certificate specified by its
      identifier.
    syntax:
      content: >-
        function getEntityTagWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, certificateId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: certificateId
          type:
            - string
          description: |
            Identifier of the certificate entity. Must be
            unique in the current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the details of the certificate specified by its identifier.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        serviceName: string, certificateId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: certificateId
          type:
            - string
          description: |
            Identifier of the certificate entity. Must be
            unique in the current API Management service instance.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.CertificateContract>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.listByService
    name: 'listByService(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of all certificates in the specified service instance.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.listByService_2
    name: >-
      listByService(string, string, Object,
      ServiceCallback<CertificateCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of all certificates in the specified service instance.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: Object, callback: ServiceCallback<CertificateCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.CertificateCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.listByService_1
    name: 'listByService(string, string, ServiceCallback<CertificateCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of all certificates in the specified service instance.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<CertificateCollection>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.CertificateCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.listByServiceNext
    name: 'listByServiceNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of all certificates in the specified service instance.
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.listByServiceNext_2
    name: 'listByServiceNext(string, Object, ServiceCallback<CertificateCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of all certificates in the specified service instance.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<CertificateCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.CertificateCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateCollection>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.listByServiceNext_1
    name: 'listByServiceNext(string, ServiceCallback<CertificateCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of all certificates in the specified service instance.
    syntax:
      content: >-
        function listByServiceNext(nextPageLink: string, callback:
        ServiceCallback<CertificateCollection>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.CertificateCollection>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.CertificateCollection>
    package: azure-arm-apimanagement
  - uid: >-
      azure-arm-apimanagement.Certificate.listByServiceNextWithHttpOperationResponse
    name: 'listByServiceNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of all certificates in the specified service instance.
    syntax:
      content: >-
        function listByServiceNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.CertificateCollection>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.Certificate.listByServiceWithHttpOperationResponse
    name: 'listByServiceWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists a collection of all certificates in the specified service instance.
    syntax:
      content: >-
        function listByServiceWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.CertificateCollection>>
    package: azure-arm-apimanagement
references:
  - uid: azure-arm-apimanagement.CertificateCreateOrUpdateParameters
    name: CertificateCreateOrUpdateParameters
    spec.typeScript:
      - name: CertificateCreateOrUpdateParameters
        fullName: CertificateCreateOrUpdateParameters
        uid: azure-arm-apimanagement.CertificateCreateOrUpdateParameters
  - uid: Promise<azure-arm-apimanagement.CertificateContract>
    name: CertificateContract>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificateContract
        fullName: CertificateContract
        uid: azure-arm-apimanagement.CertificateContract
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-apimanagement.CertificateContract>
    name: CertificateContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificateContract
        fullName: CertificateContract
        uid: azure-arm-apimanagement.CertificateContract
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-apimanagement.CertificateContract>>
    name: CertificateContract>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificateContract
        fullName: CertificateContract
        uid: azure-arm-apimanagement.CertificateContract
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-apimanagement.CertificateCollection>
    name: CertificateCollection>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificateCollection
        fullName: CertificateCollection
        uid: azure-arm-apimanagement.CertificateCollection
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-apimanagement.CertificateCollection>
    name: CertificateCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificateCollection
        fullName: CertificateCollection
        uid: azure-arm-apimanagement.CertificateCollection
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-apimanagement.CertificateCollection>>
    name: CertificateCollection>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificateCollection
        fullName: CertificateCollection
        uid: azure-arm-apimanagement.CertificateCollection
      - name: '>>'
        fullName: '>>'
