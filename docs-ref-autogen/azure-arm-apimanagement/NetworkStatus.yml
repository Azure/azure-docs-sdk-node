### YamlMime:UniversalReference
items:
  - uid: azure-arm-apimanagement.NetworkStatus
    name: NetworkStatus
    fullName: NetworkStatus
    children:
      - azure-arm-apimanagement.NetworkStatus.listByLocation
      - azure-arm-apimanagement.NetworkStatus.listByLocation_2
      - azure-arm-apimanagement.NetworkStatus.listByLocation_1
      - >-
        azure-arm-apimanagement.NetworkStatus.listByLocationWithHttpOperationResponse
      - azure-arm-apimanagement.NetworkStatus.listByService
      - azure-arm-apimanagement.NetworkStatus.listByService_2
      - azure-arm-apimanagement.NetworkStatus.listByService_1
      - >-
        azure-arm-apimanagement.NetworkStatus.listByServiceWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.NetworkStatus.listByLocation
    name: 'listByLocation(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Connectivity Status to the external resources on which the Api

      Management service depends from inside the Cloud Service. This also
      returns

      the DNS Servers as visible to the CloudService.
    syntax:
      content: >-
        function listByLocation(resourceGroupName: string, serviceName: string,
        locationName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: locationName
          type:
            - string
          description: >
            Location in which the API Management service is

            deployed. This is one of the Azure Regions like West US, East US,
            South

            Central US.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-apimanagement.NetworkStatusContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.NetworkStatus.listByLocation_2
    name: >-
      listByLocation(string, string, string, Object,
      ServiceCallback<NetworkStatusContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Connectivity Status to the external resources on which the Api

      Management service depends from inside the Cloud Service. This also
      returns

      the DNS Servers as visible to the CloudService.
    syntax:
      content: >-
        function listByLocation(resourceGroupName: string, serviceName: string,
        locationName: string, options: Object, callback:
        ServiceCallback<NetworkStatusContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: locationName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.NetworkStatusContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.NetworkStatusContract>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.NetworkStatus.listByLocation_1
    name: >-
      listByLocation(string, string, string,
      ServiceCallback<NetworkStatusContract>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Connectivity Status to the external resources on which the Api

      Management service depends from inside the Cloud Service. This also
      returns

      the DNS Servers as visible to the CloudService.
    syntax:
      content: >-
        function listByLocation(resourceGroupName: string, serviceName: string,
        locationName: string, callback: ServiceCallback<NetworkStatusContract>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: locationName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-apimanagement.NetworkStatusContract>
          description: ''
      return:
        type:
          - Promise<azure-arm-apimanagement.NetworkStatusContract>
    package: azure-arm-apimanagement
  - uid: >-
      azure-arm-apimanagement.NetworkStatus.listByLocationWithHttpOperationResponse
    name: 'listByLocationWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Connectivity Status to the external resources on which the Api

      Management service depends from inside the Cloud Service. This also
      returns

      the DNS Servers as visible to the CloudService.
    syntax:
      content: >-
        function listByLocationWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, locationName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: locationName
          type:
            - string
          description: >
            Location in which the API Management service is

            deployed. This is one of the Azure Regions like West US, East US,
            South

            Central US.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.NetworkStatusContract>>
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.NetworkStatus.listByService
    name: 'listByService(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Connectivity Status to the external resources on which the Api

      Management service depends from inside the Cloud Service. This also
      returns

      the DNS Servers as visible to the CloudService.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - 'Promise<azure-arm-apimanagement.NetworkStatusContractByLocation[]>'
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.NetworkStatus.listByService_2
    name: >-
      listByService(string, string, Object,
      ServiceCallback<NetworkStatusContractByLocation[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Connectivity Status to the external resources on which the Api

      Management service depends from inside the Cloud Service. This also
      returns

      the DNS Servers as visible to the CloudService.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options: Object, callback:
        ServiceCallback<NetworkStatusContractByLocation[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-apimanagement.NetworkStatusContractByLocation[]>
          description: ''
      return:
        type:
          - 'Promise<azure-arm-apimanagement.NetworkStatusContractByLocation[]>'
    package: azure-arm-apimanagement
  - uid: azure-arm-apimanagement.NetworkStatus.listByService_1
    name: >-
      listByService(string, string,
      ServiceCallback<NetworkStatusContractByLocation[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Connectivity Status to the external resources on which the Api

      Management service depends from inside the Cloud Service. This also
      returns

      the DNS Servers as visible to the CloudService.
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        callback: ServiceCallback<NetworkStatusContractByLocation[]>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: serviceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-apimanagement.NetworkStatusContractByLocation[]>
          description: ''
      return:
        type:
          - 'Promise<azure-arm-apimanagement.NetworkStatusContractByLocation[]>'
    package: azure-arm-apimanagement
  - uid: >-
      azure-arm-apimanagement.NetworkStatus.listByServiceWithHttpOperationResponse
    name: 'listByServiceWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the Connectivity Status to the external resources on which the Api

      Management service depends from inside the Cloud Service. This also
      returns

      the DNS Servers as visible to the CloudService.
    syntax:
      content: >-
        function listByServiceWithHttpOperationResponse(resourceGroupName:
        string, serviceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: serviceName
          type:
            - string
          description: |
            The name of the API Management service.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-apimanagement.NetworkStatusContractByLocation[]>>
    package: azure-arm-apimanagement
references:
  - uid: Promise<azure-arm-apimanagement.NetworkStatusContract>
    name: NetworkStatusContract>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NetworkStatusContract
        fullName: NetworkStatusContract
        uid: azure-arm-apimanagement.NetworkStatusContract
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-apimanagement.NetworkStatusContract>
    name: NetworkStatusContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NetworkStatusContract
        fullName: NetworkStatusContract
        uid: azure-arm-apimanagement.NetworkStatusContract
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-apimanagement.NetworkStatusContract>>
    name: NetworkStatusContract>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: NetworkStatusContract
        fullName: NetworkStatusContract
        uid: azure-arm-apimanagement.NetworkStatusContract
      - name: '>>'
        fullName: '>>'
  - uid: 'Promise<azure-arm-apimanagement.NetworkStatusContractByLocation[]>'
    name: 'NetworkStatusContractByLocation[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NetworkStatusContractByLocation
        fullName: NetworkStatusContractByLocation
        uid: azure-arm-apimanagement.NetworkStatusContractByLocation
      - name: '[]>'
        fullName: '[]>'
  - uid: 'ServiceCallback<azure-arm-apimanagement.NetworkStatusContractByLocation[]>'
    name: 'NetworkStatusContractByLocation[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NetworkStatusContractByLocation
        fullName: NetworkStatusContractByLocation
        uid: azure-arm-apimanagement.NetworkStatusContractByLocation
      - name: '[]>'
        fullName: '[]>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-apimanagement.NetworkStatusContractByLocation[]>>
    name: 'NetworkStatusContractByLocation[]>>'
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: NetworkStatusContractByLocation
        fullName: NetworkStatusContractByLocation
        uid: azure-arm-apimanagement.NetworkStatusContractByLocation
      - name: '[]>>'
        fullName: '[]>>'
