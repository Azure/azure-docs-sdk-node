### YamlMime:UniversalReference
items:
  - uid: adal-node.AuthenticationContext
    id: adal-node.AuthenticationContext
    name: AuthenticationContext
    summary: "Creates a new AuthenticationContext object.  By default the authority will be checked against\ra list of known Azure Active Directory authorities.  If the authority is not recognized as\rone of these well known authorities then token acquisition will fail.  This behavior can be\rturned off via the validateAuthority parameter below."
    fullName: adal-node.AuthenticationContext
    type: Class
    children:
      - 'adal-node.AuthenticationContext.#ctor'
      - 'adal-node.AuthenticationContext#authority'
      - 'adal-node.AuthenticationContext#correlationId'
      - 'adal-node.AuthenticationContext#options'
      - 'adal-node.AuthenticationContext#cache'
      - 'adal-node.AuthenticationContext#acquireToken'
      - 'adal-node.AuthenticationContext#acquireTokenWithUsernamePassword'
      - 'adal-node.AuthenticationContext#acquireTokenWithClientCredentials'
      - 'adal-node.AuthenticationContext#acquireTokenWithAuthorizationCode'
      - 'adal-node.AuthenticationContext#acquireTokenWithRefreshToken'
      - 'adal-node.AuthenticationContext#acquireTokenWithClientCertificate'
      - 'adal-node.AuthenticationContext#acquireUserCode'
      - 'adal-node.AuthenticationContext#acquireTokenWithDeviceCode'
      - 'adal-node.AuthenticationContext#cancelRequestToGetTokenWithDeviceCode'
    langs:
      - js
  - id: 'adal-node.AuthenticationContext.#ctor'
    uid: 'adal-node.AuthenticationContext.#ctor'
    parent: adal-node.AuthenticationContext
    name: 'AuthenticationContext(authority, validateAuthority, cache)'
    fullName: >-
      adal-node.AuthenticationContext.AuthenticationContext(authority,
      validateAuthority, cache)
    summary: "Creates a new AuthenticationContext object.  By default the authority will be checked against\ra list of known Azure Active Directory authorities.  If the authority is not recognized as\rone of these well known authorities then token acquisition will fail.  This behavior can be\rturned off via the validateAuthority parameter below."
    type: Constructor
    syntax:
      parameters:
        - id: authority
          type:
            - string
          description: A URL that identifies a token authority.
        - id: validateAuthority
          type:
            - undefinedbool
          description: >-
            Turns authority validation on or off.  This parameter default to
            true.
          optional: true
        - id: cache
          type:
            - undefinedTokenCache
          description: "Sets the token cache used by this AuthenticationContext instance.  If this parameter is not set\r                                      then a default, in memory cache is used.  The default in memory cache is global to the process and is\r                                      shared by all AuthenticationContexts that are created with an empty cache parameter.  To control the\r                                      scope and lifetime of a cache you can either create a <xref:MemoryCache> instance and pass it when\r                                      constructing an AuthenticationContext or implement a custom <xref:TokenCache> and pass that.  Cache\r                                      instances passed at AuthenticationContext construction time are only used by that instance of\r                                      the AuthenticationContext and are not shared unless it has been manually passed during the\r                                      construction of other AuthenticationContexts."
          optional: true
      content: 'new AuthenticationContext(authority, validateAuthority, cache)'
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#authority'
    id: 'adal-node.AuthenticationContext#authority'
    parent: adal-node.AuthenticationContext
    name: authority
    summary: Gets the authority url this AuthenticationContext was constructed with.
    fullName: adal-node.AuthenticationContext.authority
    type: Member
    syntax:
      return:
        type:
          - string
      content: authority
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#correlationId'
    id: 'adal-node.AuthenticationContext#correlationId'
    parent: adal-node.AuthenticationContext
    name: correlationId
    summary: >-
      Gets/Sets the correlation id that will be used for the next acquireToken
      request.
    fullName: adal-node.AuthenticationContext.correlationId
    type: Member
    syntax:
      return:
        type:
          - string
      content: correlationId
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#options'
    id: 'adal-node.AuthenticationContext#options'
    parent: adal-node.AuthenticationContext
    name: options
    summary: >-
      Get/Sets options that are applied to requests generated by this
      AuthenticationContext instance.
    fullName: adal-node.AuthenticationContext.options
    type: Member
    syntax:
      return:
        type:
          - object
      content: options
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#cache'
    id: 'adal-node.AuthenticationContext#cache'
    parent: adal-node.AuthenticationContext
    name: cache
    summary: Get the token cache used by this AuthenticationContext instance.
    fullName: adal-node.AuthenticationContext.cache
    type: Member
    syntax:
      return:
        type:
          - object
      content: cache
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#acquireToken'
    id: 'adal-node.AuthenticationContext#acquireToken'
    parent: adal-node.AuthenticationContext
    name: 'acquireToken(resource, userId, clientId, callback)'
    summary: Gets a token for a given resource.
    fullName: >-
      adal-node.AuthenticationContext.acquireToken(resource, userId, clientId,
      callback)
    type: Function
    syntax:
      parameters:
        - id: resource
          type:
            - string
          description: A URI that identifies the resource for which the token is valid.
        - id: userId
          type:
            - string
          description: >-
            The username of the user on behalf this application is
            authenticating.
          optional: true
        - id: clientId
          type:
            - string
          description: The OAuth client id of the calling application.
          optional: true
        - id: callback
          type:
            - adal-node.AcquireTokenCallback
          description: The callback function.
      content: 'function acquireToken(resource, userId, clientId, callback)'
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#acquireTokenWithUsernamePassword'
    id: 'adal-node.AuthenticationContext#acquireTokenWithUsernamePassword'
    parent: adal-node.AuthenticationContext
    name: >-
      acquireTokenWithUsernamePassword(resource, username, password, clientId,
      callback)
    summary: Gets a token for a given resource.
    fullName: >-
      adal-node.AuthenticationContext.acquireTokenWithUsernamePassword(resource,
      username, password, clientId, callback)
    type: Function
    syntax:
      parameters:
        - id: resource
          type:
            - string
          description: A URI that identifies the resource for which the token is valid.
        - id: username
          type:
            - string
          description: >-
            The username of the user on behalf this application is
            authenticating.
        - id: password
          type:
            - string
          description: The password of the user named in the username parameter.
        - id: clientId
          type:
            - string
          description: The OAuth client id of the calling application.
        - id: callback
          type:
            - adal-node.AcquireTokenCallback
          description: The callback function.
      content: >-
        function acquireTokenWithUsernamePassword(resource, username, password,
        clientId, callback)
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#acquireTokenWithClientCredentials'
    id: 'adal-node.AuthenticationContext#acquireTokenWithClientCredentials'
    parent: adal-node.AuthenticationContext
    name: >-
      acquireTokenWithClientCredentials(resource, clientId, clientSecret,
      callback)
    summary: Gets a token for a given resource.
    fullName: >-
      adal-node.AuthenticationContext.acquireTokenWithClientCredentials(resource,
      clientId, clientSecret, callback)
    type: Function
    syntax:
      parameters:
        - id: resource
          type:
            - string
          description: A URI that identifies the resource for which the token is valid.
        - id: clientId
          type:
            - string
          description: The OAuth client id of the calling application.
        - id: clientSecret
          type:
            - string
          description: The OAuth client secret of the calling application.
        - id: callback
          type:
            - adal-node.AcquireTokenCallback
          description: The callback function.
      content: >-
        function acquireTokenWithClientCredentials(resource, clientId,
        clientSecret, callback)
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#acquireTokenWithAuthorizationCode'
    id: 'adal-node.AuthenticationContext#acquireTokenWithAuthorizationCode'
    parent: adal-node.AuthenticationContext
    name: >-
      acquireTokenWithAuthorizationCode(authorizationCode, redirectUri,
      resource, clientId, clientSecret, callback)
    summary: Gets a token for a given resource.
    fullName: >-
      adal-node.AuthenticationContext.acquireTokenWithAuthorizationCode(authorizationCode,
      redirectUri, resource, clientId, clientSecret, callback)
    type: Function
    syntax:
      parameters:
        - id: authorizationCode
          type:
            - string
          description: An authorization code returned from a client.
        - id: redirectUri
          type:
            - string
          description: The redirect uri that was used in the authorize call.
        - id: resource
          type:
            - string
          description: A URI that identifies the resource for which the token is valid.
        - id: clientId
          type:
            - string
          description: The OAuth client id of the calling application.
        - id: clientSecret
          type:
            - string
          description: The OAuth client secret of the calling application.
        - id: callback
          type:
            - adal-node.AcquireTokenCallback
          description: The callback function.
      content: >-
        function acquireTokenWithAuthorizationCode(authorizationCode,
        redirectUri, resource, clientId, clientSecret, callback)
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#acquireTokenWithRefreshToken'
    id: 'adal-node.AuthenticationContext#acquireTokenWithRefreshToken'
    parent: adal-node.AuthenticationContext
    name: >-
      acquireTokenWithRefreshToken(refreshToken, clientId, clientSecret,
      resource, callback)
    summary: Gets a new access token via a previously issued refresh token.
    fullName: >-
      adal-node.AuthenticationContext.acquireTokenWithRefreshToken(refreshToken,
      clientId, clientSecret, resource, callback)
    type: Function
    syntax:
      parameters:
        - id: refreshToken
          type:
            - string
          description: >-
            A refresh token returned in a tokne response from a previous
            invocation of acquireToken.
        - id: clientId
          type:
            - string
          description: The OAuth client id of the calling application.
        - id: clientSecret
          type:
            - string
          description: "The OAuth client secret of the calling application.  (Note: this parameter is a late addition.\r                                                       This parameter may be ommitted entirely so that applications built before this change will continue\r                                                       to work unchanged.)"
          optional: true
        - id: resource
          type:
            - string
          description: >-
            The OAuth resource for which a token is being request.  This
            parameter is optional and can be set to null.
        - id: callback
          type:
            - adal-node.AcquireTokenCallback
          description: The callback function.
      content: >-
        function acquireTokenWithRefreshToken(refreshToken, clientId,
        clientSecret, resource, callback)
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#acquireTokenWithClientCertificate'
    id: 'adal-node.AuthenticationContext#acquireTokenWithClientCertificate'
    parent: adal-node.AuthenticationContext
    name: >-
      acquireTokenWithClientCertificate(resource, clientId, certificate,
      thumbprint, callback)
    summary: Gets a new access token using via a certificate credential.
    fullName: >-
      adal-node.AuthenticationContext.acquireTokenWithClientCertificate(resource,
      clientId, certificate, thumbprint, callback)
    type: Function
    syntax:
      parameters:
        - id: resource
          type:
            - string
          description: A URI that identifies the resource for which the token is valid.
        - id: clientId
          type:
            - string
          description: The OAuth client id of the calling application.
        - id: certificate
          type:
            - string
          description: A PEM encoded certificate private key.
        - id: thumbprint
          type:
            - string
          description: A hex encoded thumbprint of the certificate.
        - id: callback
          type:
            - adal-node.AcquireTokenCallback
          description: The callback function.
      content: >-
        function acquireTokenWithClientCertificate(resource, clientId,
        certificate, thumbprint, callback)
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#acquireUserCode'
    id: 'adal-node.AuthenticationContext#acquireUserCode'
    parent: adal-node.AuthenticationContext
    name: 'acquireUserCode(resource, clientId, language, callback)'
    summary: >-
      Gets the userCodeInfo which contains user_code, device_code for
      authenticating user on device.
    fullName: >-
      adal-node.AuthenticationContext.acquireUserCode(resource, clientId,
      language, callback)
    type: Function
    syntax:
      parameters:
        - id: resource
          type:
            - string
          description: >-
            A URI that identifies the resource for which the device_code and
            user_code is valid for.
        - id: clientId
          type:
            - string
          description: The OAuth client id of the calling application.
        - id: language
          type:
            - string
          description: The language code specifying how the message should be localized to.
        - id: callback
          type:
            - adal-node.AcquireTokenCallback
          description: The callback function.
      content: 'function acquireUserCode(resource, clientId, language, callback)'
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#acquireTokenWithDeviceCode'
    id: 'adal-node.AuthenticationContext#acquireTokenWithDeviceCode'
    parent: adal-node.AuthenticationContext
    name: 'acquireTokenWithDeviceCode(clientId, userCodeInfo, callback)'
    summary: Gets a new access token using via a device code.
    fullName: >-
      adal-node.AuthenticationContext.acquireTokenWithDeviceCode(clientId,
      userCodeInfo, callback)
    tags:
      - originalTitle: note
        title: note
        text: "This method doesn't look up the cache, it only stores the returned token into cache. To look up cache before making a new request, \r      please use acquireToken."
        value: "This method doesn't look up the cache, it only stores the returned token into cache. To look up cache before making a new request, \r      please use acquireToken."
    type: Function
    syntax:
      parameters:
        - id: clientId
          type:
            - string
          description: The OAuth client id of the calling application.
        - id: userCodeInfo
          type:
            - object
          description: >-
            Contains device_code, retry interval, and expire time for the
            request for get the token.
        - id: callback
          type:
            - adal-node.AcquireTokenCallback
          description: The callback function.
      content: 'function acquireTokenWithDeviceCode(clientId, userCodeInfo, callback)'
    langs:
      - js
  - uid: 'adal-node.AuthenticationContext#cancelRequestToGetTokenWithDeviceCode'
    id: 'adal-node.AuthenticationContext#cancelRequestToGetTokenWithDeviceCode'
    parent: adal-node.AuthenticationContext
    name: 'cancelRequestToGetTokenWithDeviceCode(userCodeInfo, callback)'
    summary: Cancels the polling request to get token with device code.
    fullName: >-
      adal-node.AuthenticationContext.cancelRequestToGetTokenWithDeviceCode(userCodeInfo,
      callback)
    type: Function
    syntax:
      parameters:
        - id: userCodeInfo
          type:
            - object
          description: >-
            Contains device_code, retry interval, and expire time for the
            request for get the token.
        - id: callback
          type:
            - adal-node.AcquireTokenCallback
          description: The callback function.
      content: 'function cancelRequestToGetTokenWithDeviceCode(userCodeInfo, callback)'
    langs:
      - js
