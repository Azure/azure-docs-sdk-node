### YamlMime:UniversalReference
items:
  - uid: adal-node.MemoryCache
    name: MemoryCache
    fullName: MemoryCache
    children:
      - adal-node.MemoryCache.add
      - adal-node.MemoryCache.find
      - adal-node.MemoryCache.constructor
      - adal-node.MemoryCache.remove
    langs:
      - typeScript
    type: class
    summary: ''
    package: adal-node
  - uid: adal-node.MemoryCache.add
    name: 'add(TokenResponse[], (err: Error, result: boolean) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a collection of entries to the cache in a single batch operation.
    syntax:
      content: >-
        function add(entries: TokenResponse[], callback: (err: Error, result:
        boolean) => void)
      parameters:
        - id: entries
          type:
            - 'adal-node.TokenResponse[]'
          description: An array of entries to add to the cache.
        - id: callback
          type:
            - '(err: Error, result: boolean) => void'
          description: >
            This function is called when the operation is complete.  Any error
            is provided as the
                                        first parameter.
    package: adal-node
  - uid: adal-node.MemoryCache.find
    name: 'find(any, (err: Error, results: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Finds all entries in the cache that match all of the passed in values.
    syntax:
      content: >-
        function find(query: any, callback: (err: Error, results: any[]) =>
        void)
      parameters:
        - id: query
          type:
            - any
          description: >-
            This object will be compared to each entry in the cache.  Any
            entries that
                                        match all of the values in this object will be returned.  All the values
                                        in the passed in object must match values in a potentialy returned object
                                        exactly.  The returned object may have more values than the passed in query
                                        object. Please take a look at http://underscorejs.org/#where for an example
                                        on how to provide query.
        - id: callback
          type:
            - '(err: Error, results: any[]) => void'
          description: |+

    package: adal-node
  - uid: adal-node.MemoryCache.constructor
    name: MemoryCache()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new MemoryCache()
      parameters: []
    package: adal-node
  - uid: adal-node.MemoryCache.remove
    name: 'remove(TokenResponse[], (err: Error, result: null) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Removes a collection of entries from the cache in a single batch
      operation.
    syntax:
      content: >-
        function remove(entires: TokenResponse[], callback: (err: Error, result:
        null) => void)
      parameters:
        - id: entires
          type:
            - 'adal-node.TokenResponse[]'
          description: ''
        - id: callback
          type:
            - '(err: Error, result: null) => void'
          description: >
            This function is called when the operation is complete.  Any error
            is provided as the
                                        first parameter.
    package: adal-node
references:
  - uid: 'adal-node.TokenResponse[]'
    name: 'TokenResponse[]'
    spec.typeScript:
      - name: TokenResponse
        fullName: TokenResponse
        uid: adal-node.TokenResponse
      - name: '[]'
        fullName: '[]'
