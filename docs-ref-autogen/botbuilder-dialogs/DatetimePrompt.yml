### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs.DatetimePrompt
    id: botbuilder-dialogs.DatetimePrompt
    name: DatetimePrompt
    summary: "Prompts a user to enter a datetime expression. By default the prompt will return to the\rcalling dialog a `FoundDatetime[]` but this can be overridden using a custom `PromptValidator`.\r\r**Example usage:**\r\r```JavaScript\rconst { DialogSet, DatetimePrompt } = require('botbuilder-dialogs');\r\rconst dialogs = new DialogSet();\r\rdialogs.add('datetimePrompt', new DatetimePrompt());\r\rdialogs.add('datetimeDemo', [\r     async function (dc) {\r         return dc.prompt('datetimePrompt', `datetime: enter a datetime`);\r     },\r     async function (dc, values) {\r         await dc.context.sendActivity(`Recognized values: ${JSON.stringify(values)}`);\r         return dc.end();\r     }\r]);\r```"
    fullName: botbuilder-dialogs.DatetimePrompt
    source:
      id: botbuilder-dialogs.DatetimePrompt
      path: libraries\botbuilder-dialogs\lib\prompts\datetimePrompt.js
      startLine: 29
      remote:
        branch: master
        path: libraries\botbuilder-dialogs\lib\prompts\datetimePrompt.js
        repo: 'https://github.com/Microsoft/botbuilder-js.git'
    type: Class
    children:
      - 'botbuilder-dialogs.DatetimePrompt.#ctor'
    langs:
      - js
  - id: 'botbuilder-dialogs.DatetimePrompt.#ctor'
    uid: 'botbuilder-dialogs.DatetimePrompt.#ctor'
    parent: botbuilder-dialogs.DatetimePrompt
    name: 'DatetimePrompt(validator, defaultLocale)'
    fullName: 'botbuilder-dialogs.DatetimePrompt.DatetimePrompt(validator, defaultLocale)'
    summary: "Creates a new instance of the prompt.\r\r**Example usage:**\r\r```JavaScript\rdialogs.add('timePrompt', new DatetimePrompt(async (context, values) => {\r     try {\r         if (!Array.isArray(values) || values.length < 0) { throw new Error('missing time') }\r         if (values[0].type !== 'datetime') { throw new Error('unsupported type') }\r         const value = new Date(values[0].value);\r         if (value.getTime() < new Date().getTime()) { throw new Error('in the past') }\r         return value;\r     } catch (err) {\r         await context.sendActivity(`Invalid time. Answer with a time in the future like \"tomorrow at 9am\" or say \"cancel\".`);\r         return undefined;\r     }\r}));\r```"
    type: Constructor
    syntax:
      parameters:
        - id: validator
          description: >-
            (Optional) validator that will be called each time the user responds
            to the prompt. If the validator replies with a message no additional
            retry prompt will be sent.
        - id: defaultLocale
          description: >-
            (Optional) locale to use if `dc.context.activity.locale` not
            specified. Defaults to a value of `en-us`.
      content: 'new DatetimePrompt(validator, defaultLocale)'
    langs:
      - js
