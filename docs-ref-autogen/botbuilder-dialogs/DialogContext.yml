### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs.DialogContext
    id: botbuilder-dialogs.DialogContext
    name: DialogContext
    summary: Creates a new DialogContext instance.
    fullName: botbuilder-dialogs.DialogContext
    source:
      id: botbuilder-dialogs.DialogContext
      path: libraries\botbuilder-dialogs\lib\dialogContext.js
      startLine: 10
      remote:
        branch: master
        path: libraries\botbuilder-dialogs\lib\dialogContext.js
        repo: 'https://github.com/Microsoft/botbuilder-js.git'
    type: Class
    children:
      - 'botbuilder-dialogs.DialogContext.#ctor'
      - 'botbuilder-dialogs.DialogContext#instance'
      - 'botbuilder-dialogs.DialogContext#dialogResult'
      - 'botbuilder-dialogs.DialogContext#begin'
      - 'botbuilder-dialogs.DialogContext#prompt'
      - 'botbuilder-dialogs.DialogContext#continue'
      - 'botbuilder-dialogs.DialogContext#end'
      - 'botbuilder-dialogs.DialogContext#endAll'
      - 'botbuilder-dialogs.DialogContext#replace'
    langs:
      - js
  - id: 'botbuilder-dialogs.DialogContext.#ctor'
    uid: 'botbuilder-dialogs.DialogContext.#ctor'
    parent: botbuilder-dialogs.DialogContext
    name: 'DialogContext(dialogs, context, stack)'
    fullName: 'botbuilder-dialogs.DialogContext.DialogContext(dialogs, context, stack)'
    summary: Creates a new DialogContext instance.
    type: Constructor
    syntax:
      parameters:
        - id: dialogs
          description: Parent dialog set.
        - id: context
          description: Context for the current turn of conversation with the user.
        - id: stack
          description: Current dialog stack.
      content: 'new DialogContext(dialogs, context, stack)'
    langs:
      - js
  - uid: 'botbuilder-dialogs.DialogContext#instance'
    id: 'botbuilder-dialogs.DialogContext#instance'
    parent: botbuilder-dialogs.DialogContext
    name: instance
    summary: >-
      Returns the cached instance of the active dialog on the top of the stack
      or `undefined` if the stack is empty.
    fullName: botbuilder-dialogs.DialogContext.instance
    type: Member
    syntax:
      content: instance
    langs:
      - js
  - uid: 'botbuilder-dialogs.DialogContext#dialogResult'
    id: 'botbuilder-dialogs.DialogContext#dialogResult'
    parent: botbuilder-dialogs.DialogContext
    name: dialogResult
    summary: "Returns a structure that indicates whether there is still an active dialog on the stack\ralong with the result returned by a dialog that just ended."
    fullName: botbuilder-dialogs.DialogContext.dialogResult
    type: Member
    syntax:
      content: dialogResult
    langs:
      - js
  - uid: 'botbuilder-dialogs.DialogContext#begin'
    id: 'botbuilder-dialogs.DialogContext#begin'
    parent: botbuilder-dialogs.DialogContext
    name: 'begin(dialogId, dialogArgs)'
    summary: "Pushes a new dialog onto the dialog stack.\r\r**Example usage:**\r\r```JavaScript\rconst dc = dialogs.createContext(context, stack);\rreturn dc.begin('greeting', user);\r```"
    fullName: 'botbuilder-dialogs.DialogContext.begin(dialogId, dialogArgs)'
    type: Function
    syntax:
      parameters:
        - id: dialogId
          description: ID of the dialog to start.
        - id: dialogArgs
          description: >-
            (Optional) additional argument(s) to pass to the dialog being
            started.
      content: 'function begin(dialogId, dialogArgs)'
    langs:
      - js
  - uid: 'botbuilder-dialogs.DialogContext#prompt'
    id: 'botbuilder-dialogs.DialogContext#prompt'
    parent: botbuilder-dialogs.DialogContext
    name: 'prompt(O, dialogId, prompt, choicesOrOptions, options)'
    summary: "Helper function to simplify formatting the options for calling a prompt dialog. This helper will\rconstruct a `PromptOptions` structure and then call [begin(context, dialogId, options)](#begin).\r\r**Example usage:**\r\r```JavaScript\rreturn dc.prompt('confirmPrompt', `Are you sure you'd like to quit?`);\r```"
    fullName: >-
      botbuilder-dialogs.DialogContext.prompt(O, dialogId, prompt,
      choicesOrOptions, options)
    type: Function
    syntax:
      parameters:
        - id: O
          description: (Optional) type of options expected by the prompt.
        - id: dialogId
          description: ID of the prompt to start.
        - id: prompt
          description: Initial prompt to send the user.
        - id: choicesOrOptions
          description: >-
            (Optional) array of choices to prompt the user for or additional
            prompt options.
        - id: options
          description: (Optional) additional prompt options.
      content: 'function prompt(O, dialogId, prompt, choicesOrOptions, options)'
    langs:
      - js
  - uid: 'botbuilder-dialogs.DialogContext#continue'
    id: 'botbuilder-dialogs.DialogContext#continue'
    parent: botbuilder-dialogs.DialogContext
    name: continue()
    summary: "Continues execution of the active dialog, if there is one, by passing the context object to\rits `Dialog.continue()` method. You can check `context.responded` after the call completes\rto determine if a dialog was run and a reply was sent to the user.\r\r**Example usage:**\r\r```JavaScript\rconst dc = dialogs.createContext(context, dialogStack);\rreturn dc.continue().then(() => {\r     if (!context.responded) {\r         return dc.begin('fallback');\r     }\r});\r```"
    fullName: botbuilder-dialogs.DialogContext.continue()
    type: Function
    syntax:
      content: function continue()
    langs:
      - js
  - uid: 'botbuilder-dialogs.DialogContext#end'
    id: 'botbuilder-dialogs.DialogContext#end'
    parent: botbuilder-dialogs.DialogContext
    name: end(result)
    summary: "Ends a dialog by popping it off the stack and returns an optional result to the dialogs\rparent. The parent dialog is the dialog the started the on being ended via a call to\reither [begin()](#begin) or [prompt()](#prompt).\r\rThe parent dialog will have its `Dialog.resume()` method invoked with any returned\rresult. If the parent dialog hasn't implemented a `resume()` method then it will be\rautomatically ended as well and the result passed to its parent. If there are no more\rparent dialogs on the stack then processing of the turn will end.\r\r**Example usage:**\r\r```JavaScript\rdialogs.add('showUptime', [\r     function (dc) {\r         const elapsed = new Date().getTime() - started;\r         dc.batch.reply(`I've been running for ${elapsed / 1000} seconds.`);\r         return dc.end(elapsed);\r     }\r]);\rconst started = new Date().getTime();\r```"
    fullName: botbuilder-dialogs.DialogContext.end(result)
    type: Function
    syntax:
      parameters:
        - id: result
          description: >-
            (Optional) result to pass to the parent dialogs `Dialog.resume()`
            method.
      content: function end(result)
    langs:
      - js
  - uid: 'botbuilder-dialogs.DialogContext#endAll'
    id: 'botbuilder-dialogs.DialogContext#endAll'
    parent: botbuilder-dialogs.DialogContext
    name: endAll()
    summary: "Deletes any existing dialog stack thus cancelling all dialogs on the stack.\r\r**Example usage:**\r\r```JavaScript\rawait dc.endAll().begin('bookFlightTask');\r```"
    fullName: botbuilder-dialogs.DialogContext.endAll()
    type: Function
    syntax:
      content: function endAll()
    langs:
      - js
  - uid: 'botbuilder-dialogs.DialogContext#replace'
    id: 'botbuilder-dialogs.DialogContext#replace'
    parent: botbuilder-dialogs.DialogContext
    name: 'replace(dialogId, dialogArgs)'
    summary: "Ends the active dialog and starts a new dialog in its place. This is particularly useful\rfor creating loops or redirecting to another dialog.\r\r**Example usage:**\r\r```JavaScript\rdialogs.add('loop', [\r     function (dc, args) {\r         dc.instance.state = args;\r         return dc.begin(args.dialogId);\r     },\r     function (dc) {\r         const args = dc.instance.state;\r         return dc.replace('loop', args);\r     }\r]);\r```"
    fullName: 'botbuilder-dialogs.DialogContext.replace(dialogId, dialogArgs)'
    type: Function
    syntax:
      parameters:
        - id: dialogId
          description: ID of the new dialog to start.
        - id: dialogArgs
          description: (Optional) additional argument(s) to pass to the new dialog.
      content: 'function replace(dialogId, dialogArgs)'
    langs:
      - js
