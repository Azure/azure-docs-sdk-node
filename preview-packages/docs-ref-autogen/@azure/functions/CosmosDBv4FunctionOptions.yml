### YamlMime:TSType
name: CosmosDBv4FunctionOptions
uid: '@azure/functions.CosmosDBv4FunctionOptions'
package: '@azure/functions'
summary: ''
fullName: CosmosDBv4FunctionOptions
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: handler
    uid: '@azure/functions.CosmosDBv4FunctionOptions.handler'
    package: '@azure/functions'
    summary: ''
    fullName: handler
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'handler: CosmosDBv4Handler'
      return:
        description: ''
        type: <xref uid="@azure/functions.CosmosDBv4Handler" />
  - name: trigger
    uid: '@azure/functions.CosmosDBv4FunctionOptions.trigger'
    package: '@azure/functions'
    summary: ''
    fullName: trigger
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'trigger?: CosmosDBv4Trigger'
      return:
        description: ''
        type: <xref uid="@azure/functions.CosmosDBv4Trigger" />
inheritedProperties:
  - name: connection
    uid: '@azure/functions.CosmosDBv4FunctionOptions.connection'
    package: '@azure/functions'
    summary: >-
      An app setting (or environment variable) with the Cosmos DB connection
      string
    fullName: connection
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'connection: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.connection](xref:@azure/functions.CosmosDBv4TriggerOptions.connection)
  - name: containerName
    uid: '@azure/functions.CosmosDBv4FunctionOptions.containerName'
    package: '@azure/functions'
    summary: The name of the container being monitored
    fullName: containerName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'containerName: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.containerName](xref:@azure/functions.CosmosDBv4TriggerOptions.containerName)
  - name: createLeaseContainerIfNotExists
    uid: '@azure/functions.CosmosDBv4FunctionOptions.createLeaseContainerIfNotExists'
    package: '@azure/functions'
    summary: >-
      Checks for existence and automatically creates the leases container.
      Default is `false`
    fullName: createLeaseContainerIfNotExists
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'createLeaseContainerIfNotExists?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.createLeaseContainerIfNotExists](xref:@azure/functions.CosmosDBv4TriggerOptions.createLeaseContainerIfNotExists)
  - name: databaseName
    uid: '@azure/functions.CosmosDBv4FunctionOptions.databaseName'
    package: '@azure/functions'
    summary: >-
      The name of the Azure Cosmos DB database with the container being
      monitored
    fullName: databaseName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'databaseName: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.databaseName](xref:@azure/functions.CosmosDBv4TriggerOptions.databaseName)
  - name: extraInputs
    uid: '@azure/functions.CosmosDBv4FunctionOptions.extraInputs'
    package: '@azure/functions'
    summary: |-
      Configuration for an optional set of secondary inputs
      During invocation, get these values with `context.extraInputs.get()`
    fullName: extraInputs
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'extraInputs?: FunctionInput[]'
      return:
        description: ''
        type: <xref uid="@azure/functions.FunctionInput" />[]
    inheritanceDescription: <b>Inherited From</b> Partial.extraInputs
  - name: extraOutputs
    uid: '@azure/functions.CosmosDBv4FunctionOptions.extraOutputs'
    package: '@azure/functions'
    summary: |-
      Configuration for an optional set of secondary outputs
      During invocation, set these values with `context.extraOutputs.set()`
    fullName: extraOutputs
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'extraOutputs?: FunctionOutput[]'
      return:
        description: ''
        type: <xref uid="@azure/functions.FunctionOutput" />[]
    inheritanceDescription: <b>Inherited From</b> Partial.extraOutputs
  - name: feedPollDelay
    uid: '@azure/functions.CosmosDBv4FunctionOptions.feedPollDelay'
    package: '@azure/functions'
    summary: >-
      The time (in milliseconds) for the delay between polling a partition for
      new changes on the feed, after all current changes are drained.

      Default is 5,000 milliseconds, or 5 seconds.
    fullName: feedPollDelay
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'feedPollDelay?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.feedPollDelay](xref:@azure/functions.CosmosDBv4TriggerOptions.feedPollDelay)
  - name: id
    uid: '@azure/functions.CosmosDBv4FunctionOptions.id'
    package: '@azure/functions'
    summary: >-
      The ID of the document to retrieve. This property supports [binding
      expressions](https://docs.microsoft.com/azure/azure-functions/functions-bindings-expressions-patterns).

      Don't set both the id and sqlQuery properties. If you don't set either
      one, the entire container is retrieved.
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'id?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.id](xref:@azure/functions.CosmosDBv4TriggerOptions.id)
  - name: leaseAcquireInterval
    uid: '@azure/functions.CosmosDBv4FunctionOptions.leaseAcquireInterval'
    package: '@azure/functions'
    summary: >-
      When set, it defines, in milliseconds, the interval to kick off a task to
      compute if partitions are distributed evenly among known host instances.

      Default is 13000 (13 seconds).
    fullName: leaseAcquireInterval
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseAcquireInterval?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.leaseAcquireInterval](xref:@azure/functions.CosmosDBv4TriggerOptions.leaseAcquireInterval)
  - name: leaseConnection
    uid: '@azure/functions.CosmosDBv4FunctionOptions.leaseConnection'
    package: '@azure/functions'
    summary: >-
      The name of an app setting that contains the connection string to the
      service which holds the lease container.

      If not set it will connect to the service defined by `connection`
    fullName: leaseConnection
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseConnection?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.leaseConnection](xref:@azure/functions.CosmosDBv4TriggerOptions.leaseConnection)
  - name: leaseContainerName
    uid: '@azure/functions.CosmosDBv4FunctionOptions.leaseContainerName'
    package: '@azure/functions'
    summary: >-
      The name of the container to store leases. If not set, it will use
      "leases"
    fullName: leaseContainerName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseContainerName?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.leaseContainerName](xref:@azure/functions.CosmosDBv4TriggerOptions.leaseContainerName)
  - name: leaseContainerPrefix
    uid: '@azure/functions.CosmosDBv4FunctionOptions.leaseContainerPrefix'
    package: '@azure/functions'
    summary: >-
      When set, the value is added as a prefix to the leases created in the
      Lease container for this function.

      Using a prefix allows two separate Azure Functions to share the same Lease
      container by using different prefixes.
    fullName: leaseContainerPrefix
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseContainerPrefix?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.leaseContainerPrefix](xref:@azure/functions.CosmosDBv4TriggerOptions.leaseContainerPrefix)
  - name: leaseDatabaseName
    uid: '@azure/functions.CosmosDBv4FunctionOptions.leaseDatabaseName'
    package: '@azure/functions'
    summary: >-
      The name of the database that holds the container to store leases. If not
      set, it will use the value of `databaseName`
    fullName: leaseDatabaseName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseDatabaseName?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.leaseDatabaseName](xref:@azure/functions.CosmosDBv4TriggerOptions.leaseDatabaseName)
  - name: leaseExpirationInterval
    uid: '@azure/functions.CosmosDBv4FunctionOptions.leaseExpirationInterval'
    package: '@azure/functions'
    summary: >-
      When set, it defines, in milliseconds, the interval for which the lease is
      taken on a lease representing a partition.

      If the lease is not renewed within this interval, it will cause it to
      expire and ownership of the partition will move to another instance.

      Default is 60000 (60 seconds).
    fullName: leaseExpirationInterval
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseExpirationInterval?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.leaseExpirationInterval](xref:@azure/functions.CosmosDBv4TriggerOptions.leaseExpirationInterval)
  - name: leaseRenewInterval
    uid: '@azure/functions.CosmosDBv4FunctionOptions.leaseRenewInterval'
    package: '@azure/functions'
    summary: >-
      When set, it defines, in milliseconds, the renew interval for all leases
      for partitions currently held by an instance.

      Default is 17000 (17 seconds).
    fullName: leaseRenewInterval
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseRenewInterval?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.leaseRenewInterval](xref:@azure/functions.CosmosDBv4TriggerOptions.leaseRenewInterval)
  - name: leasesContainerThroughput
    uid: '@azure/functions.CosmosDBv4FunctionOptions.leasesContainerThroughput'
    package: '@azure/functions'
    summary: >-
      When `createLeaseContainerIfNotExists` is set to `true`, defines the
      amount of Request Units to assign to the created lease container
    fullName: leasesContainerThroughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leasesContainerThroughput?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.leasesContainerThroughput](xref:@azure/functions.CosmosDBv4TriggerOptions.leasesContainerThroughput)
  - name: maxItemsPerInvocation
    uid: '@azure/functions.CosmosDBv4FunctionOptions.maxItemsPerInvocation'
    package: '@azure/functions'
    summary: >-
      When set, this property sets the maximum number of items received per
      Function call.

      If operations in the monitored container are performed through stored
      procedures, transaction scope is preserved when reading items from the
      change feed.

      As a result, the number of items received could be higher than the
      specified value so that the items changed by the same transaction are
      returned as part of one atomic batch.
    fullName: maxItemsPerInvocation
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxItemsPerInvocation?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.maxItemsPerInvocation](xref:@azure/functions.CosmosDBv4TriggerOptions.maxItemsPerInvocation)
  - name: partitionKey
    uid: '@azure/functions.CosmosDBv4FunctionOptions.partitionKey'
    package: '@azure/functions'
    summary: >-
      Specifies the partition key value for the lookup. May include binding
      parameters. It is required for lookups in partitioned containers
    fullName: partitionKey
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'partitionKey?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.partitionKey](xref:@azure/functions.CosmosDBv4TriggerOptions.partitionKey)
  - name: preferredLocations
    uid: '@azure/functions.CosmosDBv4FunctionOptions.preferredLocations'
    package: '@azure/functions'
    summary: >-
      Defines preferred locations (regions) for geo-replicated database accounts
      in the Azure Cosmos DB service.

      Values should be comma-separated. For example, East US,South Central
      US,North Europe
    fullName: preferredLocations
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'preferredLocations?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.preferredLocations](xref:@azure/functions.CosmosDBv4TriggerOptions.preferredLocations)
  - name: return
    uid: '@azure/functions.CosmosDBv4FunctionOptions.return'
    package: '@azure/functions'
    summary: >-
      Configuration for the optional primary output of the function

      This is the main output that you should set as the return value of the
      function handler during invocation
    fullName: return
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'return?: FunctionOutput'
      return:
        description: ''
        type: <xref uid="@azure/functions.FunctionOutput" />
    inheritanceDescription: <b>Inherited From</b> Partial.return
  - name: sqlQuery
    uid: '@azure/functions.CosmosDBv4FunctionOptions.sqlQuery'
    package: '@azure/functions'
    summary: >-
      An Azure Cosmos DB SQL query used for retrieving multiple documents. The
      property supports runtime bindings, as in this example:

      `SELECT * FROM c where c.departmentId = {departmentId}`

      Don't set both the id and sqlQuery properties. If you don't set either
      one, the entire container is retrieved.
    fullName: sqlQuery
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'sqlQuery?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.sqlQuery](xref:@azure/functions.CosmosDBv4TriggerOptions.sqlQuery)
  - name: startFromBeginning
    uid: '@azure/functions.CosmosDBv4FunctionOptions.startFromBeginning'
    package: '@azure/functions'
    summary: >-
      This option tells the Trigger to read changes from the beginning of the
      container's change history instead of starting at the current time.

      Reading from the beginning only works the first time the trigger starts,
      as in subsequent runs, the checkpoints are already stored.

      Setting this option to true when there are leases already created has no
      effect.
    fullName: startFromBeginning
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'startFromBeginning?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.startFromBeginning](xref:@azure/functions.CosmosDBv4TriggerOptions.startFromBeginning)
  - name: startFromTime
    uid: '@azure/functions.CosmosDBv4FunctionOptions.startFromTime'
    package: '@azure/functions'
    summary: >-
      Gets or sets the date and time from which to initialize the change feed
      read operation.

      The recommended format is ISO 8601 with the UTC designator, such as
      2021-02-16T14:19:29Z.

      This is only used to set the initial trigger state. After the trigger has
      a lease state, changing this value has no effect.
    fullName: startFromTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'startFromTime?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CosmosDBv4TriggerOptions.startFromTime](xref:@azure/functions.CosmosDBv4TriggerOptions.startFromTime)
extends: >-
  <xref uid="@azure/functions.CosmosDBv4TriggerOptions" />,Partial&lt;<xref
  uid="@azure/functions.FunctionOptions" />&gt;
