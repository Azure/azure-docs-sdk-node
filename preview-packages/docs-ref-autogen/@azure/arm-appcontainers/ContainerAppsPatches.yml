### YamlMime:TSType
name: ContainerAppsPatches
uid: '@azure/arm-appcontainers.ContainerAppsPatches'
package: '@azure/arm-appcontainers'
summary: Interface representing a ContainerAppsPatches.
fullName: ContainerAppsPatches
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginApply(string, string, string,
      ContainerAppsPatchesApplyOptionalParams)
    uid: '@azure/arm-appcontainers.ContainerAppsPatches.beginApply'
    package: '@azure/arm-appcontainers'
    summary: Apply a Container Apps Patch resource with patch name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginApply(resourceGroupName: string, containerAppName: string,
        patchName: string, options?: ContainerAppsPatchesApplyOptionalParams):
        Promise<SimplePollerLike<OperationState<ContainerAppsPatchResource>,
        ContainerAppsPatchResource>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: containerAppName
          type: string
          description: Name of the Container App the Patch is associated.
        - id: patchName
          type: string
          description: The name of the patch
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appcontainers.ContainerAppsPatchesApplyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-appcontainers.ContainerAppsPatchResource" />&gt;,
          <xref uid="@azure/arm-appcontainers.ContainerAppsPatchResource"
          />&gt;&gt;
  - name: >-
      beginApplyAndWait(string, string, string,
      ContainerAppsPatchesApplyOptionalParams)
    uid: '@azure/arm-appcontainers.ContainerAppsPatches.beginApplyAndWait'
    package: '@azure/arm-appcontainers'
    summary: Apply a Container Apps Patch resource with patch name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginApplyAndWait(resourceGroupName: string, containerAppName:
        string, patchName: string, options?:
        ContainerAppsPatchesApplyOptionalParams):
        Promise<ContainerAppsPatchResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: containerAppName
          type: string
          description: Name of the Container App the Patch is associated.
        - id: patchName
          type: string
          description: The name of the patch
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appcontainers.ContainerAppsPatchesApplyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-appcontainers.ContainerAppsPatchResource" />&gt;
  - name: >-
      beginDelete(string, string, string,
      ContainerAppsPatchesDeleteOptionalParams)
    uid: '@azure/arm-appcontainers.ContainerAppsPatches.beginDelete'
    package: '@azure/arm-appcontainers'
    summary: Delete specific Container Apps Patch by patch name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, containerAppName:
        string, patchName: string, options?:
        ContainerAppsPatchesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<ContainerAppsPatchesDeleteHeaders>,
        ContainerAppsPatchesDeleteHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: containerAppName
          type: string
          description: Name of the Container App the Patch is associated.
        - id: patchName
          type: string
          description: The name of the patch
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appcontainers.ContainerAppsPatchesDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-appcontainers.ContainerAppsPatchesDeleteHeaders"
          />&gt;, <xref
          uid="@azure/arm-appcontainers.ContainerAppsPatchesDeleteHeaders"
          />&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string,
      ContainerAppsPatchesDeleteOptionalParams)
    uid: '@azure/arm-appcontainers.ContainerAppsPatches.beginDeleteAndWait'
    package: '@azure/arm-appcontainers'
    summary: Delete specific Container Apps Patch by patch name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, containerAppName:
        string, patchName: string, options?:
        ContainerAppsPatchesDeleteOptionalParams):
        Promise<ContainerAppsPatchesDeleteHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: containerAppName
          type: string
          description: Name of the Container App the Patch is associated.
        - id: patchName
          type: string
          description: The name of the patch
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appcontainers.ContainerAppsPatchesDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-appcontainers.ContainerAppsPatchesDeleteHeaders"
          />&gt;
  - name: >-
      beginSkipConfigure(string, string, string, PatchSkipConfig,
      ContainerAppsPatchesSkipConfigureOptionalParams)
    uid: '@azure/arm-appcontainers.ContainerAppsPatches.beginSkipConfigure'
    package: '@azure/arm-appcontainers'
    summary: Configure the Container Apps Patch skip option by patch name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginSkipConfigure(resourceGroupName: string, containerAppName:
        string, patchName: string, patchSkipConfig: PatchSkipConfig, options?:
        ContainerAppsPatchesSkipConfigureOptionalParams):
        Promise<SimplePollerLike<OperationState<ContainerAppsPatchesSkipConfigureHeaders>,
        ContainerAppsPatchesSkipConfigureHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: containerAppName
          type: string
          description: Name of the Container App the Patch is associated.
        - id: patchName
          type: string
          description: The name of the patch
        - id: patchSkipConfig
          type: <xref uid="@azure/arm-appcontainers.PatchSkipConfig" />
          description: Configure patcher to skip a patch or not.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appcontainers.ContainerAppsPatchesSkipConfigureOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-appcontainers.ContainerAppsPatchesSkipConfigureHeaders"
          />&gt;, <xref
          uid="@azure/arm-appcontainers.ContainerAppsPatchesSkipConfigureHeaders"
          />&gt;&gt;
  - name: >-
      beginSkipConfigureAndWait(string, string, string, PatchSkipConfig,
      ContainerAppsPatchesSkipConfigureOptionalParams)
    uid: '@azure/arm-appcontainers.ContainerAppsPatches.beginSkipConfigureAndWait'
    package: '@azure/arm-appcontainers'
    summary: Configure the Container Apps Patch skip option by patch name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginSkipConfigureAndWait(resourceGroupName: string,
        containerAppName: string, patchName: string, patchSkipConfig:
        PatchSkipConfig, options?:
        ContainerAppsPatchesSkipConfigureOptionalParams):
        Promise<ContainerAppsPatchesSkipConfigureHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: containerAppName
          type: string
          description: Name of the Container App the Patch is associated.
        - id: patchName
          type: string
          description: The name of the patch
        - id: patchSkipConfig
          type: <xref uid="@azure/arm-appcontainers.PatchSkipConfig" />
          description: Configure patcher to skip a patch or not.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appcontainers.ContainerAppsPatchesSkipConfigureOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-appcontainers.ContainerAppsPatchesSkipConfigureHeaders"
          />&gt;
  - name: get(string, string, string, ContainerAppsPatchesGetOptionalParams)
    uid: '@azure/arm-appcontainers.ContainerAppsPatches.get'
    package: '@azure/arm-appcontainers'
    summary: Get details for specific Container Apps Patch by patch name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, containerAppName: string,
        patchName: string, options?: ContainerAppsPatchesGetOptionalParams):
        Promise<ContainerAppsPatchResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: containerAppName
          type: string
          description: Name of the Container App the Patch is associated.
        - id: patchName
          type: string
          description: The name of the patch
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appcontainers.ContainerAppsPatchesGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-appcontainers.ContainerAppsPatchResource" />&gt;
  - name: >-
      listByContainerApp(string, string,
      ContainerAppsPatchesListByContainerAppOptionalParams)
    uid: '@azure/arm-appcontainers.ContainerAppsPatches.listByContainerApp'
    package: '@azure/arm-appcontainers'
    summary: List Container Apps Patch resources by ContainerApp.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByContainerApp(resourceGroupName: string, containerAppName:
        string, options?: ContainerAppsPatchesListByContainerAppOptionalParams):
        PagedAsyncIterableIterator<ContainerAppsPatchResource,
        ContainerAppsPatchResource[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: containerAppName
          type: string
          description: Name of the Container App the Patch is associated.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appcontainers.ContainerAppsPatchesListByContainerAppOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-appcontainers.ContainerAppsPatchResource" />, <xref
          uid="@azure/arm-appcontainers.ContainerAppsPatchResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
