### YamlMime:TSType
name: Pools
uid: '@azure/arm-devopsinfrastructure.Pools'
package: '@azure/arm-devopsinfrastructure'
summary: Interface representing a Pools.
fullName: Pools
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, Pool,
      PoolsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-devopsinfrastructure.Pools.beginCreateOrUpdate'
    package: '@azure/arm-devopsinfrastructure'
    summary: Create a Pool
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, poolName:
        string, resource: Pool, options?: PoolsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Pool>, Pool>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: poolName
          type: string
          description: Name of the pool. It needs to be globally unique.
        - id: resource
          type: <xref uid="@azure/arm-devopsinfrastructure.Pool" />
          description: Resource create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-devopsinfrastructure.PoolsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-devopsinfrastructure.Pool" />&gt;, <xref
          uid="@azure/arm-devopsinfrastructure.Pool" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, Pool,
      PoolsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-devopsinfrastructure.Pools.beginCreateOrUpdateAndWait'
    package: '@azure/arm-devopsinfrastructure'
    summary: Create a Pool
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string, poolName:
        string, resource: Pool, options?: PoolsCreateOrUpdateOptionalParams):
        Promise<Pool>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: poolName
          type: string
          description: Name of the pool. It needs to be globally unique.
        - id: resource
          type: <xref uid="@azure/arm-devopsinfrastructure.Pool" />
          description: Resource create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-devopsinfrastructure.PoolsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-devopsinfrastructure.Pool" />&gt;
  - name: beginDelete(string, string, PoolsDeleteOptionalParams)
    uid: '@azure/arm-devopsinfrastructure.Pools.beginDelete'
    package: '@azure/arm-devopsinfrastructure'
    summary: Delete a Pool
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, poolName: string,
        options?: PoolsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<PoolsDeleteHeaders>,
        PoolsDeleteHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: poolName
          type: string
          description: Name of the pool. It needs to be globally unique.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-devopsinfrastructure.PoolsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-devopsinfrastructure.PoolsDeleteHeaders" />&gt;, <xref
          uid="@azure/arm-devopsinfrastructure.PoolsDeleteHeaders" />&gt;&gt;
  - name: beginDeleteAndWait(string, string, PoolsDeleteOptionalParams)
    uid: '@azure/arm-devopsinfrastructure.Pools.beginDeleteAndWait'
    package: '@azure/arm-devopsinfrastructure'
    summary: Delete a Pool
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, poolName: string,
        options?: PoolsDeleteOptionalParams): Promise<PoolsDeleteHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: poolName
          type: string
          description: Name of the pool. It needs to be globally unique.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-devopsinfrastructure.PoolsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-devopsinfrastructure.PoolsDeleteHeaders" />&gt;
  - name: beginUpdate(string, string, PoolUpdate, PoolsUpdateOptionalParams)
    uid: '@azure/arm-devopsinfrastructure.Pools.beginUpdate'
    package: '@azure/arm-devopsinfrastructure'
    summary: Update a Pool
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, poolName: string,
        properties: PoolUpdate, options?: PoolsUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Pool>, Pool>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: poolName
          type: string
          description: Name of the pool. It needs to be globally unique.
        - id: properties
          type: <xref uid="@azure/arm-devopsinfrastructure.PoolUpdate" />
          description: The resource properties to be updated.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-devopsinfrastructure.PoolsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-devopsinfrastructure.Pool" />&gt;, <xref
          uid="@azure/arm-devopsinfrastructure.Pool" />&gt;&gt;
  - name: beginUpdateAndWait(string, string, PoolUpdate, PoolsUpdateOptionalParams)
    uid: '@azure/arm-devopsinfrastructure.Pools.beginUpdateAndWait'
    package: '@azure/arm-devopsinfrastructure'
    summary: Update a Pool
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, poolName: string,
        properties: PoolUpdate, options?: PoolsUpdateOptionalParams):
        Promise<Pool>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: poolName
          type: string
          description: Name of the pool. It needs to be globally unique.
        - id: properties
          type: <xref uid="@azure/arm-devopsinfrastructure.PoolUpdate" />
          description: The resource properties to be updated.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-devopsinfrastructure.PoolsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-devopsinfrastructure.Pool" />&gt;
  - name: get(string, string, PoolsGetOptionalParams)
    uid: '@azure/arm-devopsinfrastructure.Pools.get'
    package: '@azure/arm-devopsinfrastructure'
    summary: Get a Pool
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, poolName: string, options?:
        PoolsGetOptionalParams): Promise<Pool>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: poolName
          type: string
          description: Name of the pool. It needs to be globally unique.
        - id: options
          type: >-
            <xref uid="@azure/arm-devopsinfrastructure.PoolsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-devopsinfrastructure.Pool" />&gt;
  - name: listByResourceGroup(string, PoolsListByResourceGroupOptionalParams)
    uid: '@azure/arm-devopsinfrastructure.Pools.listByResourceGroup'
    package: '@azure/arm-devopsinfrastructure'
    summary: List Pool resources by resource group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        PoolsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Pool, Pool[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-devopsinfrastructure.PoolsListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-devopsinfrastructure.Pool" />, <xref
          uid="@azure/arm-devopsinfrastructure.Pool" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(PoolsListBySubscriptionOptionalParams)
    uid: '@azure/arm-devopsinfrastructure.Pools.listBySubscription'
    package: '@azure/arm-devopsinfrastructure'
    summary: List Pool resources by subscription ID
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        PoolsListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Pool,
        Pool[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-devopsinfrastructure.PoolsListBySubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-devopsinfrastructure.Pool" />, <xref
          uid="@azure/arm-devopsinfrastructure.Pool" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
