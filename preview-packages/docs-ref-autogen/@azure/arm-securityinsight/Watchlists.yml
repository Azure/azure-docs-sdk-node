### YamlMime:TSType
name: Watchlists
uid: '@azure/arm-securityinsight.Watchlists'
package: '@azure/arm-securityinsight'
summary: Interface representing a Watchlists.
fullName: Watchlists
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, Watchlist,
      WatchlistsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-securityinsight.Watchlists.createOrUpdate'
    package: '@azure/arm-securityinsight'
    summary: >-
      Creates or updates a watchlist and its watchlist items (bulk creation,
      e.g. through text/csv content

      type). To create a Watchlist and its items, we should call this endpoint
      with rawContent and

      contentType properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, watchlistAlias: string, watchlist: Watchlist, options?:
        WatchlistsCreateOrUpdateOptionalParams):
        Promise<WatchlistsCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: watchlistAlias
          type: string
          description: Watchlist Alias
        - id: watchlist
          type: <xref uid="@azure/arm-securityinsight.Watchlist" />
          description: The watchlist
        - id: options
          type: >-
            <xref
            uid="@azure/arm-securityinsight.WatchlistsCreateOrUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-securityinsight.WatchlistsCreateOrUpdateResponse"
          />&gt;
  - name: 'delete(string, string, string, WatchlistsDeleteOptionalParams)'
    uid: '@azure/arm-securityinsight.Watchlists.delete'
    package: '@azure/arm-securityinsight'
    summary: Delete a watchlist.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, workspaceName: string,
        watchlistAlias: string, options?: WatchlistsDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: watchlistAlias
          type: string
          description: Watchlist Alias
        - id: options
          type: >-
            <xref
            uid="@azure/arm-securityinsight.WatchlistsDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, string, string, WatchlistsGetOptionalParams)'
    uid: '@azure/arm-securityinsight.Watchlists.get'
    package: '@azure/arm-securityinsight'
    summary: 'Gets a watchlist, without its watchlist items.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        watchlistAlias: string, options?: WatchlistsGetOptionalParams):
        Promise<WatchlistsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: watchlistAlias
          type: string
          description: Watchlist Alias
        - id: options
          type: >-
            <xref uid="@azure/arm-securityinsight.WatchlistsGetOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-securityinsight.WatchlistsGetResponse" />&gt;
  - name: 'list(string, string, WatchlistsListOptionalParams)'
    uid: '@azure/arm-securityinsight.Watchlists.list'
    package: '@azure/arm-securityinsight'
    summary: 'Gets all watchlists, without watchlist items.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, workspaceName: string,
        options?: WatchlistsListOptionalParams):
        PagedAsyncIterableIterator<Watchlist>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: options
          type: >-
            <xref uid="@azure/arm-securityinsight.WatchlistsListOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-securityinsight.Watchlist" />&gt;
