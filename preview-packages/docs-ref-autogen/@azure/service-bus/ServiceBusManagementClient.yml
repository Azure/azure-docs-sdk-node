### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.ServiceBusManagementClient'
    name: ServiceBusManagementClient
    fullName: ServiceBusManagementClient
    children:
      - '@azure/service-bus.ServiceBusManagementClient.createQueue_1'
      - '@azure/service-bus.ServiceBusManagementClient.createQueue'
      - '@azure/service-bus.ServiceBusManagementClient.createRule'
      - '@azure/service-bus.ServiceBusManagementClient.createSubscription'
      - '@azure/service-bus.ServiceBusManagementClient.createSubscription_1'
      - '@azure/service-bus.ServiceBusManagementClient.createTopic'
      - '@azure/service-bus.ServiceBusManagementClient.createTopic_1'
      - '@azure/service-bus.ServiceBusManagementClient.deleteQueue'
      - '@azure/service-bus.ServiceBusManagementClient.deleteRule'
      - '@azure/service-bus.ServiceBusManagementClient.deleteSubscription'
      - '@azure/service-bus.ServiceBusManagementClient.deleteTopic'
      - '@azure/service-bus.ServiceBusManagementClient.getNamespaceProperties'
      - '@azure/service-bus.ServiceBusManagementClient.getQueue'
      - '@azure/service-bus.ServiceBusManagementClient.getQueueRuntimeInfo'
      - '@azure/service-bus.ServiceBusManagementClient.getQueues'
      - '@azure/service-bus.ServiceBusManagementClient.getQueuesRuntimeInfo'
      - '@azure/service-bus.ServiceBusManagementClient.getRule'
      - '@azure/service-bus.ServiceBusManagementClient.getRules'
      - '@azure/service-bus.ServiceBusManagementClient.getSubscription'
      - '@azure/service-bus.ServiceBusManagementClient.getSubscriptionRuntimeInfo'
      - '@azure/service-bus.ServiceBusManagementClient.getSubscriptions'
      - >-
        @azure/service-bus.ServiceBusManagementClient.getSubscriptionsRuntimeInfo
      - '@azure/service-bus.ServiceBusManagementClient.getTopic'
      - '@azure/service-bus.ServiceBusManagementClient.getTopicRuntimeInfo'
      - '@azure/service-bus.ServiceBusManagementClient.getTopics'
      - '@azure/service-bus.ServiceBusManagementClient.getTopicsRuntimeInfo'
      - '@azure/service-bus.ServiceBusManagementClient.queueExists'
      - '@azure/service-bus.ServiceBusManagementClient.sendOperationRequest'
      - '@azure/service-bus.ServiceBusManagementClient.sendRequest'
      - '@azure/service-bus.ServiceBusManagementClient.constructor'
      - '@azure/service-bus.ServiceBusManagementClient.constructor_1'
      - '@azure/service-bus.ServiceBusManagementClient.subscriptionExists'
      - '@azure/service-bus.ServiceBusManagementClient.topicExists'
      - '@azure/service-bus.ServiceBusManagementClient.updateQueue'
      - '@azure/service-bus.ServiceBusManagementClient.updateRule'
      - '@azure/service-bus.ServiceBusManagementClient.updateSubscription'
      - '@azure/service-bus.ServiceBusManagementClient.updateTopic'
    langs:
      - typeScript
    type: class
    summary: >-
      All operations return promises that resolve to an object that has the
      relevant output.

      These objects also have a property called `_response` that you can use if
      you want to

      access the direct response from the service.
    extends:
      name: ServiceClient
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createQueue_1'
    name: 'createQueue(QueueDescription, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a queue configured using the given options
    syntax:
      content: >-
        function createQueue(queue: QueueDescription, operationOptions?:
        OperationOptions)
      parameters:
        - id: queue
          type:
            - '@azure/service-bus.QueueDescription'
          description: >-
            Options to configure the Queue being created.

            For example, you can configure a queue to support partitions or
            sessions.
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.QueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createQueue'
    name: 'createQueue(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a queue with given name, configured using the given options'
    syntax:
      content: >-
        function createQueue(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.QueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createRule'
    name: 'createRule(string, string, RuleDescription, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a rule with given name, configured using the given options.'
    syntax:
      content: >-
        function createRule(topicName: string, subscriptionName: string, rule:
        RuleDescription, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: rule
          type:
            - '@azure/service-bus.RuleDescription'
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.RuleResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createSubscription'
    name: 'createSubscription(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a subscription with given name, configured using the given options'
    syntax:
      content: >-
        function createSubscription(topicName: string, subscriptionName: string,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.SubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createSubscription_1'
    name: 'createSubscription(SubscriptionDescription, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a subscription with given name, configured using the given options'
    syntax:
      content: >-
        function createSubscription(subscription: SubscriptionDescription,
        operationOptions?: OperationOptions)
      parameters:
        - id: subscription
          type:
            - '@azure/service-bus.SubscriptionDescription'
          description: >-
            Options to configure the Subscription being created.

            For example, you can configure a Subscription to support partitions
            or sessions.
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.SubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createTopic'
    name: 'createTopic(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a topic with given name, configured using the given options'
    syntax:
      content: >-
        function createTopic(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.TopicResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.createTopic_1'
    name: 'createTopic(TopicDescription, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a topic with given name, configured using the given options'
    syntax:
      content: >-
        function createTopic(topic: TopicDescription, operationOptions?:
        OperationOptions)
      parameters:
        - id: topic
          type:
            - '@azure/service-bus.TopicDescription'
          description: >-
            Options to configure the Topic being created.

            For example, you can configure a topic to support partitions or
            sessions.
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.TopicResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.deleteQueue'
    name: 'deleteQueue(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a queue.
    syntax:
      content: >-
        function deleteQueue(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.Response>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.deleteRule'
    name: 'deleteRule(string, string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a rule.
    syntax:
      content: >-
        function deleteRule(topicName: string, subscriptionName: string,
        ruleName: string, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.Response>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.deleteSubscription'
    name: 'deleteSubscription(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a subscription.
    syntax:
      content: >-
        function deleteSubscription(topicName: string, subscriptionName: string,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.Response>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.deleteTopic'
    name: 'deleteTopic(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a topic.
    syntax:
      content: >-
        function deleteTopic(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.Response>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getNamespaceProperties'
    name: getNamespaceProperties(OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the metadata related to a service bus
      namespace.
    syntax:
      content: 'function getNamespaceProperties(operationOptions?: OperationOptions)'
      parameters:
        - id: operationOptions
          type:
            - OperationOptions
          description: >+
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.

          optional: true
      return:
        type:
          - Promise<@azure/service-bus.NamespacePropertiesResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getQueue'
    name: 'getQueue(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Queue and its properties.

      If you want to get the Queue runtime info like message count details, use
      `getQueueRuntimeInfo` API.
    syntax:
      content: >-
        function getQueue(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.QueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getQueueRuntimeInfo'
    name: 'getQueueRuntimeInfo(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Queue runtime info like message count
      details.
    syntax:
      content: >-
        function getQueueRuntimeInfo(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.QueueRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getQueues'
    name: getQueues(ListRequestOptions & OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Queue along with its
      properties.

      If you want to get the runtime info of the queues like message count, use
      `getQueuesRuntimeInfo` API instead.
    syntax:
      content: 'function getQueues(options?: ListRequestOptions & OperationOptions)'
      parameters:
        - id: options
          type:
            - '@azure/service-bus.ListRequestOptions & OperationOptions'
          description: >-
            The options include the maxCount and the count of entities to skip,
            the operation options that can be used to abort, trace and control
            other configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.QueuesResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getQueuesRuntimeInfo'
    name: getQueuesRuntimeInfo(ListRequestOptions & OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Queue's runtime info like
      message count details.
    syntax:
      content: >-
        function getQueuesRuntimeInfo(options?: ListRequestOptions &
        OperationOptions)
      parameters:
        - id: options
          type:
            - '@azure/service-bus.ListRequestOptions & OperationOptions'
          description: >-
            The options include the maxCount and the count of entities to skip,
            the operation options that can be used to abort, trace and control
            other configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.QueuesRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getRule'
    name: 'getRule(string, string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Rule with the given name along with all
      its properties.
    syntax:
      content: >-
        function getRule(topicName: string, subscriptionName: string, ruleName:
        string, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.RuleResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getRules'
    name: 'getRules(string, string, ListRequestOptions & OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists existing rules.
    syntax:
      content: >-
        function getRules(topicName: string, subscriptionName: string, options?:
        ListRequestOptions & OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/service-bus.ListRequestOptions & OperationOptions'
          description: >-
            The options include the maxCount and the count of entities to skip,
            the operation options that can be used to abort, trace and control
            other configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.RulesResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getSubscription'
    name: 'getSubscription(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Subscription and its properties.

      If you want to get the Subscription runtime info like message count
      details, use `getSubscriptionRuntimeInfo` API.
    syntax:
      content: >-
        function getSubscription(topicName: string, subscriptionName: string,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.SubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getSubscriptionRuntimeInfo'
    name: 'getSubscriptionRuntimeInfo(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Subscription runtime info like message
      count details.
    syntax:
      content: >-
        function getSubscriptionRuntimeInfo(topicName: string, subscriptionName:
        string, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.SubscriptionRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getSubscriptions'
    name: 'getSubscriptions(string, ListRequestOptions & OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Subscription along with its
      properties.

      If you want to get the runtime info of the subscriptions like message
      count, use `getSubscriptionsRuntimeInfo` API instead.
    syntax:
      content: >-
        function getSubscriptions(topicName: string, options?:
        ListRequestOptions & OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/service-bus.ListRequestOptions & OperationOptions'
          description: >-
            The options include the maxCount and the count of entities to skip,
            the operation options that can be used to abort, trace and control
            other configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.SubscriptionsResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getSubscriptionsRuntimeInfo'
    name: 'getSubscriptionsRuntimeInfo(string, ListRequestOptions & OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Subscription's runtime info
      like message count details.
    syntax:
      content: >-
        function getSubscriptionsRuntimeInfo(topicName: string, options?:
        ListRequestOptions & OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/service-bus.ListRequestOptions & OperationOptions'
          description: >-
            The options include the maxCount and the count of entities to skip,
            the operation options that can be used to abort, trace and control
            other configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.SubscriptionsRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getTopic'
    name: 'getTopic(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Topic and its properties.

      If you want to get the Topic runtime info like subscription count details,
      use `getTopicRuntimeInfo` API.
    syntax:
      content: >-
        function getTopic(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.TopicResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getTopicRuntimeInfo'
    name: 'getTopicRuntimeInfo(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the Topic runtime info like subscription
      count.
    syntax:
      content: >-
        function getTopicRuntimeInfo(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.TopicRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getTopics'
    name: getTopics(ListRequestOptions & OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Topic along with its
      properties.

      If you want to get the runtime info of the topics like subscription count,
      use `getTopicsRuntimeInfo` API instead.
    syntax:
      content: 'function getTopics(options?: ListRequestOptions & OperationOptions)'
      parameters:
        - id: options
          type:
            - '@azure/service-bus.ListRequestOptions & OperationOptions'
          description: >-
            The options include the maxCount and the count of entities to skip,
            the operation options that can be used to abort, trace and control
            other configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.TopicsResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.getTopicsRuntimeInfo'
    name: getTopicsRuntimeInfo(ListRequestOptions & OperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of objects, each representing a Topic's runtime info like
      subscription count.
    syntax:
      content: >-
        function getTopicsRuntimeInfo(options?: ListRequestOptions &
        OperationOptions)
      parameters:
        - id: options
          type:
            - '@azure/service-bus.ListRequestOptions & OperationOptions'
          description: >-
            The options include the maxCount and the count of entities to skip,
            the operation options that can be used to abort, trace and control
            other configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.TopicsRuntimeInfoResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.queueExists'
    name: 'queueExists(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a given queue exists or not.
    syntax:
      content: >-
        function queueExists(queueName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: queueName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.
          optional: true
      return:
        type:
          - Promise<boolean>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResourceLike)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.constructor'
    name: 'ServiceBusManagementClient(string, ServiceBusManagementClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the ServiceBusManagementClient class.
    syntax:
      content: >-
        new ServiceBusManagementClient(connectionString: string, options?:
        ServiceBusManagementClientOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: The connection string needed for the client to connect to Azure.
        - id: options
          type:
            - '@azure/service-bus.ServiceBusManagementClientOptions'
          description: |
            ServiceBusManagementClientOptions
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.constructor_1'
    name: >-
      ServiceBusManagementClient(string, TokenCredential,
      ServiceBusManagementClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the ServiceBusManagementClient class.
    syntax:
      content: >-
        new ServiceBusManagementClient(fullyQualifiedNamespace: string,
        credential: TokenCredential, options?:
        ServiceBusManagementClientOptions)
      parameters:
        - id: fullyQualifiedNamespace
          type:
            - string
          description: |-
            The fully qualified namespace of your Service Bus instance which is
            likely to be similar to <yournamespace>.servicebus.windows.net.
        - id: credential
          type:
            - TokenCredential
          description: >-
            A credential object used by the client to get the token to
            authenticate the connection

            with the Azure Service Bus. See &commat;azure/identity for creating
            the credentials.

            If you're using your own implementation of the `TokenCredential`
            interface against AAD, then set the "scopes" for service-bus

            to be `["https://servicebus.azure.net//user_impersonation"]` to get
            the appropriate token.
        - id: options
          type:
            - '@azure/service-bus.ServiceBusManagementClientOptions'
          description: |
            ServiceBusManagementClientOptions
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.subscriptionExists'
    name: 'subscriptionExists(string, string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a given subscription exists in the topic or not.
    syntax:
      content: >-
        function subscriptionExists(topicName: string, subscriptionName: string,
        operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >+
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.

          optional: true
      return:
        type:
          - Promise<boolean>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.topicExists'
    name: 'topicExists(string, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks whether a given topic exists or not.
    syntax:
      content: >-
        function topicExists(topicName: string, operationOptions?:
        OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: operationOptions
          type:
            - OperationOptions
          description: >
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.
          optional: true
      return:
        type:
          - Promise<boolean>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.updateQueue'
    name: 'updateQueue(QueueDescription, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the queue based on the queue description provided.

      All properties on the queue description must be set even though only a
      subset of them are actually updatable.

      Therefore, the suggested flow is to use `getQueue()` to get the queue
      description with all properties set,

      update as needed and then pass it to `updateQueue()`.

      See https://docs.microsoft.com/en-us/rest/api/servicebus/update-queue for
      more details.
    syntax:
      content: >-
        function updateQueue(queue: QueueDescription, operationOptions?:
        OperationOptions)
      parameters:
        - id: queue
          type:
            - '@azure/service-bus.QueueDescription'
          description: >-
            Object representing the queue with one or more of the below
            properties updated

            - defaultMessageTimeToLive

            - lockDuration

            - deadLetteringOnMessageExpiration

            - duplicateDetectionHistoryTimeWindow

            - maxDeliveryCount
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.QueueResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.updateRule'
    name: 'updateRule(string, string, RuleDescription, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates properties on the Rule by the given name based on the given
      options.
    syntax:
      content: >-
        function updateRule(topicName: string, subscriptionName: string, rule:
        RuleDescription, operationOptions?: OperationOptions)
      parameters:
        - id: topicName
          type:
            - string
          description: ''
        - id: subscriptionName
          type:
            - string
          description: ''
        - id: rule
          type:
            - '@azure/service-bus.RuleDescription'
          description: >-
            Options to configure the Rule being updated.

            For example, you can configure the filter to apply on associated
            Topic/Subscription.
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.RuleResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.updateSubscription'
    name: 'updateSubscription(SubscriptionDescription, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the subscription based on the subscription description provided.

      All properties on the subscription description must be set even though
      only a subset of them are actually updatable.

      Therefore, the suggested flow is to use `getSubscription()` to get the
      subscription description with all properties set,

      update as needed and then pass it to `updateSubscription()`.
    syntax:
      content: >-
        function updateSubscription(subscription: SubscriptionDescription,
        operationOptions?: OperationOptions)
      parameters:
        - id: subscription
          type:
            - '@azure/service-bus.SubscriptionDescription'
          description: >-
            Object representing the subscription with one or more of the below
            properties updated
              - lockDuration
              - deadLetteringOnMessageExpiration
              - maxDeliveryCount
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.SubscriptionResponse>
        description: ''
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusManagementClient.updateTopic'
    name: 'updateTopic(TopicDescription, OperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the topic based on the topic description provided.

      All properties on the topic description must be set even though only a
      subset of them are actually updatable.

      Therefore, the suggested flow is to use `getTopic()` to get the topic
      description with all properties set,

      update as needed and then pass it to `updateTopic()`.

      See https://docs.microsoft.com/en-us/rest/api/servicebus/update-topic for
      more details.
    syntax:
      content: >-
        function updateTopic(topic: TopicDescription, operationOptions?:
        OperationOptions)
      parameters:
        - id: topic
          type:
            - '@azure/service-bus.TopicDescription'
          description: >-
            Object representing the topic with one or more of the below
            properties updated
              - defaultMessageTimeToLive
              - duplicateDetectionHistoryTimeWindow
        - id: operationOptions
          type:
            - OperationOptions
          description: >-
            The options that can be used to abort, trace and control other
            configurations on the HTTP request.


            Following are errors that can be expected from this operation
          optional: true
      return:
        type:
          - Promise<@azure/service-bus.TopicResponse>
        description: ''
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ServiceBusManagementClientOptions'
    name: ServiceBusManagementClientOptions
    spec.typeScript:
      - name: ServiceBusManagementClientOptions
        fullName: ServiceBusManagementClientOptions
        uid: '@azure/service-bus.ServiceBusManagementClientOptions'
  - uid: Promise<@azure/service-bus.QueueResponse>
    name: QueueResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QueueResponse
        fullName: QueueResponse
        uid: '@azure/service-bus.QueueResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.QueueDescription'
    name: QueueDescription
    spec.typeScript:
      - name: QueueDescription
        fullName: QueueDescription
        uid: '@azure/service-bus.QueueDescription'
  - uid: '@azure/service-bus.RuleDescription'
    name: RuleDescription
    spec.typeScript:
      - name: RuleDescription
        fullName: RuleDescription
        uid: '@azure/service-bus.RuleDescription'
  - uid: Promise<@azure/service-bus.RuleResponse>
    name: RuleResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RuleResponse
        fullName: RuleResponse
        uid: '@azure/service-bus.RuleResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.SubscriptionResponse>
    name: SubscriptionResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SubscriptionResponse
        fullName: SubscriptionResponse
        uid: '@azure/service-bus.SubscriptionResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.SubscriptionDescription'
    name: SubscriptionDescription
    spec.typeScript:
      - name: SubscriptionDescription
        fullName: SubscriptionDescription
        uid: '@azure/service-bus.SubscriptionDescription'
  - uid: Promise<@azure/service-bus.TopicResponse>
    name: TopicResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TopicResponse
        fullName: TopicResponse
        uid: '@azure/service-bus.TopicResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.TopicDescription'
    name: TopicDescription
    spec.typeScript:
      - name: TopicDescription
        fullName: TopicDescription
        uid: '@azure/service-bus.TopicDescription'
  - uid: Promise<@azure/service-bus.Response>
    name: Response>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Response
        fullName: Response
        uid: '@azure/service-bus.Response'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.NamespacePropertiesResponse>
    name: NamespacePropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NamespacePropertiesResponse
        fullName: NamespacePropertiesResponse
        uid: '@azure/service-bus.NamespacePropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.QueueRuntimeInfoResponse>
    name: QueueRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QueueRuntimeInfoResponse
        fullName: QueueRuntimeInfoResponse
        uid: '@azure/service-bus.QueueRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/service-bus.ListRequestOptions & OperationOptions'
    name: ListRequestOptions & OperationOptions
    spec.typeScript:
      - name: ListRequestOptions
        fullName: ListRequestOptions
        uid: '@azure/service-bus.ListRequestOptions'
      - name: ' & OperationOptions'
        fullName: ' & OperationOptions'
  - uid: Promise<@azure/service-bus.QueuesResponse>
    name: QueuesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QueuesResponse
        fullName: QueuesResponse
        uid: '@azure/service-bus.QueuesResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.QueuesRuntimeInfoResponse>
    name: QueuesRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QueuesRuntimeInfoResponse
        fullName: QueuesRuntimeInfoResponse
        uid: '@azure/service-bus.QueuesRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.RulesResponse>
    name: RulesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RulesResponse
        fullName: RulesResponse
        uid: '@azure/service-bus.RulesResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.SubscriptionRuntimeInfoResponse>
    name: SubscriptionRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SubscriptionRuntimeInfoResponse
        fullName: SubscriptionRuntimeInfoResponse
        uid: '@azure/service-bus.SubscriptionRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.SubscriptionsResponse>
    name: SubscriptionsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SubscriptionsResponse
        fullName: SubscriptionsResponse
        uid: '@azure/service-bus.SubscriptionsResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.SubscriptionsRuntimeInfoResponse>
    name: SubscriptionsRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SubscriptionsRuntimeInfoResponse
        fullName: SubscriptionsRuntimeInfoResponse
        uid: '@azure/service-bus.SubscriptionsRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.TopicRuntimeInfoResponse>
    name: TopicRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TopicRuntimeInfoResponse
        fullName: TopicRuntimeInfoResponse
        uid: '@azure/service-bus.TopicRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.TopicsResponse>
    name: TopicsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TopicsResponse
        fullName: TopicsResponse
        uid: '@azure/service-bus.TopicsResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/service-bus.TopicsRuntimeInfoResponse>
    name: TopicsRuntimeInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TopicsRuntimeInfoResponse
        fullName: TopicsRuntimeInfoResponse
        uid: '@azure/service-bus.TopicsRuntimeInfoResponse'
      - name: '>'
        fullName: '>'
