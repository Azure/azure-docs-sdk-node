### YamlMime:TSPackage
uid: '@azure/arm-fabric'
name: '@azure/arm-fabric'
summary: ''
type: package
enums:
  - '@azure/arm-fabric.KnownActionType'
  - '@azure/arm-fabric.KnownCheckNameAvailabilityReason'
  - '@azure/arm-fabric.KnownCreatedByType'
  - '@azure/arm-fabric.KnownOrigin'
  - '@azure/arm-fabric.KnownProvisioningState'
  - '@azure/arm-fabric.KnownResourceState'
  - '@azure/arm-fabric.KnownRpSkuTier'
classes:
  - '@azure/arm-fabric.FabricClient'
interfaces:
  - '@azure/arm-fabric.CapacityAdministration'
  - '@azure/arm-fabric.CheckNameAvailabilityRequest'
  - '@azure/arm-fabric.CheckNameAvailabilityResponse'
  - '@azure/arm-fabric.FabricCapacitiesCheckNameAvailabilityOptionalParams'
  - '@azure/arm-fabric.FabricCapacitiesCreateOrUpdateOptionalParams'
  - '@azure/arm-fabric.FabricCapacitiesDeleteOptionalParams'
  - '@azure/arm-fabric.FabricCapacitiesGetOptionalParams'
  - '@azure/arm-fabric.FabricCapacitiesListByResourceGroupOptionalParams'
  - '@azure/arm-fabric.FabricCapacitiesListBySubscriptionOptionalParams'
  - '@azure/arm-fabric.FabricCapacitiesListSkusForCapacityOptionalParams'
  - '@azure/arm-fabric.FabricCapacitiesListSkusOptionalParams'
  - '@azure/arm-fabric.FabricCapacitiesOperations'
  - '@azure/arm-fabric.FabricCapacitiesResumeOptionalParams'
  - '@azure/arm-fabric.FabricCapacitiesSuspendOptionalParams'
  - '@azure/arm-fabric.FabricCapacitiesUpdateOptionalParams'
  - '@azure/arm-fabric.FabricCapacity'
  - '@azure/arm-fabric.FabricCapacityProperties'
  - '@azure/arm-fabric.FabricCapacityUpdate'
  - '@azure/arm-fabric.FabricCapacityUpdateProperties'
  - '@azure/arm-fabric.FabricClientOptionalParams'
  - '@azure/arm-fabric.Operation'
  - '@azure/arm-fabric.OperationDisplay'
  - '@azure/arm-fabric.OperationsListOptionalParams'
  - '@azure/arm-fabric.OperationsOperations'
  - '@azure/arm-fabric.PageSettings'
  - '@azure/arm-fabric.PagedAsyncIterableIterator'
  - '@azure/arm-fabric.Resource'
  - '@azure/arm-fabric.RestorePollerOptions'
  - '@azure/arm-fabric.RpSku'
  - '@azure/arm-fabric.RpSkuDetailsForExistingResource'
  - '@azure/arm-fabric.RpSkuDetailsForNewResource'
  - '@azure/arm-fabric.SystemData'
  - '@azure/arm-fabric.TrackedResource'
typeAliases:
  - '@azure/arm-fabric.ActionType'
  - '@azure/arm-fabric.CheckNameAvailabilityReason'
  - '@azure/arm-fabric.ContinuablePage'
  - '@azure/arm-fabric.CreatedByType'
  - '@azure/arm-fabric.Origin'
  - '@azure/arm-fabric.ProvisioningState'
  - '@azure/arm-fabric.ResourceState'
  - '@azure/arm-fabric.RpSkuTier'
functions:
  - name: >-
      restorePoller<TResponse, TResult>(FabricClient, string, (args: any[]) =>
      PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-fabric.restorePoller'
    package: '@azure/arm-fabric'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client: FabricClient,
        serializedState: string, sourceOperation: (args: any[]) =>
        PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: <xref uid="@azure/arm-fabric.FabricClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-fabric.RestorePollerOptions" />&lt;TResult,
            <xref uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
