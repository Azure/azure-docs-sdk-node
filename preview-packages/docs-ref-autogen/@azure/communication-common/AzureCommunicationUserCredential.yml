### YamlMime:TSType
name: AzureCommunicationUserCredential
uid: '@azure/communication-common.AzureCommunicationUserCredential'
package: '@azure/communication-common'
summary: >-
  The CommunicationUserCredential implementation with support for proactive
  token refresh.
fullName: AzureCommunicationUserCredential
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: AzureCommunicationUserCredential(RefreshOptions)
    uid: '@azure/communication-common.AzureCommunicationUserCredential.constructor_1'
    package: '@azure/communication-common'
    summary: >-
      Creates an instance of CommunicationUserCredential with a lambda to get a
      token and options

      to configure proactive refreshing.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new AzureCommunicationUserCredential(refreshOptions: RefreshOptions)'
      parameters:
        - id: refreshOptions
          type: <xref uid="@azure/communication-common.RefreshOptions" />
          description: |
            Options to configure refresh and opt-in to proactive refreshing.
  - name: AzureCommunicationUserCredential(string)
    uid: '@azure/communication-common.AzureCommunicationUserCredential.constructor'
    package: '@azure/communication-common'
    summary: >-
      Creates an instance of CommunicationUserCredential with a static token and
      no proactive refreshing.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new AzureCommunicationUserCredential(token: string)'
      parameters:
        - id: token
          type: string
          description: |
            A user access token issued by Communication Services.
methods:
  - name: dispose()
    uid: '@azure/communication-common.AzureCommunicationUserCredential.dispose'
    package: '@azure/communication-common'
    summary: >-
      Disposes the CommunicationUserCredential and cancels any internal
      auto-refresh operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function dispose()
  - name: getToken(AbortSignalLike)
    uid: '@azure/communication-common.AzureCommunicationUserCredential.getToken'
    package: '@azure/communication-common'
    summary: Gets an `AccessToken` for the user. Throws if already disposed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getToken(abortSignal?: AbortSignalLike)'
      parameters:
        - id: abortSignal
          type: AbortSignalLike
          description: |
            An implementation of `AbortSignalLike` to cancel the operation.
      return:
        type: Promise&lt;AccessToken&gt;
        description: ''
