### YamlMime:TSPackage
uid: '@azure/arm-managedapplications'
name: '@azure/arm-managedapplications'
summary: ''
type: package
classes:
  - '@azure/arm-managedapplications.ApplicationClient'
  - '@azure/arm-managedapplications.ApplicationClientContext'
  - '@azure/arm-managedapplications.CoreClientLro'
  - '@azure/arm-managedapplications.LroEngine'
  - '@azure/arm-managedapplications.GenericPollOperation'
  - '@azure/arm-managedapplications.RestError'
  - '@azure/arm-managedapplications.ApplicationDefinitionsImpl'
  - '@azure/arm-managedapplications.ApplicationsImpl'
typeAliases:
  - '@azure/arm-managedapplications.SendOperationFn'
  - '@azure/arm-managedapplications.Application'
  - '@azure/arm-managedapplications.ApplicationArtifactType'
  - >-
    @azure/arm-managedapplications.ApplicationClientListOperationsNextNextResponse
  - '@azure/arm-managedapplications.ApplicationClientListOperationsNextResponse'
  - '@azure/arm-managedapplications.ApplicationClientListOperationsResponse'
  - '@azure/arm-managedapplications.ApplicationDefinition'
  - >-
    @azure/arm-managedapplications.ApplicationDefinitionsCreateOrUpdateByIdResponse
  - '@azure/arm-managedapplications.ApplicationDefinitionsCreateOrUpdateResponse'
  - '@azure/arm-managedapplications.ApplicationDefinitionsGetByIdResponse'
  - '@azure/arm-managedapplications.ApplicationDefinitionsGetResponse'
  - >-
    @azure/arm-managedapplications.ApplicationDefinitionsListByResourceGroupNextNextResponse
  - >-
    @azure/arm-managedapplications.ApplicationDefinitionsListByResourceGroupNextResponse
  - >-
    @azure/arm-managedapplications.ApplicationDefinitionsListByResourceGroupResponse
  - '@azure/arm-managedapplications.ApplicationLockLevel'
  - '@azure/arm-managedapplications.ApplicationPatchable'
  - '@azure/arm-managedapplications.ApplicationsCreateOrUpdateByIdResponse'
  - '@azure/arm-managedapplications.ApplicationsCreateOrUpdateResponse'
  - '@azure/arm-managedapplications.ApplicationsGetByIdResponse'
  - '@azure/arm-managedapplications.ApplicationsGetResponse'
  - >-
    @azure/arm-managedapplications.ApplicationsListByResourceGroupNextNextResponse
  - '@azure/arm-managedapplications.ApplicationsListByResourceGroupNextResponse'
  - '@azure/arm-managedapplications.ApplicationsListByResourceGroupResponse'
  - >-
    @azure/arm-managedapplications.ApplicationsListBySubscriptionNextNextResponse
  - '@azure/arm-managedapplications.ApplicationsListBySubscriptionNextResponse'
  - '@azure/arm-managedapplications.ApplicationsListBySubscriptionResponse'
  - '@azure/arm-managedapplications.ApplicationsUpdateByIdResponse'
  - '@azure/arm-managedapplications.ApplicationsUpdateResponse'
  - '@azure/arm-managedapplications.GenericResource'
  - '@azure/arm-managedapplications.ProvisioningState'
  - '@azure/arm-managedapplications.GetLroStatusFromResponse'
  - '@azure/arm-managedapplications.LroMode'
  - '@azure/arm-managedapplications.LroResourceLocationConfig'
  - '@azure/arm-managedapplications.LroStatus'
  - '@azure/arm-managedapplications.ResumablePollOperationState'
functions:
  - name: >-
      createPollingMethod<TResult>(SendOperationFn<TResult>,
      GetLroStatusFromResponse<TResult>, OperationArguments, OperationSpec,
      LroMode)
    uid: '@azure/arm-managedapplications.createPollingMethod'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createPollingMethod<TResult>(sendOperationFn:
        SendOperationFn<TResult>, GetLroStatusFromResponse:
        GetLroStatusFromResponse<TResult>, args: OperationArguments, spec:
        OperationSpec, mode?: LroMode): (path?: undefined | string) =>
        Promise<LroStatus<TResult>>
      parameters:
        - id: sendOperationFn
          type: >-
            <xref uid="@azure/arm-managedapplications.SendOperationFn"
            />&lt;TResult&gt;
          description: ''
        - id: GetLroStatusFromResponse
          type: GetLroStatusFromResponse&lt;TResult&gt;
          description: ''
        - id: args
          type: OperationArguments
          description: ''
        - id: spec
          type: OperationSpec
          description: ''
        - id: mode
          type: <xref uid="@azure/arm-managedapplications.LroMode" />
          description: ''
      return:
        description: ''
        type: >-
          (path?: undefined | string) =&gt;
          Promise&lt;LroStatus&lt;TResult&gt;&gt;
  - name: getSpecPath(OperationSpec)
    uid: '@azure/arm-managedapplications.getSpecPath'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSpecPath(spec: OperationSpec): string'
      parameters:
        - id: spec
          type: OperationSpec
          description: ''
      return:
        description: ''
        type: string
  - name: shouldDeserializeLro(undefined | string)
    uid: '@azure/arm-managedapplications.shouldDeserializeLro'
    package: '@azure/arm-managedapplications'
    summary: >-
      We need to selectively deserialize our responses, only deserializing if we

      are in a final Lro response, not deserializing any polling non-terminal
      responses
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function shouldDeserializeLro(lroResourceLocationConfig?: undefined |
        string): (response: FullOperationResponse) => boolean
      parameters:
        - id: lroResourceLocationConfig
          type: undefined | string
          description: ''
      return:
        description: ''
        type: '(response: FullOperationResponse) =&gt; boolean'
  - name: >-
      processAzureAsyncOperationResult<TResult>(LongRunningOperation<TResult>,
      undefined | string, LroResourceLocationConfig)
    uid: '@azure/arm-managedapplications.processAzureAsyncOperationResult'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function processAzureAsyncOperationResult<TResult>(lro:
        LongRunningOperation<TResult>, resourceLocation?: undefined | string,
        lroResourceLocationConfig?: LroResourceLocationConfig): (rawResponse:
        RawResponse, flatResponse: TResult) => LroStatus<TResult>
      parameters:
        - id: lro
          type: >-
            <xref uid="@azure/arm-managedapplications.LongRunningOperation"
            />&lt;TResult&gt;
          description: ''
        - id: resourceLocation
          type: undefined | string
          description: ''
        - id: lroResourceLocationConfig
          type: >-
            <xref uid="@azure/arm-managedapplications.LroResourceLocationConfig"
            />
          description: ''
      return:
        description: ''
        type: >-
          (rawResponse: RawResponse, flatResponse: TResult) =&gt;
          LroStatus&lt;TResult&gt;
  - name: isBodyPollingDone(RawResponse)
    uid: '@azure/arm-managedapplications.isBodyPollingDone'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isBodyPollingDone(rawResponse: RawResponse): boolean'
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-managedapplications.RawResponse" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: 'processBodyPollingOperationResult<TResult>(RawResponse, TResult)'
    uid: '@azure/arm-managedapplications.processBodyPollingOperationResult'
    package: '@azure/arm-managedapplications'
    summary: >-
      Creates a polling strategy based on BodyPolling which uses the
      provisioning state

      from the result to determine the current operation state
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function processBodyPollingOperationResult<TResult>(rawResponse:
        RawResponse, flatResponse: TResult): LroStatus<TResult>
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-managedapplications.RawResponse" />
          description: ''
        - id: flatResponse
          type: TResult
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-managedapplications.LroStatus" />&lt;TResult&gt;
  - name: 'processLocationPollingOperationResult<TResult>(RawResponse, TResult)'
    uid: '@azure/arm-managedapplications.processLocationPollingOperationResult'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function processLocationPollingOperationResult<TResult>(rawResponse:
        RawResponse, flatResponse: TResult): LroStatus<TResult>
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-managedapplications.RawResponse" />
          description: ''
        - id: flatResponse
          type: TResult
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-managedapplications.LroStatus" />&lt;TResult&gt;
  - name: 'processPassthroughOperationResult<TResult>(RawResponse, TResult)'
    uid: '@azure/arm-managedapplications.processPassthroughOperationResult'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function processPassthroughOperationResult<TResult>(rawResponse:
        RawResponse, flatResponse: TResult): LroStatus<TResult>
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-managedapplications.RawResponse" />
          description: ''
        - id: flatResponse
          type: TResult
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-managedapplications.LroStatus" />&lt;TResult&gt;
  - name: 'getPollingUrl(RawResponse, string)'
    uid: '@azure/arm-managedapplications.getPollingUrl'
    package: '@azure/arm-managedapplications'
    summary: >-
      Detects where the continuation token is and returns it. Notice that
      azure-asyncoperation

      must be checked first before the other location headers because there are
      scenarios

      where both azure-asyncoperation and location could be present in the same
      response but

      azure-asyncoperation should be the one to use for polling.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPollingUrl(rawResponse: RawResponse, defaultPath: string):
        string
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-managedapplications.RawResponse" />
          description: ''
        - id: defaultPath
          type: string
          description: ''
      return:
        description: ''
        type: string
  - name: 'inferLroMode(string, string, RawResponse)'
    uid: '@azure/arm-managedapplications.inferLroMode'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function inferLroMode(requestPath: string, requestMethod: string,
        rawResponse: RawResponse): LroConfig
      parameters:
        - id: requestPath
          type: string
          description: ''
        - id: requestMethod
          type: string
          description: ''
        - id: rawResponse
          type: <xref uid="@azure/arm-managedapplications.RawResponse" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-managedapplications.LroConfig" />
  - name: isUnexpectedInitialResponse(RawResponse)
    uid: '@azure/arm-managedapplications.isUnexpectedInitialResponse'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isUnexpectedInitialResponse(rawResponse: RawResponse): boolean'
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-managedapplications.RawResponse" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: isUnexpectedPollingResponse(RawResponse)
    uid: '@azure/arm-managedapplications.isUnexpectedPollingResponse'
    package: '@azure/arm-managedapplications'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isUnexpectedPollingResponse(rawResponse: RawResponse): boolean'
      parameters:
        - id: rawResponse
          type: <xref uid="@azure/arm-managedapplications.RawResponse" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: >-
      createGetLroStatusFromResponse<TResult>(LongRunningOperation<TResult>,
      LroConfig, LroResourceLocationConfig)
    uid: '@azure/arm-managedapplications.createGetLroStatusFromResponse'
    package: '@azure/arm-managedapplications'
    summary: creates a stepping function that maps an LRO state to another.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createGetLroStatusFromResponse<TResult>(lroPrimitives:
        LongRunningOperation<TResult>, config: LroConfig,
        lroResourceLocationConfig?: LroResourceLocationConfig):
        GetLroStatusFromResponse<TResult>
      parameters:
        - id: lroPrimitives
          type: >-
            <xref uid="@azure/arm-managedapplications.LongRunningOperation"
            />&lt;TResult&gt;
          description: ''
        - id: config
          type: <xref uid="@azure/arm-managedapplications.LroConfig" />
          description: ''
        - id: lroResourceLocationConfig
          type: >-
            <xref uid="@azure/arm-managedapplications.LroResourceLocationConfig"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-managedapplications.GetLroStatusFromResponse"
          />&lt;TResult&gt;
  - name: >-
      createInitializeState<TResult>(ResumablePollOperationState<TResult>,
      string, string)
    uid: '@azure/arm-managedapplications.createInitializeState'
    package: '@azure/arm-managedapplications'
    summary: Creates a callback to be used to initialize the polling operation state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createInitializeState<TResult>(state:
        ResumablePollOperationState<TResult>, requestPath: string,
        requestMethod: string): (rawResponse: RawResponse, flatResponse:
        unknown) => boolean
      parameters:
        - id: state
          type: >-
            <xref
            uid="@azure/arm-managedapplications.ResumablePollOperationState"
            />&lt;TResult&gt;
          description: of the polling operation
        - id: requestPath
          type: string
          description: ''
        - id: requestMethod
          type: string
          description: ''
      return:
        description: callback that initializes the state of the polling operation
        type: '(rawResponse: RawResponse, flatResponse: unknown) =&gt; boolean'
  - name: 'createPollForLROStatus<TResult>(LongRunningOperation<TResult>, LroConfig)'
    uid: '@azure/arm-managedapplications.createPollForLROStatus'
    package: '@azure/arm-managedapplications'
    summary: Creates a polling operation that returns a LRO state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createPollForLROStatus<TResult>(lroPrimitives:
        LongRunningOperation<TResult>, config: LroConfig): (pollingURL: string,
        pollerConfig: PollerConfig) => Promise<LroStatus<TResult>>
      parameters:
        - id: lroPrimitives
          type: >-
            <xref uid="@azure/arm-managedapplications.LongRunningOperation"
            />&lt;TResult&gt;
          description: ''
        - id: config
          type: <xref uid="@azure/arm-managedapplications.LroConfig" />
          description: ''
      return:
        description: ''
        type: >-
          (pollingURL: string, pollerConfig: PollerConfig) =&gt;
          Promise&lt;LroStatus&lt;TResult&gt;&gt;
enums:
  - '@azure/arm-managedapplications.KnownProvisioningState'
interfaces:
  - '@azure/arm-managedapplications.ApplicationArtifact'
  - >-
    @azure/arm-managedapplications.ApplicationClientListOperationsNextNextOptionalParams
  - >-
    @azure/arm-managedapplications.ApplicationClientListOperationsNextOptionalParams
  - '@azure/arm-managedapplications.ApplicationClientListOperationsOptionalParams'
  - '@azure/arm-managedapplications.ApplicationClientOptionalParams'
  - '@azure/arm-managedapplications.ApplicationDefinitionListResult'
  - '@azure/arm-managedapplications.ApplicationDefinitions'
  - >-
    @azure/arm-managedapplications.ApplicationDefinitionsCreateOrUpdateByIdOptionalParams
  - >-
    @azure/arm-managedapplications.ApplicationDefinitionsCreateOrUpdateOptionalParams
  - >-
    @azure/arm-managedapplications.ApplicationDefinitionsDeleteByIdOptionalParams
  - '@azure/arm-managedapplications.ApplicationDefinitionsDeleteOptionalParams'
  - '@azure/arm-managedapplications.ApplicationDefinitionsGetByIdOptionalParams'
  - '@azure/arm-managedapplications.ApplicationDefinitionsGetOptionalParams'
  - >-
    @azure/arm-managedapplications.ApplicationDefinitionsListByResourceGroupNextNextOptionalParams
  - >-
    @azure/arm-managedapplications.ApplicationDefinitionsListByResourceGroupNextOptionalParams
  - >-
    @azure/arm-managedapplications.ApplicationDefinitionsListByResourceGroupOptionalParams
  - '@azure/arm-managedapplications.ApplicationListResult'
  - '@azure/arm-managedapplications.ApplicationProviderAuthorization'
  - '@azure/arm-managedapplications.Applications'
  - '@azure/arm-managedapplications.ApplicationsCreateOrUpdateByIdOptionalParams'
  - '@azure/arm-managedapplications.ApplicationsCreateOrUpdateOptionalParams'
  - '@azure/arm-managedapplications.ApplicationsDeleteByIdOptionalParams'
  - '@azure/arm-managedapplications.ApplicationsDeleteOptionalParams'
  - '@azure/arm-managedapplications.ApplicationsGetByIdOptionalParams'
  - '@azure/arm-managedapplications.ApplicationsGetOptionalParams'
  - >-
    @azure/arm-managedapplications.ApplicationsListByResourceGroupNextNextOptionalParams
  - >-
    @azure/arm-managedapplications.ApplicationsListByResourceGroupNextOptionalParams
  - '@azure/arm-managedapplications.ApplicationsListByResourceGroupOptionalParams'
  - >-
    @azure/arm-managedapplications.ApplicationsListBySubscriptionNextNextOptionalParams
  - >-
    @azure/arm-managedapplications.ApplicationsListBySubscriptionNextOptionalParams
  - '@azure/arm-managedapplications.ApplicationsListBySubscriptionOptionalParams'
  - '@azure/arm-managedapplications.ApplicationsUpdateByIdOptionalParams'
  - '@azure/arm-managedapplications.ApplicationsUpdateOptionalParams'
  - '@azure/arm-managedapplications.ErrorResponse'
  - '@azure/arm-managedapplications.Identity'
  - '@azure/arm-managedapplications.Operation'
  - '@azure/arm-managedapplications.OperationDisplay'
  - '@azure/arm-managedapplications.OperationListResult'
  - '@azure/arm-managedapplications.Plan'
  - '@azure/arm-managedapplications.PlanPatchable'
  - '@azure/arm-managedapplications.Resource'
  - '@azure/arm-managedapplications.Sku'
  - '@azure/arm-managedapplications.LongRunningOperation'
  - '@azure/arm-managedapplications.LroBody'
  - '@azure/arm-managedapplications.LroConfig'
  - '@azure/arm-managedapplications.LroEngineOptions'
  - '@azure/arm-managedapplications.LroInProgressState'
  - '@azure/arm-managedapplications.LroResponse'
  - '@azure/arm-managedapplications.LroTerminalState'
  - '@azure/arm-managedapplications.PollerConfig'
  - '@azure/arm-managedapplications.RawResponse'
