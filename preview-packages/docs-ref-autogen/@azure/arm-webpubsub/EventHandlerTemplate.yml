### YamlMime:TSType
name: EventHandlerTemplate
uid: '@azure/arm-webpubsub.EventHandlerTemplate'
package: '@azure/arm-webpubsub'
summary: EventHandler template item settings.
fullName: EventHandlerTemplate
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: auth
    uid: '@azure/arm-webpubsub.EventHandlerTemplate.auth'
    package: '@azure/arm-webpubsub'
    summary: >-
      Gets or sets the auth settings for an event handler. If not set, no auth
      is used.
    fullName: auth
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'auth?: UpstreamAuthSettings'
      return:
        description: ''
        type: <xref uid="@azure/arm-webpubsub.UpstreamAuthSettings" />
  - name: systemEventPattern
    uid: '@azure/arm-webpubsub.EventHandlerTemplate.systemEventPattern'
    package: '@azure/arm-webpubsub'
    summary: |-
      Gets ot sets the system event pattern.
      There are 2 kind of patterns supported:
          1. The single event name, for example, "connect", it matches "connect"
          2. Combine multiple events with ",", for example "connect,disconnected", it matches event "connect" and "disconnected"
    fullName: systemEventPattern
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'systemEventPattern?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: urlTemplate
    uid: '@azure/arm-webpubsub.EventHandlerTemplate.urlTemplate'
    package: '@azure/arm-webpubsub'
    summary: >-
      Gets or sets the EventHandler URL template. You can use a predefined
      parameter {hub} and {event} inside the template, the value of the
      EventHandler URL is dynamically calculated when the client request comes
      in.

      For example, UrlTemplate can be `http://example.com/api/{hub}/{event}`.
      The host part can't contains parameters.
    fullName: urlTemplate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'urlTemplate: string'
      return:
        description: ''
        type: string
  - name: userEventPattern
    uid: '@azure/arm-webpubsub.EventHandlerTemplate.userEventPattern'
    package: '@azure/arm-webpubsub'
    summary: |-
      Gets or sets the matching pattern for event names.
      There are 3 kind of patterns supported:
          1. "*", it to matches any event name
          2. Combine multiple events with ",", for example "event1,event2", it matches event "event1" and "event2"
          3. The single event name, for example, "event1", it matches "event1"
    fullName: userEventPattern
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userEventPattern?: undefined | string'
      return:
        description: ''
        type: undefined | string
