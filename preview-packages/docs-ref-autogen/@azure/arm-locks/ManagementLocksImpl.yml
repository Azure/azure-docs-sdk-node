### YamlMime:TSType
name: ManagementLocksImpl
uid: '@azure/arm-locks.ManagementLocksImpl'
package: '@azure/arm-locks'
summary: Class representing a ManagementLocks.
fullName: ManagementLocksImpl
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ManagementLocksImpl(ManagementLockClientContext)
    uid: '@azure/arm-locks.ManagementLocksImpl.constructor'
    package: '@azure/arm-locks'
    summary: Initialize a new instance of the class ManagementLocks class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ManagementLocksImpl(client: ManagementLockClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-locks.ManagementLockClientContext" />
          description: |
            Reference to the service client
methods:
  - name: >-
      createOrUpdateAtResourceGroupLevel(string, string, ManagementLockObject,
      ManagementLocksCreateOrUpdateAtResourceGroupLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.createOrUpdateAtResourceGroupLevel'
    package: '@azure/arm-locks'
    summary: >-
      When you apply a lock at a parent scope, all child resources inherit the
      same lock. To create

      management locks, you must have access to Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtResourceGroupLevel(resourceGroupName: string,
        lockName: string, parameters: ManagementLockObject, options?:
        ManagementLocksCreateOrUpdateAtResourceGroupLevelOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to lock.
        - id: lockName
          type: string
          description: >-
            The lock name. The lock name can be a maximum of 260 characters. It
            cannot contain
                            <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: The management lock parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksCreateOrUpdateAtResourceGroupLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-locks.ManagementLocksCreateOrUpdateAtResourceGroupLevelResponse"
          />&gt;
        description: ''
  - name: >-
      createOrUpdateAtResourceLevel(string, string, string, string, string,
      string, ManagementLockObject,
      ManagementLocksCreateOrUpdateAtResourceLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.createOrUpdateAtResourceLevel'
    package: '@azure/arm-locks'
    summary: >-
      When you apply a lock at a parent scope, all child resources inherit the
      same lock. To create

      management locks, you must have access to Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string,
        parameters: ManagementLockObject, options?:
        ManagementLocksCreateOrUpdateAtResourceLevelOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the resource to lock.
        - id: resourceProviderNamespace
          type: string
          description: The resource provider namespace of the resource to lock.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource to lock.
        - id: resourceName
          type: string
          description: The name of the resource to lock.
        - id: lockName
          type: string
          description: >-
            The name of lock. The lock name can be a maximum of 260 characters.
            It cannot
                            contain <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: Parameters for creating or updating a  management lock.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksCreateOrUpdateAtResourceLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-locks.ManagementLocksCreateOrUpdateAtResourceLevelResponse"
          />&gt;
        description: ''
  - name: >-
      createOrUpdateAtSubscriptionLevel(string, ManagementLockObject,
      ManagementLocksCreateOrUpdateAtSubscriptionLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.createOrUpdateAtSubscriptionLevel'
    package: '@azure/arm-locks'
    summary: >-
      When you apply a lock at a parent scope, all child resources inherit the
      same lock. To create

      management locks, you must have access to Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtSubscriptionLevel(lockName: string, parameters:
        ManagementLockObject, options?:
        ManagementLocksCreateOrUpdateAtSubscriptionLevelOptionalParams)
      parameters:
        - id: lockName
          type: string
          description: >-
            The name of lock. The lock name can be a maximum of 260 characters.
            It cannot
                            contain <, > %, &, :, \, ?, /, or any control characters.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: The management lock parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksCreateOrUpdateAtSubscriptionLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-locks.ManagementLocksCreateOrUpdateAtSubscriptionLevelResponse"
          />&gt;
        description: ''
  - name: >-
      createOrUpdateByScope(string, string, ManagementLockObject,
      ManagementLocksCreateOrUpdateByScopeOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.createOrUpdateByScope'
    package: '@azure/arm-locks'
    summary: Create or update a management lock by scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateByScope(scope: string, lockName: string,
        parameters: ManagementLockObject, options?:
        ManagementLocksCreateOrUpdateByScopeOptionalParams)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope for the lock. When providing a scope for the assignment,
            use
                         '/subscriptions/{subscriptionId}' for subscriptions,
                         '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' for resource groups, and
                         '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'
                         for resources.
        - id: lockName
          type: string
          description: The name of lock.
        - id: parameters
          type: <xref uid="@azure/arm-locks.ManagementLockObject" />
          description: Create or update management lock parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksCreateOrUpdateByScopeOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-locks.ManagementLocksCreateOrUpdateByScopeResponse"
          />&gt;
        description: ''
  - name: >-
      deleteAtResourceGroupLevel(string, string,
      ManagementLocksDeleteAtResourceGroupLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.deleteAtResourceGroupLevel'
    package: '@azure/arm-locks'
    summary: >-
      To delete management locks, you must have access to
      Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtResourceGroupLevel(resourceGroupName: string, lockName:
        string, options?:
        ManagementLocksDeleteAtResourceGroupLevelOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the lock.
        - id: lockName
          type: string
          description: The name of lock to delete.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksDeleteAtResourceGroupLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: >-
      deleteAtResourceLevel(string, string, string, string, string, string,
      ManagementLocksDeleteAtResourceLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.deleteAtResourceLevel'
    package: '@azure/arm-locks'
    summary: >-
      To delete management locks, you must have access to
      Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string, options?:
        ManagementLocksDeleteAtResourceLevelOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the resource with the lock
            to
                                     delete.
        - id: resourceProviderNamespace
          type: string
          description: |-
            The resource provider namespace of the resource with the lock to
                                             delete.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource with the lock to delete.
        - id: resourceName
          type: string
          description: The name of the resource with the lock to delete.
        - id: lockName
          type: string
          description: The name of the lock to delete.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksDeleteAtResourceLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: >-
      deleteAtSubscriptionLevel(string,
      ManagementLocksDeleteAtSubscriptionLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.deleteAtSubscriptionLevel'
    package: '@azure/arm-locks'
    summary: >-
      To delete management locks, you must have access to
      Microsoft.Authorization/* or

      Microsoft.Authorization/locks/* actions. Of the built-in roles, only Owner
      and User Access

      Administrator are granted those actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtSubscriptionLevel(lockName: string, options?:
        ManagementLocksDeleteAtSubscriptionLevelOptionalParams)
      parameters:
        - id: lockName
          type: string
          description: The name of lock to delete.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksDeleteAtSubscriptionLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'deleteByScope(string, string, ManagementLocksDeleteByScopeOptionalParams)'
    uid: '@azure/arm-locks.ManagementLocksImpl.deleteByScope'
    package: '@azure/arm-locks'
    summary: Delete a management lock by scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteByScope(scope: string, lockName: string, options?:
        ManagementLocksDeleteByScopeOptionalParams)
      parameters:
        - id: scope
          type: string
          description: The scope for the lock.
        - id: lockName
          type: string
          description: The name of lock.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksDeleteByScopeOptionalParams" />
          description: |
            The options parameters.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: >-
      getAtResourceGroupLevel(string, string,
      ManagementLocksGetAtResourceGroupLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.getAtResourceGroupLevel'
    package: '@azure/arm-locks'
    summary: Gets a management lock at the resource group level.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtResourceGroupLevel(resourceGroupName: string, lockName:
        string, options?: ManagementLocksGetAtResourceGroupLevelOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the locked resource group.
        - id: lockName
          type: string
          description: The name of the lock to get.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksGetAtResourceGroupLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-locks.ManagementLocksGetAtResourceGroupLevelResponse"
          />&gt;
        description: ''
  - name: >-
      getAtResourceLevel(string, string, string, string, string, string,
      ManagementLocksGetAtResourceLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.getAtResourceLevel'
    package: '@azure/arm-locks'
    summary: Get the management lock of a resource or any level below resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, lockName: string, options?:
        ManagementLocksGetAtResourceLevelOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: 'An extra path parameter needed in some services, like SQL Databases.'
        - id: resourceType
          type: string
          description: The type of the resource.
        - id: resourceName
          type: string
          description: The name of the resource.
        - id: lockName
          type: string
          description: The name of lock.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksGetAtResourceLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-locks.ManagementLocksGetAtResourceLevelResponse"
          />&gt;
        description: ''
  - name: >-
      getAtSubscriptionLevel(string,
      ManagementLocksGetAtSubscriptionLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.getAtSubscriptionLevel'
    package: '@azure/arm-locks'
    summary: Gets a management lock at the subscription level.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAtSubscriptionLevel(lockName: string, options?:
        ManagementLocksGetAtSubscriptionLevelOptionalParams)
      parameters:
        - id: lockName
          type: string
          description: The name of the lock to get.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksGetAtSubscriptionLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-locks.ManagementLocksGetAtSubscriptionLevelResponse"
          />&gt;
        description: ''
  - name: 'getByScope(string, string, ManagementLocksGetByScopeOptionalParams)'
    uid: '@azure/arm-locks.ManagementLocksImpl.getByScope'
    package: '@azure/arm-locks'
    summary: Get a management lock by scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByScope(scope: string, lockName: string, options?:
        ManagementLocksGetByScopeOptionalParams)
      parameters:
        - id: scope
          type: string
          description: The scope for the lock.
        - id: lockName
          type: string
          description: The name of lock.
        - id: options
          type: >-
            <xref uid="@azure/arm-locks.ManagementLocksGetByScopeOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-locks.ManagementLocksGetByScopeResponse" />&gt;
        description: ''
  - name: >-
      listAtResourceGroupLevel(string,
      ManagementLocksListAtResourceGroupLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.listAtResourceGroupLevel'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceGroupLevel(resourceGroupName: string, options?:
        ManagementLocksListAtResourceGroupLevelOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the locks to get.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListAtResourceGroupLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-locks.ManagementLockObject" />&gt;
        description: ''
  - name: >-
      listAtResourceGroupLevelNext(string, string,
      ManagementLocksListAtResourceGroupLevelNextOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.listAtResourceGroupLevelNext'
    package: '@azure/arm-locks'
    summary: ListAtResourceGroupLevelNext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceGroupLevelNext(resourceGroupName: string,
        nextLink: string, options?:
        ManagementLocksListAtResourceGroupLevelNextOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group containing the locks to get.
        - id: nextLink
          type: string
          description: >-
            The nextLink from the previous successful call to the
            ListAtResourceGroupLevel
                            method.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListAtResourceGroupLevelNextOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-locks.ManagementLockObject" />&gt;
        description: ''
  - name: >-
      listAtResourceLevel(string, string, string, string, string,
      ManagementLocksListAtResourceLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.listAtResourceLevel'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a resource or any level below resource.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceLevel(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options?:
        ManagementLocksListAtResourceLevelOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the locked resource. The
            name is
                                     case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the locked resource.
        - id: resourceName
          type: string
          description: The name of the locked resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListAtResourceLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-locks.ManagementLockObject" />&gt;
        description: ''
  - name: >-
      listAtResourceLevelNext(string, string, string, string, string, string,
      ManagementLocksListAtResourceLevelNextOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.listAtResourceLevelNext'
    package: '@azure/arm-locks'
    summary: ListAtResourceLevelNext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceLevelNext(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, nextLink: string, options?:
        ManagementLocksListAtResourceLevelNextOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the locked resource. The
            name is
                                     case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the locked resource.
        - id: resourceName
          type: string
          description: The name of the locked resource.
        - id: nextLink
          type: string
          description: >-
            The nextLink from the previous successful call to the
            ListAtResourceLevel method.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListAtResourceLevelNextOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-locks.ManagementLockObject" />&gt;
        description: ''
  - name: >-
      listAtSubscriptionLevel(ManagementLocksListAtSubscriptionLevelOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.listAtSubscriptionLevel'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtSubscriptionLevel(options?:
        ManagementLocksListAtSubscriptionLevelOptionalParams)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListAtSubscriptionLevelOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-locks.ManagementLockObject" />&gt;
        description: ''
  - name: >-
      listAtSubscriptionLevelNext(string,
      ManagementLocksListAtSubscriptionLevelNextOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.listAtSubscriptionLevelNext'
    package: '@azure/arm-locks'
    summary: ListAtSubscriptionLevelNext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listAtSubscriptionLevelNext(nextLink: string, options?:
        ManagementLocksListAtSubscriptionLevelNextOptionalParams)
      parameters:
        - id: nextLink
          type: string
          description: >-
            The nextLink from the previous successful call to the
            ListAtSubscriptionLevel
                            method.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListAtSubscriptionLevelNextOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-locks.ManagementLockObject" />&gt;
        description: ''
  - name: 'listByScope(string, ManagementLocksListByScopeOptionalParams)'
    uid: '@azure/arm-locks.ManagementLocksImpl.listByScope'
    package: '@azure/arm-locks'
    summary: Gets all the management locks for a scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByScope(scope: string, options?:
        ManagementLocksListByScopeOptionalParams)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope for the lock. When providing a scope for the assignment,
            use
                         '/subscriptions/{subscriptionId}' for subscriptions,
                         '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' for resource groups, and
                         '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'
                         for resources.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListByScopeOptionalParams" />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-locks.ManagementLockObject" />&gt;
        description: ''
  - name: >-
      listByScopeNext(string, string,
      ManagementLocksListByScopeNextOptionalParams)
    uid: '@azure/arm-locks.ManagementLocksImpl.listByScopeNext'
    package: '@azure/arm-locks'
    summary: ListByScopeNext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByScopeNext(scope: string, nextLink: string, options?:
        ManagementLocksListByScopeNextOptionalParams)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope for the lock. When providing a scope for the assignment,
            use
                         '/subscriptions/{subscriptionId}' for subscriptions,
                         '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' for resource groups, and
                         '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'
                         for resources.
        - id: nextLink
          type: string
          description: >-
            The nextLink from the previous successful call to the ListByScope
            method.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-locks.ManagementLocksListByScopeNextOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-locks.ManagementLockObject" />&gt;
        description: ''
