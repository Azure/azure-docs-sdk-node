### YamlMime:TSType
name: Workspace
uid: '@azure/arm-quantum.Workspace'
package: '@azure/arm-quantum'
summary: Interface representing a Workspace.
fullName: Workspace
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      checkNameAvailability(string, CheckNameAvailabilityParameters,
      WorkspaceCheckNameAvailabilityOptionalParams)
    uid: '@azure/arm-quantum.Workspace.checkNameAvailability'
    package: '@azure/arm-quantum'
    summary: Check the availability of the resource name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(locationName: string,
        checkNameAvailabilityParameters: CheckNameAvailabilityParameters,
        options?: WorkspaceCheckNameAvailabilityOptionalParams):
        Promise<CheckNameAvailabilityResult>
      parameters:
        - id: locationName
          type: string
          description: Location.
        - id: checkNameAvailabilityParameters
          type: <xref uid="@azure/arm-quantum.CheckNameAvailabilityParameters" />
          description: The name and type of the resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-quantum.WorkspaceCheckNameAvailabilityOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-quantum.CheckNameAvailabilityResult"
          />&gt;
  - name: listKeys(string, string, WorkspaceListKeysOptionalParams)
    uid: '@azure/arm-quantum.Workspace.listKeys'
    package: '@azure/arm-quantum'
    summary: >-
      Get the keys to use with the Quantum APIs. A key is used to authenticate
      and authorize access to the

      Quantum REST APIs. Only one key is needed at a time; two are given to
      provide seamless key

      regeneration.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, workspaceName: string,
        options?: WorkspaceListKeysOptionalParams): Promise<ListKeysResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the quantum workspace resource.
        - id: options
          type: <xref uid="@azure/arm-quantum.WorkspaceListKeysOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-quantum.ListKeysResult" />&gt;
  - name: >-
      regenerateKeys(string, string, APIKeys,
      WorkspaceRegenerateKeysOptionalParams)
    uid: '@azure/arm-quantum.Workspace.regenerateKeys'
    package: '@azure/arm-quantum'
    summary: >-
      Regenerate either the primary or secondary key for use with the Quantum
      APIs. The old key will stop

      working immediately.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, workspaceName:
        string, keySpecification: APIKeys, options?:
        WorkspaceRegenerateKeysOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the quantum workspace resource.
        - id: keySpecification
          type: <xref uid="@azure/arm-quantum.APIKeys" />
          description: 'Which key to regenerate:  primary or secondary.'
        - id: options
          type: >-
            <xref uid="@azure/arm-quantum.WorkspaceRegenerateKeysOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
