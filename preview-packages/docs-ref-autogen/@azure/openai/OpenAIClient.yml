### YamlMime:TSType
name: OpenAIClient
uid: '@azure/openai.OpenAIClient'
package: '@azure/openai'
summary: >-
  A client for interacting with Azure OpenAI.


  The client needs the endpoint of an OpenAI resource and an authentication

  method such as an API key or token. The API key and endpoint can be found in

  the OpenAI resource page. They will be located in the resource's Keys and
  Endpoint page.


  ### Examples for authentication:


  #### API Key


  ```js

  import { OpenAIClient } from "@azure/openai";

  import { AzureKeyCredential } from "@azure/core-auth";


  const endpoint = "<azure endpoint>";

  const credential = new AzureKeyCredential("<api key>");


  const client = new OpenAIClient(endpoint, credential);

  ```


  #### Azure Active Directory


  ```js

  import { OpenAIClient } from "@azure/openai";

  import { DefaultAzureCredential } from "@azure/identity";


  const endpoint = "<azure endpoint>";

  const credential = new DefaultAzureCredential();


  const client = new OpenAIClient(endpoint, credential);

  ```
fullName: OpenAIClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: OpenAIClient(KeyCredential, OpenAIClientOptions)
    uid: '@azure/openai.OpenAIClient.constructor_2'
    package: '@azure/openai'
    summary: >-
      Initializes an instance of OpenAIClient for use with the non-Azure OpenAI
      endpoint.
    remarks: >-
      OpenAIClient objects initialized with this constructor can only be used
      with the non-Azure OpenAI inference endpoint.
        To use OpenAIClient with an Azure OpenAI resource, use a constructor that accepts a resource URI and Azure authentication credential instead.
    isDeprecated: false
    syntax:
      content: >-
        new OpenAIClient(openAiApiKey: KeyCredential, options?:
        OpenAIClientOptions)
      parameters:
        - id: openAiApiKey
          type: KeyCredential
          description: The API key to use when connecting to the non-Azure OpenAI endpoint.
        - id: options
          type: <xref uid="@azure/openai.OpenAIClientOptions" />
          description: The options for configuring the client.
  - name: OpenAIClient(string, KeyCredential, OpenAIClientOptions)
    uid: '@azure/openai.OpenAIClient.constructor'
    package: '@azure/openai'
    summary: >-
      Initializes an instance of OpenAIClient for use with an Azure OpenAI
      resource.
    remarks: >-
      This constructor initializes an OpenAIClient object that can only be used
      with Azure OpenAI resources.
        To use OpenAIClient with a non-Azure OpenAI inference endpoint, use a constructor that accepts a non-Azure OpenAI API key instead.
    isDeprecated: false
    syntax:
      content: >-
        new OpenAIClient(endpoint: string, credential: KeyCredential, options?:
        OpenAIClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: >-
            The URI for an Azure OpenAI resource, including protocol and
            hostname.
                            For example: https://my-resource.openai.azure.com.
        - id: credential
          type: KeyCredential
          description: A key credential used to authenticate to an Azure OpenAI resource.
        - id: options
          type: <xref uid="@azure/openai.OpenAIClientOptions" />
          description: The options for configuring the client.
  - name: OpenAIClient(string, TokenCredential, OpenAIClientOptions)
    uid: '@azure/openai.OpenAIClient.constructor_1'
    package: '@azure/openai'
    summary: >-
      Initializes an instance of OpenAIClient for use with an Azure OpenAI
      resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new OpenAIClient(endpoint: string, credential: TokenCredential,
        options?: OpenAIClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: >-
            The URI for an Azure OpenAI resource, including protocol and
            hostname.
                            For example: https://my-resource.openai.azure.com.
        - id: credential
          type: TokenCredential
          description: >-
            A token credential used to authenticate with an Azure OpenAI
            resource.
        - id: options
          type: <xref uid="@azure/openai.OpenAIClientOptions" />
          description: The options for configuring the client.
methods:
  - name: getChatCompletions(string, ChatMessage[], GetChatCompletionsOptions)
    uid: '@azure/openai.OpenAIClient.getChatCompletions'
    package: '@azure/openai'
    summary: Get chat completions for provided chat context messages.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getChatCompletions(deploymentOrModelName: string, messages:
        ChatMessage[], options?: GetChatCompletionsOptions):
        Promise<ChatCompletions>
      parameters:
        - id: deploymentOrModelName
          type: string
          description: >-
            The name of the model deployment (when using Azure OpenAI) or model
            name (when using non-Azure OpenAI) to use for this request.
        - id: messages
          type: <xref uid="@azure/openai.ChatMessage" />[]
          description: The chat context messages to use for this request.
        - id: options
          type: <xref uid="@azure/openai.GetChatCompletionsOptions" />
          description: The chat completions options for this completions request.
      return:
        description: The chat completions for the given chat context messages.
        type: Promise&lt;<xref uid="@azure/openai.ChatCompletions" />&gt;
  - name: getCompletions(string, string[], GetCompletionsOptions)
    uid: '@azure/openai.OpenAIClient.getCompletions'
    package: '@azure/openai'
    summary: Returns textual completions as configured for a given prompt.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getCompletions(deploymentOrModelName: string, prompt: string[],
        options?: GetCompletionsOptions): Promise<Completions>
      parameters:
        - id: deploymentOrModelName
          type: string
          description: >-
            Specifies either the model deployment name (when using Azure OpenAI)
            or model name (when using non-Azure OpenAI) to use for this request.
        - id: prompt
          type: string[]
          description: The prompt to use for this request.
        - id: options
          type: <xref uid="@azure/openai.GetCompletionsOptions" />
          description: The options for this completions request.
      return:
        description: The completions for the given prompt.
        type: Promise&lt;<xref uid="@azure/openai.Completions" />&gt;
  - name: getEmbeddings(string, string[], GetEmbeddingsOptions)
    uid: '@azure/openai.OpenAIClient.getEmbeddings'
    package: '@azure/openai'
    summary: Return the computed embeddings for a given prompt.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEmbeddings(deploymentOrModelName: string, input: string[],
        options?: GetEmbeddingsOptions): Promise<Embeddings>
      parameters:
        - id: deploymentOrModelName
          type: string
          description: >-
            The name of the model deployment (when using Azure OpenAI) or model
            name (when using non-Azure OpenAI) to use for this request.
        - id: input
          type: string[]
          description: The prompt to use for this request.
        - id: options
          type: <xref uid="@azure/openai.GetEmbeddingsOptions" />
          description: The embeddings options for this embeddings request.
      return:
        description: The embeddings for the given prompt.
        type: Promise&lt;<xref uid="@azure/openai.Embeddings" />&gt;
  - name: listChatCompletions(string, ChatMessage[], GetChatCompletionsOptions)
    uid: '@azure/openai.OpenAIClient.listChatCompletions'
    package: '@azure/openai'
    summary: >-
      Lists the chat completions tokens as they become available for a chat
      context.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listChatCompletions(deploymentOrModelName: string, messages:
        ChatMessage[], options?: GetChatCompletionsOptions):
        Promise<AsyncIterable<Omit<ChatCompletions, "usage">>>
      parameters:
        - id: deploymentOrModelName
          type: string
          description: >-
            The name of the model deployment (when using Azure OpenAI) or model
            name (when using non-Azure OpenAI) to use for this request.
        - id: messages
          type: <xref uid="@azure/openai.ChatMessage" />[]
          description: The chat context messages to use for this request.
        - id: options
          type: <xref uid="@azure/openai.GetChatCompletionsOptions" />
          description: The chat completions options for this chat completions request.
      return:
        description: An asynchronous iterable of chat completions tokens.
        type: >-
          Promise&lt;AsyncIterable&lt;Omit&lt;<xref
          uid="@azure/openai.ChatCompletions" />, "usage"&gt;&gt;&gt;
  - name: listCompletions(string, string[], GetCompletionsOptions)
    uid: '@azure/openai.OpenAIClient.listCompletions'
    package: '@azure/openai'
    summary: Lists the completions tokens as they become available for a given prompt.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listCompletions(deploymentOrModelName: string, prompt:
        string[], options?: GetCompletionsOptions):
        Promise<AsyncIterable<Omit<Completions, "usage">>>
      parameters:
        - id: deploymentOrModelName
          type: string
          description: >-
            The name of the model deployment (when using Azure OpenAI) or model
            name (when using non-Azure OpenAI) to use for this request.
        - id: prompt
          type: string[]
          description: The prompt to use for this request.
        - id: options
          type: <xref uid="@azure/openai.GetCompletionsOptions" />
          description: The completions options for this completions request.
      return:
        description: An asynchronous iterable of completions tokens.
        type: >-
          Promise&lt;AsyncIterable&lt;Omit&lt;<xref
          uid="@azure/openai.Completions" />, "usage"&gt;&gt;&gt;
