### YamlMime:UniversalReference
items:
  - uid: '@azure/app-configuration.AppConfigurationClient'
    name: AppConfigurationClient
    fullName: AppConfigurationClient
    children:
      - '@azure/app-configuration.AppConfigurationClient.addConfigurationSetting'
      - '@azure/app-configuration.AppConfigurationClient.constructor'
      - '@azure/app-configuration.AppConfigurationClient.clearReadOnly'
      - >-
        @azure/app-configuration.AppConfigurationClient.deleteConfigurationSetting
      - '@azure/app-configuration.AppConfigurationClient.getConfigurationSetting'
      - >-
        @azure/app-configuration.AppConfigurationClient.listConfigurationSettings
      - '@azure/app-configuration.AppConfigurationClient.listRevisions'
      - '@azure/app-configuration.AppConfigurationClient.setConfigurationSetting'
      - '@azure/app-configuration.AppConfigurationClient.setReadOnly'
    langs:
      - typeScript
    type: class
    summary: Client for the Azure App Configuration service.
    package: '@azure/app-configuration'
  - uid: '@azure/app-configuration.AppConfigurationClient.addConfigurationSetting'
    name: >-
      addConfigurationSetting(AddConfigurationSettingParam,
      AddConfigurationSettingOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Add a setting into the Azure App Configuration service, failing if it

      already exists.

      Example usage:

      ```ts

      const result = await client.addConfigurationSetting({ key: "MyKey", label:
      "MyLabel", value: "MyValue" });

      ```
    syntax:
      content: >-
        function addConfigurationSetting(configurationSetting:
        AddConfigurationSettingParam, options?: AddConfigurationSettingOptions)
      parameters:
        - id: configurationSetting
          type:
            - '@azure/app-configuration.AddConfigurationSettingParam'
          description: A configuration setting.
        - id: options
          type:
            - '@azure/app-configuration.AddConfigurationSettingOptions'
          description: |
            Optional parameters for the request.
          optional: true
      return:
        type:
          - Promise<@azure/app-configuration.AddConfigurationSettingResponse>
    package: '@azure/app-configuration'
  - uid: '@azure/app-configuration.AppConfigurationClient.constructor'
    name: AppConfigurationClient(string)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the AppConfigurationClient class.
    syntax:
      content: 'new AppConfigurationClient(connectionString: string)'
      parameters:
        - id: connectionString
          type:
            - string
          description: |
            Connection string needed for a client to connect to Azure.
    package: '@azure/app-configuration'
  - uid: '@azure/app-configuration.AppConfigurationClient.clearReadOnly'
    name: 'clearReadOnly(ConfigurationSettingId, ClearReadOnlyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Makes the key's value writable again
    syntax:
      content: >-
        function clearReadOnly(id: ConfigurationSettingId, options?:
        ClearReadOnlyOptions)
      parameters:
        - id: id
          type:
            - '@azure/app-configuration.ConfigurationSettingId'
          description: |
            The id of the configuration setting to make writable.
        - id: options
          type:
            - '@azure/app-configuration.ClearReadOnlyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/app-configuration.ClearReadOnlyResponse>
    package: '@azure/app-configuration'
  - uid: '@azure/app-configuration.AppConfigurationClient.deleteConfigurationSetting'
    name: >-
      deleteConfigurationSetting(ConfigurationSettingId,
      DeleteConfigurationSettingOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Delete a setting from the Azure App Configuration service

      Example usage:

      ```ts

      const deletedSetting = await client.deleteConfigurationSetting({ key:
      "MyKey", label: "MyLabel" });

      ```
    syntax:
      content: >-
        function deleteConfigurationSetting(id: ConfigurationSettingId,
        options?: DeleteConfigurationSettingOptions)
      parameters:
        - id: id
          type:
            - '@azure/app-configuration.ConfigurationSettingId'
          description: The id of the configuration setting to delete.
        - id: options
          type:
            - '@azure/app-configuration.DeleteConfigurationSettingOptions'
          description: |
            Optional parameters for the request (ex: etag, label)
          optional: true
      return:
        type:
          - Promise<@azure/app-configuration.DeleteConfigurationSettingResponse>
    package: '@azure/app-configuration'
  - uid: '@azure/app-configuration.AppConfigurationClient.getConfigurationSetting'
    name: >-
      getConfigurationSetting(ConfigurationSettingId,
      GetConfigurationSettingOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a setting from the Azure App Configuration service.

      Example code:

      ```ts

      const setting = await client.getConfigurationSetting({ key: "MyKey",
      label: "MyLabel" });

      ```
    syntax:
      content: >-
        function getConfigurationSetting(id: ConfigurationSettingId, options?:
        GetConfigurationSettingOptions)
      parameters:
        - id: id
          type:
            - '@azure/app-configuration.ConfigurationSettingId'
          description: The id of the configuration setting to get.
        - id: options
          type:
            - '@azure/app-configuration.GetConfigurationSettingOptions'
          description: |
            Optional parameters for the request.
          optional: true
      return:
        type:
          - Promise<@azure/app-configuration.GetConfigurationSettingResponse>
    package: '@azure/app-configuration'
  - uid: '@azure/app-configuration.AppConfigurationClient.listConfigurationSettings'
    name: listConfigurationSettings(ListConfigurationSettingsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists settings from the Azure App Configuration service, optionally

      filtered by key names, labels and accept datetime.

      Example code:

      ```ts

      const allSettingsWithLabel = await client.listConfigurationSettings({
      labels: [ "MyLabel" ] });

      ```
    syntax:
      content: >-
        function listConfigurationSettings(options?:
        ListConfigurationSettingsOptions)
      parameters:
        - id: options
          type:
            - '@azure/app-configuration.ListConfigurationSettingsOptions'
          description: |
            Optional parameters for the request.
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/app-configuration.ConfigurationSetting,
            @azure/app-configuration.ListConfigurationSettingPage>
    package: '@azure/app-configuration'
  - uid: '@azure/app-configuration.AppConfigurationClient.listRevisions'
    name: listRevisions(ListRevisionsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Lists revisions of a set of keys, optionally filtered by key names,
      labels and accept datetime.
      Example code:
      ```ts
      const revisionsIterator = await client.listRevisions({ keys: ["MyKey"] });
      ```
    syntax:
      content: 'function listRevisions(options?: ListRevisionsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/app-configuration.ListRevisionsOptions'
          description: |
            Optional parameters for the request.
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/app-configuration.ConfigurationSetting,
            @azure/app-configuration.ListRevisionsPage>
    package: '@azure/app-configuration'
  - uid: '@azure/app-configuration.AppConfigurationClient.setConfigurationSetting'
    name: >-
      setConfigurationSetting(SetConfigurationSettingParam,
      SetConfigurationSettingOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets the value of a key in the Azure App Configuration service, allowing
      for an optional etag.
    syntax:
      content: >-
        function setConfigurationSetting(configurationSetting:
        SetConfigurationSettingParam, options?: SetConfigurationSettingOptions)
      parameters:
        - id: configurationSetting
          type:
            - '@azure/app-configuration.SetConfigurationSettingParam'
          description: A configuration value.
        - id: options
          type:
            - '@azure/app-configuration.SetConfigurationSettingOptions'
          description: >
            Optional parameters for the request.


            Example code:

            ```ts

            await client.setConfigurationSetting({ key: "MyKey", value:
            "MyValue" });

            ```
          optional: true
      return:
        type:
          - Promise<@azure/app-configuration.SetConfigurationSettingResponse>
    package: '@azure/app-configuration'
  - uid: '@azure/app-configuration.AppConfigurationClient.setReadOnly'
    name: 'setReadOnly(ConfigurationSettingId, SetReadOnlyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets a key's value to read only
    syntax:
      content: >-
        function setReadOnly(id: ConfigurationSettingId, options?:
        SetReadOnlyOptions)
      parameters:
        - id: id
          type:
            - '@azure/app-configuration.ConfigurationSettingId'
          description: |
            The id of the configuration setting to set to read-only.
        - id: options
          type:
            - '@azure/app-configuration.SetReadOnlyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/app-configuration.SetReadOnlyResponse>
    package: '@azure/app-configuration'
references:
  - uid: '@azure/app-configuration.AddConfigurationSettingParam'
    name: AddConfigurationSettingParam
    spec.typeScript:
      - name: AddConfigurationSettingParam
        fullName: AddConfigurationSettingParam
        uid: '@azure/app-configuration.AddConfigurationSettingParam'
  - uid: '@azure/app-configuration.AddConfigurationSettingOptions'
    name: AddConfigurationSettingOptions
    spec.typeScript:
      - name: AddConfigurationSettingOptions
        fullName: AddConfigurationSettingOptions
        uid: '@azure/app-configuration.AddConfigurationSettingOptions'
  - uid: Promise<@azure/app-configuration.AddConfigurationSettingResponse>
    name: AddConfigurationSettingResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AddConfigurationSettingResponse
        fullName: AddConfigurationSettingResponse
        uid: '@azure/app-configuration.AddConfigurationSettingResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/app-configuration.ConfigurationSettingId'
    name: ConfigurationSettingId
    spec.typeScript:
      - name: ConfigurationSettingId
        fullName: ConfigurationSettingId
        uid: '@azure/app-configuration.ConfigurationSettingId'
  - uid: '@azure/app-configuration.ClearReadOnlyOptions'
    name: ClearReadOnlyOptions
    spec.typeScript:
      - name: ClearReadOnlyOptions
        fullName: ClearReadOnlyOptions
        uid: '@azure/app-configuration.ClearReadOnlyOptions'
  - uid: Promise<@azure/app-configuration.ClearReadOnlyResponse>
    name: ClearReadOnlyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ClearReadOnlyResponse
        fullName: ClearReadOnlyResponse
        uid: '@azure/app-configuration.ClearReadOnlyResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/app-configuration.DeleteConfigurationSettingOptions'
    name: DeleteConfigurationSettingOptions
    spec.typeScript:
      - name: DeleteConfigurationSettingOptions
        fullName: DeleteConfigurationSettingOptions
        uid: '@azure/app-configuration.DeleteConfigurationSettingOptions'
  - uid: Promise<@azure/app-configuration.DeleteConfigurationSettingResponse>
    name: DeleteConfigurationSettingResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeleteConfigurationSettingResponse
        fullName: DeleteConfigurationSettingResponse
        uid: '@azure/app-configuration.DeleteConfigurationSettingResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/app-configuration.GetConfigurationSettingOptions'
    name: GetConfigurationSettingOptions
    spec.typeScript:
      - name: GetConfigurationSettingOptions
        fullName: GetConfigurationSettingOptions
        uid: '@azure/app-configuration.GetConfigurationSettingOptions'
  - uid: Promise<@azure/app-configuration.GetConfigurationSettingResponse>
    name: GetConfigurationSettingResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetConfigurationSettingResponse
        fullName: GetConfigurationSettingResponse
        uid: '@azure/app-configuration.GetConfigurationSettingResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/app-configuration.ListConfigurationSettingsOptions'
    name: ListConfigurationSettingsOptions
    spec.typeScript:
      - name: ListConfigurationSettingsOptions
        fullName: ListConfigurationSettingsOptions
        uid: '@azure/app-configuration.ListConfigurationSettingsOptions'
  - uid: >-
      PagedAsyncIterableIterator<@azure/app-configuration.ConfigurationSetting,
      @azure/app-configuration.ListConfigurationSettingPage>
    name: ListConfigurationSettingPage>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: ConfigurationSetting
        fullName: ConfigurationSetting
        uid: '@azure/app-configuration.ConfigurationSetting'
      - name: ', '
        fullName: ', '
      - name: ListConfigurationSettingPage
        fullName: ListConfigurationSettingPage
        uid: '@azure/app-configuration.ListConfigurationSettingPage'
      - name: '>'
        fullName: '>'
  - uid: '@azure/app-configuration.ListRevisionsOptions'
    name: ListRevisionsOptions
    spec.typeScript:
      - name: ListRevisionsOptions
        fullName: ListRevisionsOptions
        uid: '@azure/app-configuration.ListRevisionsOptions'
  - uid: >-
      PagedAsyncIterableIterator<@azure/app-configuration.ConfigurationSetting,
      @azure/app-configuration.ListRevisionsPage>
    name: ListRevisionsPage>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: ConfigurationSetting
        fullName: ConfigurationSetting
        uid: '@azure/app-configuration.ConfigurationSetting'
      - name: ', '
        fullName: ', '
      - name: ListRevisionsPage
        fullName: ListRevisionsPage
        uid: '@azure/app-configuration.ListRevisionsPage'
      - name: '>'
        fullName: '>'
  - uid: '@azure/app-configuration.SetConfigurationSettingParam'
    name: SetConfigurationSettingParam
    spec.typeScript:
      - name: SetConfigurationSettingParam
        fullName: SetConfigurationSettingParam
        uid: '@azure/app-configuration.SetConfigurationSettingParam'
  - uid: '@azure/app-configuration.SetConfigurationSettingOptions'
    name: SetConfigurationSettingOptions
    spec.typeScript:
      - name: SetConfigurationSettingOptions
        fullName: SetConfigurationSettingOptions
        uid: '@azure/app-configuration.SetConfigurationSettingOptions'
  - uid: Promise<@azure/app-configuration.SetConfigurationSettingResponse>
    name: SetConfigurationSettingResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SetConfigurationSettingResponse
        fullName: SetConfigurationSettingResponse
        uid: '@azure/app-configuration.SetConfigurationSettingResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/app-configuration.SetReadOnlyOptions'
    name: SetReadOnlyOptions
    spec.typeScript:
      - name: SetReadOnlyOptions
        fullName: SetReadOnlyOptions
        uid: '@azure/app-configuration.SetReadOnlyOptions'
  - uid: Promise<@azure/app-configuration.SetReadOnlyResponse>
    name: SetReadOnlyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SetReadOnlyResponse
        fullName: SetReadOnlyResponse
        uid: '@azure/app-configuration.SetReadOnlyResponse'
      - name: '>'
        fullName: '>'
