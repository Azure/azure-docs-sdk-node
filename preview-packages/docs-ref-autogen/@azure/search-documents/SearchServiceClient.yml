### YamlMime:UniversalReference
items:
  - uid: '@azure/search-documents.SearchServiceClient'
    name: SearchServiceClient
    fullName: SearchServiceClient
    children:
      - '@azure/search-documents.SearchServiceClient.analyzeText'
      - '@azure/search-documents.SearchServiceClient.apiVersion'
      - '@azure/search-documents.SearchServiceClient.createIndex'
      - '@azure/search-documents.SearchServiceClient.createOrUpdateIndex'
      - '@azure/search-documents.SearchServiceClient.createOrUpdateSkillset'
      - '@azure/search-documents.SearchServiceClient.createOrUpdateSynonymMap'
      - '@azure/search-documents.SearchServiceClient.createSkillset'
      - '@azure/search-documents.SearchServiceClient.createSynonymMap'
      - '@azure/search-documents.SearchServiceClient.deleteIndex'
      - '@azure/search-documents.SearchServiceClient.deleteSkillset'
      - '@azure/search-documents.SearchServiceClient.deleteSynonymMap'
      - '@azure/search-documents.SearchServiceClient.endpoint'
      - '@azure/search-documents.SearchServiceClient.getIndex'
      - '@azure/search-documents.SearchServiceClient.getIndexStatistics'
      - '@azure/search-documents.SearchServiceClient.getSkillset'
      - '@azure/search-documents.SearchServiceClient.getSynonymMap'
      - '@azure/search-documents.SearchServiceClient.listIndexes'
      - '@azure/search-documents.SearchServiceClient.listSkillsets'
      - '@azure/search-documents.SearchServiceClient.listSynonymMaps'
      - '@azure/search-documents.SearchServiceClient.constructor'
    langs:
      - typeScript
    type: class
    summary: |-
      Class to perform operations to manage
      (create, update, list/delete)
      indexes, skillssets, synonymmaps, etc.
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.analyzeText'
    name: 'analyzeText(string, AnalyzeTextOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Calls an analyzer or tokenizer manually on provided text.
    syntax:
      content: 'function analyzeText(indexName: string, options: AnalyzeTextOptions)'
      parameters:
        - id: indexName
          type:
            - string
          description: The name of the index that contains the field to analyze
        - id: options
          type:
            - '@azure/search-documents.AnalyzeTextOptions'
          description: |
            Additional arguments
      return:
        type:
          - Promise<@azure/search-documents.AnalyzeResult>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: The API version to use when communicating with the service.
    syntax:
      content: 'apiVersion: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createIndex'
    name: 'createIndex(Index, CreateIndexOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new index.
    syntax:
      content: 'function createIndex(index: Index, options?: CreateIndexOptions)'
      parameters:
        - id: index
          type:
            - '@azure/search-documents.Index'
          description: The information describing the index to be created.
        - id: options
          type:
            - '@azure/search-documents.CreateIndexOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Index>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createOrUpdateIndex'
    name: 'createOrUpdateIndex(Index, CreateOrUpdateIndexOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new index or modifies an existing one.
    syntax:
      content: >-
        function createOrUpdateIndex(index: Index, options?:
        CreateOrUpdateIndexOptions)
      parameters:
        - id: index
          type:
            - '@azure/search-documents.Index'
          description: The information describing the index to be created.
        - id: options
          type:
            - '@azure/search-documents.CreateOrUpdateIndexOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Index>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createOrUpdateSkillset'
    name: 'createOrUpdateSkillset(Skillset, CreateOrUpdateSkillsetOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new Skillset or modifies an existing one.
    syntax:
      content: >-
        function createOrUpdateSkillset(skillset: Skillset, options?:
        CreateOrUpdateSkillsetOptions)
      parameters:
        - id: skillset
          type:
            - '@azure/search-documents.Skillset'
          description: The information describing the index to be created.
        - id: options
          type:
            - '@azure/search-documents.CreateOrUpdateSkillsetOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Skillset>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createOrUpdateSynonymMap'
    name: 'createOrUpdateSynonymMap(SynonymMap, CreateOrUpdateSynonymMapOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new SynonymMap or modifies an existing one.
    syntax:
      content: >-
        function createOrUpdateSynonymMap(synonymMap: SynonymMap, options?:
        CreateOrUpdateSynonymMapOptions)
      parameters:
        - id: synonymMap
          type:
            - '@azure/search-documents.SynonymMap'
          description: The information describing the SynonymMap to be created.
        - id: options
          type:
            - '@azure/search-documents.CreateOrUpdateSynonymMapOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.SynonymMap>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createSkillset'
    name: 'createSkillset(Skillset, CreateSkillsetOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new skillset in a search service.
    syntax:
      content: >-
        function createSkillset(skillset: Skillset, options?:
        CreateSkillsetOptions)
      parameters:
        - id: skillset
          type:
            - '@azure/search-documents.Skillset'
          description: >-
            The skillset containing one or more skills to create in a search
            service.
        - id: options
          type:
            - '@azure/search-documents.CreateSkillsetOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Skillset>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.createSynonymMap'
    name: 'createSynonymMap(SynonymMap, CreateSynonymMapOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new SynonymMap in a search service.
    syntax:
      content: >-
        function createSynonymMap(synonymMap: SynonymMap, options?:
        CreateSynonymMapOptions)
      parameters:
        - id: synonymMap
          type:
            - '@azure/search-documents.SynonymMap'
          description: The synonymMap definition to create in a search service.
        - id: options
          type:
            - '@azure/search-documents.CreateSynonymMapOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.SynonymMap>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.deleteIndex'
    name: 'deleteIndex(string, DeleteIndexOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing index.
    syntax:
      content: 'function deleteIndex(indexName: string, options?: DeleteIndexOptions)'
      parameters:
        - id: indexName
          type:
            - string
          description: The name of the index to delete.
        - id: options
          type:
            - '@azure/search-documents.DeleteIndexOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.deleteSkillset'
    name: 'deleteSkillset(string, DeleteSkillsetOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing Skillset.
    syntax:
      content: >-
        function deleteSkillset(skillsetName: string, options?:
        DeleteSkillsetOptions)
      parameters:
        - id: skillsetName
          type:
            - string
          description: The name of the Skillset to delete.
        - id: options
          type:
            - '@azure/search-documents.DeleteSkillsetOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.deleteSynonymMap'
    name: 'deleteSynonymMap(string, DeleteSynonymMapOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an existing SynonymMap.
    syntax:
      content: >-
        function deleteSynonymMap(synonymMapName: string, options?:
        DeleteSynonymMapOptions)
      parameters:
        - id: synonymMapName
          type:
            - string
          description: The name of the synonymMap to delete.
        - id: options
          type:
            - '@azure/search-documents.DeleteSynonymMapOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<void>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: The endpoint of the search service
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getIndex'
    name: 'getIndex(string, GetIndexOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about an index.
    syntax:
      content: 'function getIndex(indexName: string, options?: GetIndexOptions)'
      parameters:
        - id: indexName
          type:
            - string
          description: The name of the index.
        - id: options
          type:
            - '@azure/search-documents.GetIndexOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Index>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getIndexStatistics'
    name: 'getIndexStatistics(string, GetIndexStatisticsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves statistics about an index, such as the count of documents and
      the size

      of index storage.
    syntax:
      content: >-
        function getIndexStatistics(indexName: string, options?:
        GetIndexStatisticsOptions)
      parameters:
        - id: indexName
          type:
            - string
          description: The name of the index.
        - id: options
          type:
            - '@azure/search-documents.GetIndexStatisticsOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.GetIndexStatisticsResult>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getSkillset'
    name: 'getSkillset(string, GetSkillSetOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about an Skillset.
    syntax:
      content: 'function getSkillset(skillsetName: string, options?: GetSkillSetOptions)'
      parameters:
        - id: skillsetName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/search-documents.GetSkillSetOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.Skillset>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.getSynonymMap'
    name: 'getSynonymMap(string, GetSynonymMapsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about an SynonymMap.
    syntax:
      content: >-
        function getSynonymMap(synonymMapName: string, options?:
        GetSynonymMapsOptions)
      parameters:
        - id: synonymMapName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/search-documents.GetSynonymMapsOptions'
          description: |
            Additional optional arguments.
          optional: true
      return:
        type:
          - Promise<@azure/search-documents.SynonymMap>
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.listIndexes'
    name: listIndexes(ListIndexesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a list of existing indexes in the service.
    syntax:
      content: 'function listIndexes(options?: ListIndexesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/search-documents.ListIndexesOptions'
          description: |
            Options to the list index operation.
          optional: true
      return:
        type:
          - 'Promise<@azure/search-documents.Index[]>'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.listSkillsets'
    name: listSkillsets(ListSkillsetsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a list of existing Skillsets in the service.
    syntax:
      content: 'function listSkillsets(options?: ListSkillsetsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/search-documents.ListSkillsetsOptions'
          description: |
            Options to the list Skillsets operation.
          optional: true
      return:
        type:
          - 'Promise<@azure/search-documents.Skillset[]>'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.listSynonymMaps'
    name: listSynonymMaps(ListSynonymMapsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a list of existing SynonymMaps in the service.
    syntax:
      content: 'function listSynonymMaps(options?: ListSynonymMapsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/search-documents.ListSynonymMapsOptions'
          description: |
            Options to the list SynonymMaps operation.
          optional: true
      return:
        type:
          - 'Promise<@azure/search-documents.SynonymMap[]>'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.SearchServiceClient.constructor'
    name: 'SearchServiceClient(string, KeyCredential, SearchServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Creates an instance of SearchServiceClient.

      Example usage:

      ```ts

      const { SearchServiceClient, AzureKeyCredential } =
      require("@azure/search-documents");


      const client = new SearchServiceClient(
        "<endpoint>",
        new AzureKeyCredential("<Admin Key>");
      );

      ```
    syntax:
      content: >-
        new SearchServiceClient(endpoint: string, credential: KeyCredential,
        options?: SearchServiceClientOptions)
      parameters:
        - id: endpoint
          type:
            - string
          description: The endpoint of the search service
        - id: credential
          type:
            - KeyCredential
          description: Used to authenticate requests to the service.
        - id: options
          type:
            - '@azure/search-documents.SearchServiceClientOptions'
          description: ''
          optional: true
    package: '@azure/search-documents'
references:
  - uid: '@azure/search-documents.SearchServiceClientOptions'
    name: SearchServiceClientOptions
    spec.typeScript:
      - name: SearchServiceClientOptions
        fullName: SearchServiceClientOptions
        uid: '@azure/search-documents.SearchServiceClientOptions'
  - uid: '@azure/search-documents.AnalyzeTextOptions'
    name: AnalyzeTextOptions
    spec.typeScript:
      - name: AnalyzeTextOptions
        fullName: AnalyzeTextOptions
        uid: '@azure/search-documents.AnalyzeTextOptions'
  - uid: Promise<@azure/search-documents.AnalyzeResult>
    name: AnalyzeResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AnalyzeResult
        fullName: AnalyzeResult
        uid: '@azure/search-documents.AnalyzeResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.Index'
    name: Index
    spec.typeScript:
      - name: Index
        fullName: Index
        uid: '@azure/search-documents.Index'
  - uid: '@azure/search-documents.CreateIndexOptions'
    name: CreateIndexOptions
    spec.typeScript:
      - name: CreateIndexOptions
        fullName: CreateIndexOptions
        uid: '@azure/search-documents.CreateIndexOptions'
  - uid: Promise<@azure/search-documents.Index>
    name: Index>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Index
        fullName: Index
        uid: '@azure/search-documents.Index'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.CreateOrUpdateIndexOptions'
    name: CreateOrUpdateIndexOptions
    spec.typeScript:
      - name: CreateOrUpdateIndexOptions
        fullName: CreateOrUpdateIndexOptions
        uid: '@azure/search-documents.CreateOrUpdateIndexOptions'
  - uid: '@azure/search-documents.Skillset'
    name: Skillset
    spec.typeScript:
      - name: Skillset
        fullName: Skillset
        uid: '@azure/search-documents.Skillset'
  - uid: '@azure/search-documents.CreateOrUpdateSkillsetOptions'
    name: CreateOrUpdateSkillsetOptions
    spec.typeScript:
      - name: CreateOrUpdateSkillsetOptions
        fullName: CreateOrUpdateSkillsetOptions
        uid: '@azure/search-documents.CreateOrUpdateSkillsetOptions'
  - uid: Promise<@azure/search-documents.Skillset>
    name: Skillset>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Skillset
        fullName: Skillset
        uid: '@azure/search-documents.Skillset'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.SynonymMap'
    name: SynonymMap
    spec.typeScript:
      - name: SynonymMap
        fullName: SynonymMap
        uid: '@azure/search-documents.SynonymMap'
  - uid: '@azure/search-documents.CreateOrUpdateSynonymMapOptions'
    name: CreateOrUpdateSynonymMapOptions
    spec.typeScript:
      - name: CreateOrUpdateSynonymMapOptions
        fullName: CreateOrUpdateSynonymMapOptions
        uid: '@azure/search-documents.CreateOrUpdateSynonymMapOptions'
  - uid: Promise<@azure/search-documents.SynonymMap>
    name: SynonymMap>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SynonymMap
        fullName: SynonymMap
        uid: '@azure/search-documents.SynonymMap'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.CreateSkillsetOptions'
    name: CreateSkillsetOptions
    spec.typeScript:
      - name: CreateSkillsetOptions
        fullName: CreateSkillsetOptions
        uid: '@azure/search-documents.CreateSkillsetOptions'
  - uid: '@azure/search-documents.CreateSynonymMapOptions'
    name: CreateSynonymMapOptions
    spec.typeScript:
      - name: CreateSynonymMapOptions
        fullName: CreateSynonymMapOptions
        uid: '@azure/search-documents.CreateSynonymMapOptions'
  - uid: '@azure/search-documents.DeleteIndexOptions'
    name: DeleteIndexOptions
    spec.typeScript:
      - name: DeleteIndexOptions
        fullName: DeleteIndexOptions
        uid: '@azure/search-documents.DeleteIndexOptions'
  - uid: '@azure/search-documents.DeleteSkillsetOptions'
    name: DeleteSkillsetOptions
    spec.typeScript:
      - name: DeleteSkillsetOptions
        fullName: DeleteSkillsetOptions
        uid: '@azure/search-documents.DeleteSkillsetOptions'
  - uid: '@azure/search-documents.DeleteSynonymMapOptions'
    name: DeleteSynonymMapOptions
    spec.typeScript:
      - name: DeleteSynonymMapOptions
        fullName: DeleteSynonymMapOptions
        uid: '@azure/search-documents.DeleteSynonymMapOptions'
  - uid: '@azure/search-documents.GetIndexOptions'
    name: GetIndexOptions
    spec.typeScript:
      - name: GetIndexOptions
        fullName: GetIndexOptions
        uid: '@azure/search-documents.GetIndexOptions'
  - uid: '@azure/search-documents.GetIndexStatisticsOptions'
    name: GetIndexStatisticsOptions
    spec.typeScript:
      - name: GetIndexStatisticsOptions
        fullName: GetIndexStatisticsOptions
        uid: '@azure/search-documents.GetIndexStatisticsOptions'
  - uid: Promise<@azure/search-documents.GetIndexStatisticsResult>
    name: GetIndexStatisticsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: GetIndexStatisticsResult
        fullName: GetIndexStatisticsResult
        uid: '@azure/search-documents.GetIndexStatisticsResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/search-documents.GetSkillSetOptions'
    name: GetSkillSetOptions
    spec.typeScript:
      - name: GetSkillSetOptions
        fullName: GetSkillSetOptions
        uid: '@azure/search-documents.GetSkillSetOptions'
  - uid: '@azure/search-documents.GetSynonymMapsOptions'
    name: GetSynonymMapsOptions
    spec.typeScript:
      - name: GetSynonymMapsOptions
        fullName: GetSynonymMapsOptions
        uid: '@azure/search-documents.GetSynonymMapsOptions'
  - uid: '@azure/search-documents.ListIndexesOptions'
    name: ListIndexesOptions
    spec.typeScript:
      - name: ListIndexesOptions
        fullName: ListIndexesOptions
        uid: '@azure/search-documents.ListIndexesOptions'
  - uid: 'Promise<@azure/search-documents.Index[]>'
    name: 'Index[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Index
        fullName: Index
        uid: '@azure/search-documents.Index'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/search-documents.ListSkillsetsOptions'
    name: ListSkillsetsOptions
    spec.typeScript:
      - name: ListSkillsetsOptions
        fullName: ListSkillsetsOptions
        uid: '@azure/search-documents.ListSkillsetsOptions'
  - uid: 'Promise<@azure/search-documents.Skillset[]>'
    name: 'Skillset[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Skillset
        fullName: Skillset
        uid: '@azure/search-documents.Skillset'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/search-documents.ListSynonymMapsOptions'
    name: ListSynonymMapsOptions
    spec.typeScript:
      - name: ListSynonymMapsOptions
        fullName: ListSynonymMapsOptions
        uid: '@azure/search-documents.ListSynonymMapsOptions'
  - uid: 'Promise<@azure/search-documents.SynonymMap[]>'
    name: 'SynonymMap[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SynonymMap
        fullName: SynonymMap
        uid: '@azure/search-documents.SynonymMap'
      - name: '[]>'
        fullName: '[]>'
