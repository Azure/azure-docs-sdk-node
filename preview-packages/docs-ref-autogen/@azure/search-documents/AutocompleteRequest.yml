### YamlMime:UniversalReference
items:
  - uid: '@azure/search-documents.AutocompleteRequest'
    name: AutocompleteRequest
    fullName: AutocompleteRequest<Fields>
    children:
      - '@azure/search-documents.AutocompleteRequest.autocompleteMode'
      - '@azure/search-documents.AutocompleteRequest.filter'
      - '@azure/search-documents.AutocompleteRequest.highlightPostTag'
      - '@azure/search-documents.AutocompleteRequest.highlightPreTag'
      - '@azure/search-documents.AutocompleteRequest.minimumCoverage'
      - '@azure/search-documents.AutocompleteRequest.searchFields'
      - '@azure/search-documents.AutocompleteRequest.searchText'
      - '@azure/search-documents.AutocompleteRequest.suggesterName'
      - '@azure/search-documents.AutocompleteRequest.top'
      - '@azure/search-documents.AutocompleteRequest.useFuzzyMatching'
    langs:
      - typeScript
    type: interface
    summary: 'Parameters for fuzzy matching, and other autocomplete query behaviors.'
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AutocompleteRequest.autocompleteMode'
    name: autocompleteMode
    fullName: autocompleteMode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies the mode for Autocomplete. The default is 'oneTerm'. Use
      'twoTerms' to get shingles

      and 'oneTermWithContext' to use the current context while producing
      auto-completed terms.

      Possible values include: 'oneTerm', 'twoTerms', 'oneTermWithContext'
    optional: true
    syntax:
      content: 'autocompleteMode?: AutocompleteMode'
      return:
        type:
          - '@azure/search-documents.AutocompleteMode'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AutocompleteRequest.filter'
    name: filter
    fullName: filter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An OData expression that filters the documents used to produce completed
      terms for the

      Autocomplete result.
    optional: true
    syntax:
      content: 'filter?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AutocompleteRequest.highlightPostTag'
    name: highlightPostTag
    fullName: highlightPostTag
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A string tag that is appended to hit highlights. Must be set with
      highlightPreTag. If omitted,

      hit highlighting is disabled.
    optional: true
    syntax:
      content: 'highlightPostTag?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AutocompleteRequest.highlightPreTag'
    name: highlightPreTag
    fullName: highlightPreTag
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A string tag that is prepended to hit highlights. Must be set with
      highlightPostTag. If

      omitted, hit highlighting is disabled.
    optional: true
    syntax:
      content: 'highlightPreTag?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AutocompleteRequest.minimumCoverage'
    name: minimumCoverage
    fullName: minimumCoverage
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A number between 0 and 100 indicating the percentage of the index that
      must be covered by an

      autocomplete query in order for the query to be reported as a success.
      This parameter can be

      useful for ensuring search availability even for services with only one
      replica. The default

      is 80.
    optional: true
    syntax:
      content: 'minimumCoverage?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AutocompleteRequest.searchFields'
    name: searchFields
    fullName: searchFields
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The comma-separated list of field names to consider when querying for
      auto-completed terms.

      Target fields must be included in the specified suggester.
    optional: true
    syntax:
      content: 'searchFields?: Fields[]'
      return:
        type:
          - 'Fields[]'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AutocompleteRequest.searchText'
    name: searchText
    fullName: searchText
    children: []
    langs:
      - typeScript
    type: property
    summary: The search text on which to base autocomplete results.
    syntax:
      content: 'searchText: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AutocompleteRequest.suggesterName'
    name: suggesterName
    fullName: suggesterName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The name of the suggester as specified in the suggesters collection that's
      part of the index

      definition.
    syntax:
      content: 'suggesterName: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AutocompleteRequest.top'
    name: top
    fullName: top
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of auto-completed terms to retrieve. This must be a value
      between 1 and 100. The

      default is 5.
    optional: true
    syntax:
      content: 'top?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.AutocompleteRequest.useFuzzyMatching'
    name: useFuzzyMatching
    fullName: useFuzzyMatching
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether to use fuzzy matching for the autocomplete
      query. Default is false.

      When set to true, the query will autocomplete terms even if there's a
      substituted or missing

      character in the search text. While this provides a better experience in
      some scenarios, it

      comes at a performance cost as fuzzy autocomplete queries are slower and
      consume more

      resources.
    optional: true
    syntax:
      content: 'useFuzzyMatching?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
references:
  - uid: '@azure/search-documents.AutocompleteMode'
    name: AutocompleteMode
    spec.typeScript:
      - name: AutocompleteMode
        fullName: AutocompleteMode
        uid: '@azure/search-documents.AutocompleteMode'
