### YamlMime:UniversalReference
items:
  - uid: '@azure/search-documents.PatternAnalyzer'
    name: PatternAnalyzer
    fullName: PatternAnalyzer
    children:
      - '@azure/search-documents.PatternAnalyzer.flags'
      - '@azure/search-documents.PatternAnalyzer.lowerCaseTerms'
      - '@azure/search-documents.PatternAnalyzer.name'
      - '@azure/search-documents.PatternAnalyzer.odatatype'
      - '@azure/search-documents.PatternAnalyzer.pattern'
      - '@azure/search-documents.PatternAnalyzer.stopwords'
    langs:
      - typeScript
    type: interface
    summary: >-
      Flexibly separates text into terms via a regular expression pattern. This
      analyzer is

      implemented using Apache Lucene.
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.PatternAnalyzer.flags'
    name: flags
    fullName: flags
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Regular expression flags. Possible values include: 'CANON_EQ',
      'CASE_INSENSITIVE', 'COMMENTS',

      'DOTALL', 'LITERAL', 'MULTILINE', 'UNICODE_CASE', 'UNIX_LINES'
    optional: true
    syntax:
      content: 'flags?: RegexFlags[]'
      return:
        type:
          - '@azure/search-documents.RegexFlags[]'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.PatternAnalyzer.lowerCaseTerms'
    name: lowerCaseTerms
    fullName: lowerCaseTerms
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A value indicating whether terms should be lower-cased. Default is true.
      Default value: true.
    optional: true
    syntax:
      content: 'lowerCaseTerms?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.PatternAnalyzer.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The name of the analyzer. It must only contain letters, digits, spaces,
      dashes or underscores,

      can only start and end with alphanumeric characters, and is limited to 128
      characters.
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.PatternAnalyzer.odatatype'
    name: odatatype
    fullName: odatatype
    children: []
    langs:
      - typeScript
    type: property
    summary: Polymorphic Discriminator
    syntax:
      content: 'odatatype: "#Microsoft.Azure.Search.PatternAnalyzer"'
      return:
        type:
          - '"#Microsoft.Azure.Search.PatternAnalyzer"'
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.PatternAnalyzer.pattern'
    name: pattern
    fullName: pattern
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A regular expression pattern to match token separators. Default is an
      expression that matches

      one or more whitespace characters. Default value: '\W+'.
    optional: true
    syntax:
      content: 'pattern?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/search-documents'
  - uid: '@azure/search-documents.PatternAnalyzer.stopwords'
    name: stopwords
    fullName: stopwords
    children: []
    langs:
      - typeScript
    type: property
    summary: A list of stopwords.
    optional: true
    syntax:
      content: 'stopwords?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/search-documents'
references:
  - uid: '@azure/search-documents.RegexFlags[]'
    name: 'RegexFlags[]'
    spec.typeScript:
      - name: RegexFlags
        fullName: RegexFlags
        uid: '@azure/search-documents.RegexFlags'
      - name: '[]'
        fullName: '[]'
