### YamlMime:TSType
name: ResourceGroupsImpl
uid: '@azure/arm-resources.ResourceGroupsImpl'
package: '@azure/arm-resources'
summary: Class representing a ResourceGroups.
fullName: ResourceGroupsImpl
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ResourceGroupsImpl(ResourceManagementClientContext)
    uid: '@azure/arm-resources.ResourceGroupsImpl.constructor'
    package: '@azure/arm-resources'
    summary: Initialize a new instance of the class ResourceGroups class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ResourceGroupsImpl(client: ResourceManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/arm-resources.ResourceManagementClientContext" />
          description: |
            Reference to the service client
methods:
  - name: 'beginDelete(string, ResourceGroupsDeleteOptionalParams)'
    uid: '@azure/arm-resources.ResourceGroupsImpl.beginDelete'
    package: '@azure/arm-resources'
    summary: >-
      When you delete a resource group, all of its resources are also deleted.
      Deleting a resource group

      deletes all of its template deployments and currently stored operations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, options?:
        ResourceGroupsDeleteOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to delete. The name is case
            insensitive.
        - id: options
          type: >-
            <xref uid="@azure/arm-resources.ResourceGroupsDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
        description: ''
  - name: 'beginDeleteAndWait(string, ResourceGroupsDeleteOptionalParams)'
    uid: '@azure/arm-resources.ResourceGroupsImpl.beginDeleteAndWait'
    package: '@azure/arm-resources'
    summary: >-
      When you delete a resource group, all of its resources are also deleted.
      Deleting a resource group

      deletes all of its template deployments and currently stored operations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, options?:
        ResourceGroupsDeleteOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to delete. The name is case
            insensitive.
        - id: options
          type: >-
            <xref uid="@azure/arm-resources.ResourceGroupsDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: >-
      beginExportTemplate(string, ExportTemplateRequest,
      ResourceGroupsExportTemplateOptionalParams)
    uid: '@azure/arm-resources.ResourceGroupsImpl.beginExportTemplate'
    package: '@azure/arm-resources'
    summary: Captures the specified resource group as a template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginExportTemplate(resourceGroupName: string, parameters:
        ExportTemplateRequest, options?:
        ResourceGroupsExportTemplateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ExportTemplateRequest" />
          description: Parameters for exporting the template.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resources.ResourceGroupsExportTemplateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-resources.ResourceGroupsExportTemplateResponse"
          />&gt;, <xref
          uid="@azure/arm-resources.ResourceGroupsExportTemplateResponse"
          />&gt;&gt;
        description: ''
  - name: >-
      beginExportTemplateAndWait(string, ExportTemplateRequest,
      ResourceGroupsExportTemplateOptionalParams)
    uid: '@azure/arm-resources.ResourceGroupsImpl.beginExportTemplateAndWait'
    package: '@azure/arm-resources'
    summary: Captures the specified resource group as a template.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginExportTemplateAndWait(resourceGroupName: string,
        parameters: ExportTemplateRequest, options?:
        ResourceGroupsExportTemplateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ExportTemplateRequest" />
          description: Parameters for exporting the template.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resources.ResourceGroupsExportTemplateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resources.ResourceGroupsExportTemplateResponse" />&gt;
        description: ''
  - name: 'checkExistence(string, ResourceGroupsCheckExistenceOptionalParams)'
    uid: '@azure/arm-resources.ResourceGroupsImpl.checkExistence'
    package: '@azure/arm-resources'
    summary: Checks whether a resource group exists.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkExistence(resourceGroupName: string, options?:
        ResourceGroupsCheckExistenceOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to check. The name is case
            insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resources.ResourceGroupsCheckExistenceOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resources.ResourceGroupsCheckExistenceResponse" />&gt;
        description: ''
  - name: >-
      createOrUpdate(string, ResourceGroup,
      ResourceGroupsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-resources.ResourceGroupsImpl.createOrUpdate'
    package: '@azure/arm-resources'
    summary: Creates or updates a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, parameters:
        ResourceGroup, options?: ResourceGroupsCreateOrUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: |-
            The name of the resource group to create or update. Can include
                                     alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters that
                                     match the allowed characters.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourceGroup" />
          description: Parameters supplied to the create or update a resource group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resources.ResourceGroupsCreateOrUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resources.ResourceGroupsCreateOrUpdateResponse" />&gt;
        description: ''
  - name: 'get(string, ResourceGroupsGetOptionalParams)'
    uid: '@azure/arm-resources.ResourceGroupsImpl.get'
    package: '@azure/arm-resources'
    summary: Gets a resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, options?:
        ResourceGroupsGetOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: options
          type: <xref uid="@azure/arm-resources.ResourceGroupsGetOptionalParams" />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref uid="@azure/arm-resources.ResourceGroupsGetResponse"
          />&gt;
        description: ''
  - name: list(ResourceGroupsListOptionalParams)
    uid: '@azure/arm-resources.ResourceGroupsImpl.list'
    package: '@azure/arm-resources'
    summary: Gets all the resource groups for a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(options?: ResourceGroupsListOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="@azure/arm-resources.ResourceGroupsListOptionalParams" />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-resources.ResourceGroup" />&gt;
        description: ''
  - name: 'listNext(string, ResourceGroupsListNextOptionalParams)'
    uid: '@azure/arm-resources.ResourceGroupsImpl.listNext'
    package: '@azure/arm-resources'
    summary: ListNext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextLink: string, options?:
        ResourceGroupsListNextOptionalParams)
      parameters:
        - id: nextLink
          type: string
          description: The nextLink from the previous successful call to the List method.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resources.ResourceGroupsListNextOptionalParams" />
          description: |
            The options parameters.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-resources.ResourceGroup" />&gt;
        description: ''
  - name: 'update(string, ResourceGroupPatchable, ResourceGroupsUpdateOptionalParams)'
    uid: '@azure/arm-resources.ResourceGroupsImpl.update'
    package: '@azure/arm-resources'
    summary: >-
      Resource groups can be updated through a simple PATCH operation to a group
      address. The format of

      the request is the same as that for creating a resource group. If a field
      is unspecified, the

      current value is retained.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, parameters:
        ResourceGroupPatchable, options?: ResourceGroupsUpdateOptionalParams)
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to update. The name is case
            insensitive.
        - id: parameters
          type: <xref uid="@azure/arm-resources.ResourceGroupPatchable" />
          description: Parameters supplied to update a resource group.
        - id: options
          type: >-
            <xref uid="@azure/arm-resources.ResourceGroupsUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resources.ResourceGroupsUpdateResponse" />&gt;
        description: ''
