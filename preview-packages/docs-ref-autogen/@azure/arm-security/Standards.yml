### YamlMime:TSType
name: Standards
uid: '@azure/arm-security.Standards'
package: '@azure/arm-security'
summary: Interface representing a Standards.
fullName: Standards
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, Standard,
      StandardsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-security.Standards.createOrUpdate'
    package: '@azure/arm-security'
    summary: >-
      Create a security standard on the given scope.  Available only for custom
      standards.  Will

      create/update the required standard definitions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, standardId: string,
        standard: Standard, options?: StandardsCreateOrUpdateOptionalParams):
        Promise<StandardsCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: standardId
          type: string
          description: The Security Standard key - unique key for the standard type
        - id: standard
          type: <xref uid="@azure/arm-security.Standard" />
          description: Custom security standard over a pre-defined scope
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.StandardsCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-security.StandardsCreateOrUpdateResponse" />&gt;
  - name: 'delete(string, string, StandardsDeleteOptionalParams)'
    uid: '@azure/arm-security.Standards.delete'
    package: '@azure/arm-security'
    summary: Delete a security standard on a scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, standardId: string, options?:
        StandardsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: standardId
          type: string
          description: The Security Standard key - unique key for the standard type
        - id: options
          type: <xref uid="@azure/arm-security.StandardsDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, string, StandardsGetOptionalParams)'
    uid: '@azure/arm-security.Standards.get'
    package: '@azure/arm-security'
    summary: Get a specific security standard for the requested scope
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, standardId: string, options?:
        StandardsGetOptionalParams): Promise<StandardsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: standardId
          type: string
          description: The Security Standard key - unique key for the standard type
        - id: options
          type: <xref uid="@azure/arm-security.StandardsGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-security.StandardsGetResponse" />&gt;
  - name: 'list(string, StandardsListOptionalParams)'
    uid: '@azure/arm-security.Standards.list'
    package: '@azure/arm-security'
    summary: Get security standards on all your resources inside a scope
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        StandardsListOptionalParams): PagedAsyncIterableIterator<Standard>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group within the user's subscription. The
            name is
                                     case insensitive.
        - id: options
          type: <xref uid="@azure/arm-security.StandardsListOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-security.Standard"
          />&gt;
  - name: listBySubscription(StandardsListBySubscriptionOptionalParams)
    uid: '@azure/arm-security.Standards.listBySubscription'
    package: '@azure/arm-security'
    summary: >-
      Get a list of all relevant security standards over a subscription level
      scope.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        StandardsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<Standard>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.StandardsListBySubscriptionOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-security.Standard"
          />&gt;
