### YamlMime:TSPackage
uid: '@azure/arm-terraform'
name: '@azure/arm-terraform'
summary: ''
type: package
enums:
  - '@azure/arm-terraform.KnownActionType'
  - '@azure/arm-terraform.KnownOrigin'
  - '@azure/arm-terraform.KnownResourceProvisioningState'
  - '@azure/arm-terraform.KnownTargetProvider'
  - '@azure/arm-terraform.KnownType'
  - '@azure/arm-terraform.KnownVersions'
classes:
  - '@azure/arm-terraform.AzureTerraformClient'
interfaces:
  - '@azure/arm-terraform.AzureTerraformClientOptionalParams'
  - '@azure/arm-terraform.BaseExportModel'
  - '@azure/arm-terraform.ErrorAdditionalInfo'
  - '@azure/arm-terraform.ErrorDetail'
  - '@azure/arm-terraform.ExportQuery'
  - '@azure/arm-terraform.ExportResource'
  - '@azure/arm-terraform.ExportResourceGroup'
  - '@azure/arm-terraform.ExportResult'
  - '@azure/arm-terraform.Operation'
  - '@azure/arm-terraform.OperationDisplay'
  - '@azure/arm-terraform.OperationsListOptionalParams'
  - '@azure/arm-terraform.OperationsOperations'
  - '@azure/arm-terraform.PageSettings'
  - '@azure/arm-terraform.PagedAsyncIterableIterator'
  - '@azure/arm-terraform.RestorePollerOptions'
  - '@azure/arm-terraform.TerraformExportTerraformOptionalParams'
  - '@azure/arm-terraform.TerraformOperationStatus'
  - '@azure/arm-terraform.TerraformOperations'
typeAliases:
  - '@azure/arm-terraform.ActionType'
  - '@azure/arm-terraform.BaseExportModelUnion'
  - '@azure/arm-terraform.ContinuablePage'
  - '@azure/arm-terraform.Origin'
  - '@azure/arm-terraform.ResourceProvisioningState'
  - '@azure/arm-terraform.TargetProvider'
  - '@azure/arm-terraform.Type'
functions:
  - name: >-
      restorePoller<TResponse, TResult>(AzureTerraformClient, string, (args:
      any[]) => PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-terraform.restorePoller'
    package: '@azure/arm-terraform'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client: AzureTerraformClient,
        serializedState: string, sourceOperation: (args: any[]) =>
        PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: <xref uid="@azure/arm-terraform.AzureTerraformClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-terraform.RestorePollerOptions" />&lt;TResult,
            <xref uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
