### YamlMime:TSType
name: Connector
uid: '@azure/arm-servicelinker.Connector'
package: '@azure/arm-servicelinker'
summary: Interface representing a Connector.
fullName: Connector
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateDryrun(string, string, string, string, DryrunResource,
      ConnectorCreateDryrunOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginCreateDryrun'
    package: '@azure/arm-servicelinker'
    summary: create a dryrun job to do necessary check before actual creation
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateDryrun(subscriptionId: string, resourceGroupName:
        string, location: string, dryrunName: string, parameters:
        DryrunResource, options?: ConnectorCreateDryrunOptionalParams):
        Promise<SimplePollerLike<OperationState<DryrunResource>,
        DryrunResource>>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: dryrunName
          type: string
          description: The name of dryrun.
        - id: parameters
          type: <xref uid="@azure/arm-servicelinker.DryrunResource" />
          description: dryrun resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-servicelinker.ConnectorCreateDryrunOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-servicelinker.DryrunResource" />&gt;, <xref
          uid="@azure/arm-servicelinker.DryrunResource" />&gt;&gt;
  - name: >-
      beginCreateDryrunAndWait(string, string, string, string, DryrunResource,
      ConnectorCreateDryrunOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginCreateDryrunAndWait'
    package: '@azure/arm-servicelinker'
    summary: create a dryrun job to do necessary check before actual creation
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateDryrunAndWait(subscriptionId: string,
        resourceGroupName: string, location: string, dryrunName: string,
        parameters: DryrunResource, options?:
        ConnectorCreateDryrunOptionalParams): Promise<DryrunResource>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: dryrunName
          type: string
          description: The name of dryrun.
        - id: parameters
          type: <xref uid="@azure/arm-servicelinker.DryrunResource" />
          description: dryrun resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-servicelinker.ConnectorCreateDryrunOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-servicelinker.DryrunResource" />&gt;
  - name: >-
      beginCreateOrUpdate(string, string, string, string, LinkerResource,
      ConnectorCreateOrUpdateOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginCreateOrUpdate'
    package: '@azure/arm-servicelinker'
    summary: Create or update Connector resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(subscriptionId: string, resourceGroupName:
        string, location: string, connectorName: string, parameters:
        LinkerResource, options?: ConnectorCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<LinkerResource>,
        LinkerResource>>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: connectorName
          type: string
          description: The name of resource.
        - id: parameters
          type: <xref uid="@azure/arm-servicelinker.LinkerResource" />
          description: Connector details.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-servicelinker.ConnectorCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-servicelinker.LinkerResource" />&gt;, <xref
          uid="@azure/arm-servicelinker.LinkerResource" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, string, LinkerResource,
      ConnectorCreateOrUpdateOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginCreateOrUpdateAndWait'
    package: '@azure/arm-servicelinker'
    summary: Create or update Connector resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(subscriptionId: string,
        resourceGroupName: string, location: string, connectorName: string,
        parameters: LinkerResource, options?:
        ConnectorCreateOrUpdateOptionalParams): Promise<LinkerResource>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: connectorName
          type: string
          description: The name of resource.
        - id: parameters
          type: <xref uid="@azure/arm-servicelinker.LinkerResource" />
          description: Connector details.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-servicelinker.ConnectorCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-servicelinker.LinkerResource" />&gt;
  - name: beginDelete(string, string, string, string, ConnectorDeleteOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginDelete'
    package: '@azure/arm-servicelinker'
    summary: Delete a Connector.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(subscriptionId: string, resourceGroupName: string,
        location: string, connectorName: string, options?:
        ConnectorDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: connectorName
          type: string
          description: The name of resource.
        - id: options
          type: >-
            <xref uid="@azure/arm-servicelinker.ConnectorDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string, string,
      ConnectorDeleteOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginDeleteAndWait'
    package: '@azure/arm-servicelinker'
    summary: Delete a Connector.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(subscriptionId: string, resourceGroupName:
        string, location: string, connectorName: string, options?:
        ConnectorDeleteOptionalParams): Promise<void>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: connectorName
          type: string
          description: The name of resource.
        - id: options
          type: >-
            <xref uid="@azure/arm-servicelinker.ConnectorDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, string, string, LinkerPatch,
      ConnectorUpdateOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginUpdate'
    package: '@azure/arm-servicelinker'
    summary: Operation to update an existing Connector.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(subscriptionId: string, resourceGroupName: string,
        location: string, connectorName: string, parameters: LinkerPatch,
        options?: ConnectorUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<LinkerResource>,
        LinkerResource>>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: connectorName
          type: string
          description: The name of resource.
        - id: parameters
          type: <xref uid="@azure/arm-servicelinker.LinkerPatch" />
          description: Connector details.
        - id: options
          type: >-
            <xref uid="@azure/arm-servicelinker.ConnectorUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-servicelinker.LinkerResource" />&gt;, <xref
          uid="@azure/arm-servicelinker.LinkerResource" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, string, LinkerPatch,
      ConnectorUpdateOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginUpdateAndWait'
    package: '@azure/arm-servicelinker'
    summary: Operation to update an existing Connector.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(subscriptionId: string, resourceGroupName:
        string, location: string, connectorName: string, parameters:
        LinkerPatch, options?: ConnectorUpdateOptionalParams):
        Promise<LinkerResource>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: connectorName
          type: string
          description: The name of resource.
        - id: parameters
          type: <xref uid="@azure/arm-servicelinker.LinkerPatch" />
          description: Connector details.
        - id: options
          type: >-
            <xref uid="@azure/arm-servicelinker.ConnectorUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-servicelinker.LinkerResource" />&gt;
  - name: >-
      beginUpdateDryrun(string, string, string, string, DryrunPatch,
      ConnectorUpdateDryrunOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginUpdateDryrun'
    package: '@azure/arm-servicelinker'
    summary: update a dryrun job to do necessary check before actual creation
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateDryrun(subscriptionId: string, resourceGroupName:
        string, location: string, dryrunName: string, parameters: DryrunPatch,
        options?: ConnectorUpdateDryrunOptionalParams):
        Promise<SimplePollerLike<OperationState<DryrunResource>,
        DryrunResource>>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: dryrunName
          type: string
          description: The name of dryrun.
        - id: parameters
          type: <xref uid="@azure/arm-servicelinker.DryrunPatch" />
          description: dryrun resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-servicelinker.ConnectorUpdateDryrunOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-servicelinker.DryrunResource" />&gt;, <xref
          uid="@azure/arm-servicelinker.DryrunResource" />&gt;&gt;
  - name: >-
      beginUpdateDryrunAndWait(string, string, string, string, DryrunPatch,
      ConnectorUpdateDryrunOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginUpdateDryrunAndWait'
    package: '@azure/arm-servicelinker'
    summary: update a dryrun job to do necessary check before actual creation
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateDryrunAndWait(subscriptionId: string,
        resourceGroupName: string, location: string, dryrunName: string,
        parameters: DryrunPatch, options?: ConnectorUpdateDryrunOptionalParams):
        Promise<DryrunResource>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: dryrunName
          type: string
          description: The name of dryrun.
        - id: parameters
          type: <xref uid="@azure/arm-servicelinker.DryrunPatch" />
          description: dryrun resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-servicelinker.ConnectorUpdateDryrunOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-servicelinker.DryrunResource" />&gt;
  - name: >-
      beginValidate(string, string, string, string,
      ConnectorValidateOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginValidate'
    package: '@azure/arm-servicelinker'
    summary: Validate a Connector.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginValidate(subscriptionId: string, resourceGroupName:
        string, location: string, connectorName: string, options?:
        ConnectorValidateOptionalParams):
        Promise<SimplePollerLike<OperationState<ValidateOperationResult>,
        ValidateOperationResult>>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: connectorName
          type: string
          description: The name of resource.
        - id: options
          type: >-
            <xref uid="@azure/arm-servicelinker.ConnectorValidateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-servicelinker.ValidateOperationResult" />&gt;, <xref
          uid="@azure/arm-servicelinker.ValidateOperationResult" />&gt;&gt;
  - name: >-
      beginValidateAndWait(string, string, string, string,
      ConnectorValidateOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.beginValidateAndWait'
    package: '@azure/arm-servicelinker'
    summary: Validate a Connector.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginValidateAndWait(subscriptionId: string, resourceGroupName:
        string, location: string, connectorName: string, options?:
        ConnectorValidateOptionalParams): Promise<ValidateOperationResult>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: connectorName
          type: string
          description: The name of resource.
        - id: options
          type: >-
            <xref uid="@azure/arm-servicelinker.ConnectorValidateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-servicelinker.ValidateOperationResult" />&gt;
  - name: >-
      deleteDryrun(string, string, string, string,
      ConnectorDeleteDryrunOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.deleteDryrun'
    package: '@azure/arm-servicelinker'
    summary: delete a dryrun job
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteDryrun(subscriptionId: string, resourceGroupName: string,
        location: string, dryrunName: string, options?:
        ConnectorDeleteDryrunOptionalParams): Promise<void>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: dryrunName
          type: string
          description: The name of dryrun.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-servicelinker.ConnectorDeleteDryrunOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      generateConfigurations(string, string, string, string,
      ConnectorGenerateConfigurationsOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.generateConfigurations'
    package: '@azure/arm-servicelinker'
    summary: Generate configurations for a Connector.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function generateConfigurations(subscriptionId: string,
        resourceGroupName: string, location: string, connectorName: string,
        options?: ConnectorGenerateConfigurationsOptionalParams):
        Promise<ConfigurationResult>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: connectorName
          type: string
          description: The name of resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-servicelinker.ConnectorGenerateConfigurationsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-servicelinker.ConfigurationResult"
          />&gt;
  - name: get(string, string, string, string, ConnectorGetOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.get'
    package: '@azure/arm-servicelinker'
    summary: Returns Connector resource for a given name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(subscriptionId: string, resourceGroupName: string,
        location: string, connectorName: string, options?:
        ConnectorGetOptionalParams): Promise<LinkerResource>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: connectorName
          type: string
          description: The name of resource.
        - id: options
          type: <xref uid="@azure/arm-servicelinker.ConnectorGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-servicelinker.LinkerResource" />&gt;
  - name: >-
      getDryrun(string, string, string, string,
      ConnectorGetDryrunOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.getDryrun'
    package: '@azure/arm-servicelinker'
    summary: get a dryrun job
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getDryrun(subscriptionId: string, resourceGroupName: string,
        location: string, dryrunName: string, options?:
        ConnectorGetDryrunOptionalParams): Promise<DryrunResource>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: dryrunName
          type: string
          description: The name of dryrun.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-servicelinker.ConnectorGetDryrunOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-servicelinker.DryrunResource" />&gt;
  - name: list(string, string, string, ConnectorListOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.list'
    package: '@azure/arm-servicelinker'
    summary: >-
      Returns list of connector which connects to the resource, which supports
      to config the target

      service during the resource provision.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(subscriptionId: string, resourceGroupName: string,
        location: string, options?: ConnectorListOptionalParams):
        PagedAsyncIterableIterator<LinkerResource, LinkerResource[],
        PageSettings>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: options
          type: <xref uid="@azure/arm-servicelinker.ConnectorListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-servicelinker.LinkerResource" />, <xref
          uid="@azure/arm-servicelinker.LinkerResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listDryrun(string, string, string, ConnectorListDryrunOptionalParams)
    uid: '@azure/arm-servicelinker.Connector.listDryrun'
    package: '@azure/arm-servicelinker'
    summary: list dryrun jobs
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listDryrun(subscriptionId: string, resourceGroupName: string,
        location: string, options?: ConnectorListDryrunOptionalParams):
        PagedAsyncIterableIterator<DryrunResource, DryrunResource[],
        PageSettings>
      parameters:
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: location
          type: string
          description: The name of Azure region.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-servicelinker.ConnectorListDryrunOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-servicelinker.DryrunResource" />, <xref
          uid="@azure/arm-servicelinker.DryrunResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
