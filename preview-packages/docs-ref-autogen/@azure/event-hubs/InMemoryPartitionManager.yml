### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.InMemoryPartitionManager'
    name: InMemoryPartitionManager
    fullName: InMemoryPartitionManager
    children:
      - '@azure/event-hubs.InMemoryPartitionManager.claimOwnership'
      - '@azure/event-hubs.InMemoryPartitionManager.listOwnership'
      - '@azure/event-hubs.InMemoryPartitionManager.updateCheckpoint'
    langs:
      - typeScript
    type: class
    summary: >
      The `EventProcessor` relies on a `PartitionManager` to store checkpoints
      and handle partition

      ownerships. `InMemoryPartitionManager` is simple partition manager that
      stores checkpoints and

      partition ownerships in memory of your program.

      You can use the `InMemoryPartitionManager` to get started with using the
      `EventProcessor`.

      But in production, you should choose an implementation of the
      `PartitionManager` interface that will

      store the checkpoints and partition ownerships to a durable store instead.
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.InMemoryPartitionManager.claimOwnership'
    name: 'claimOwnership(PartitionOwnership[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Claim ownership of a list of partitions. This will return the list of
      partitions that were owned

      successfully.
    syntax:
      content: 'function claimOwnership(partitionOwnership: PartitionOwnership[])'
      parameters:
        - id: partitionOwnership
          type:
            - '@azure/event-hubs.PartitionOwnership[]'
          description: The list of partition ownership this instance is claiming to own.
      return:
        type:
          - 'Promise<@azure/event-hubs.PartitionOwnership[]>'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.InMemoryPartitionManager.listOwnership'
    name: 'listOwnership(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get the list of all existing partition ownership from the underlying data
      store. Could return empty

      results if there are is no existing ownership information.
    syntax:
      content: >-
        function listOwnership(fullyQualifiedNamespace: string, eventHubName:
        string, consumerGroupName: string)
      parameters:
        - id: fullyQualifiedNamespace
          type:
            - string
          description: >-
            The fully qualified Event Hubs namespace. This is likely to be
            similar to

            <yournamespace>.servicebus.windows.net.
        - id: eventHubName
          type:
            - string
          description: The event hub name.
        - id: consumerGroupName
          type:
            - string
          description: The consumer group name.
      return:
        type:
          - 'Promise<@azure/event-hubs.PartitionOwnership[]>'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.InMemoryPartitionManager.updateCheckpoint'
    name: updateCheckpoint(Checkpoint)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the checkpoint in the data store for a partition.
    syntax:
      content: 'function updateCheckpoint(checkpoint: Checkpoint)'
      parameters:
        - id: checkpoint
          type:
            - '@azure/event-hubs.Checkpoint'
          description: The checkpoint.
      return:
        type:
          - Promise<string>
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.PartitionOwnership[]'
    name: 'PartitionOwnership[]'
    spec.typeScript:
      - name: PartitionOwnership
        fullName: PartitionOwnership
        uid: '@azure/event-hubs.PartitionOwnership'
      - name: '[]'
        fullName: '[]'
  - uid: 'Promise<@azure/event-hubs.PartitionOwnership[]>'
    name: 'PartitionOwnership[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PartitionOwnership
        fullName: PartitionOwnership
        uid: '@azure/event-hubs.PartitionOwnership'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/event-hubs.Checkpoint'
    name: Checkpoint
    spec.typeScript:
      - name: Checkpoint
        fullName: Checkpoint
        uid: '@azure/event-hubs.Checkpoint'
