### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.SubscriptionOptions'
    name: SubscriptionOptions
    fullName: SubscriptionOptions
    children:
      - '@azure/event-hubs.SubscriptionOptions.defaultEventPosition'
      - '@azure/event-hubs.SubscriptionOptions.maxBatchSize'
      - '@azure/event-hubs.SubscriptionOptions.maxWaitTimeInSeconds'
      - '@azure/event-hubs.SubscriptionOptions.onClose'
      - '@azure/event-hubs.SubscriptionOptions.onError'
      - '@azure/event-hubs.SubscriptionOptions.onInitialize'
      - '@azure/event-hubs.SubscriptionOptions.trackLastEnqueuedEventInfo'
    langs:
      - typeScript
    type: interface
    summary: Options for subscribe.
    extends:
      name: '@azure/event-hubs.OptionalEventHandlers'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscriptionOptions.defaultEventPosition'
    name: defaultEventPosition
    fullName: defaultEventPosition
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      The event position to use when claiming a partition if not already
      initialized.
      Defaults to EventPosition.earliest()
    optional: true
    syntax:
      content: 'defaultEventPosition?: EventPosition'
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscriptionOptions.maxBatchSize'
    name: maxBatchSize
    fullName: maxBatchSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The max size of the batch of events passed each time to user code for
      processing.
    syntax:
      content: 'maxBatchSize: number'
      return:
        type:
          - number
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscriptionOptions.maxWaitTimeInSeconds'
    name: maxWaitTimeInSeconds
    fullName: maxWaitTimeInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The maximum amount of time to wait to build up the requested message count
      before

      passing the data to user code for processing. If not provided, it defaults
      to 60 seconds.
    syntax:
      content: 'maxWaitTimeInSeconds: number'
      return:
        type:
          - number
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscriptionOptions.onClose'
    name: onClose
    fullName: onClose
    children: []
    langs:
      - typeScript
    type: property
    summary: Called when we stop processing events from a partition.
    optional: true
    syntax:
      content: 'onClose?: OnCloseHandler'
      return:
        type:
          - '@azure/event-hubs.OnCloseHandler'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscriptionOptions.onError'
    name: onError
    fullName: onError
    children: []
    langs:
      - typeScript
    type: property
    summary: Called when errors occur during event receiving.
    optional: true
    syntax:
      content: 'onError?: OnErrorHandler'
      return:
        type:
          - '@azure/event-hubs.OnErrorHandler'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscriptionOptions.onInitialize'
    name: onInitialize
    fullName: onInitialize
    children: []
    langs:
      - typeScript
    type: property
    summary: Called when we first start processing events from a partition.
    optional: true
    syntax:
      content: 'onInitialize?: OnInitializeHandler'
      return:
        type:
          - '@azure/event-hubs.OnInitializeHandler'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.SubscriptionOptions.trackLastEnqueuedEventInfo'
    name: trackLastEnqueuedEventInfo
    fullName: trackLastEnqueuedEventInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates whether or not the consumer should request information on the
      last enqueued event on its

      associated partition, and track that information as events are received.


      When information about the partition's last enqueued event is being
      tracked, each event received

      from the Event Hubs service will carry metadata about the partition that
      it otherwise would not. This results in a small amount of

      additional network bandwidth consumption that is generally a favorable
      trade-off when considered

      against periodically making requests for partition properties using the
      Event Hub client.
    optional: true
    syntax:
      content: 'trackLastEnqueuedEventInfo?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.OptionalEventHandlers'
    name: OptionalEventHandlers
    spec.typeScript:
      - name: OptionalEventHandlers
        fullName: OptionalEventHandlers
        uid: '@azure/event-hubs.OptionalEventHandlers'
  - uid: '@azure/event-hubs.EventPosition'
    name: EventPosition
    spec.typeScript:
      - name: EventPosition
        fullName: EventPosition
        uid: '@azure/event-hubs.EventPosition'
  - uid: '@azure/event-hubs.OnCloseHandler'
    name: OnCloseHandler
    spec.typeScript:
      - name: OnCloseHandler
        fullName: OnCloseHandler
        uid: '@azure/event-hubs.OnCloseHandler'
  - uid: '@azure/event-hubs.OnErrorHandler'
    name: OnErrorHandler
    spec.typeScript:
      - name: OnErrorHandler
        fullName: OnErrorHandler
        uid: '@azure/event-hubs.OnErrorHandler'
  - uid: '@azure/event-hubs.OnInitializeHandler'
    name: OnInitializeHandler
    spec.typeScript:
      - name: OnInitializeHandler
        fullName: OnInitializeHandler
        uid: '@azure/event-hubs.OnInitializeHandler'
