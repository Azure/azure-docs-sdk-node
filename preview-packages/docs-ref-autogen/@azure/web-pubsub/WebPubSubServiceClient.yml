### YamlMime:TSType
name: WebPubSubServiceClient
uid: '@azure/web-pubsub.WebPubSubServiceClient'
package: '@azure/web-pubsub'
summary: Client for connecting to a Web PubSub hub
fullName: WebPubSubServiceClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      WebPubSubServiceClient(string, AzureKeyCredential, string,
      HubAdminClientOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.constructor_1'
    package: '@azure/web-pubsub'
    summary: >
      Creates an instance of a WebPubSubServiceClient for sending messages and
      managing groups, connections, and users.

      Example usage:

      ```ts

      import { WebPubSubServiceClient, AzureKeyCredential } from
      "@azure/web-pubsub";

      const cred = new AzureKeyCredential("<your web pubsub api key>");

      const endpoint = "https://xxxx.webpubsubdev.azure.com"

      const client = new WebPubSubServiceClient(endpoint, cred, 'chat');

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new WebPubSubServiceClient(endpoint: string, credential:
        AzureKeyCredential, hubName: string, options?: HubAdminClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: The endpoint to connect to
        - id: credential
          type: AzureKeyCredential
          description: An AzureKeyCredential holding your service key
        - id: hubName
          type: string
          description: 'The name of the hub to connect to. If omitted, ''_default'' is used.'
        - id: options
          type: <xref uid="@azure/web-pubsub.HubAdminClientOptions" />
          description: |
            Options to configure the http pipeline
  - name: 'WebPubSubServiceClient(string, string, HubAdminClientOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.constructor'
    package: '@azure/web-pubsub'
    summary: >
      Creates an instance of a WebPubSubServiceClient for sending messages and
      managing groups, connections, and users.

      Example usage:

      ```ts

      import { WebPubSubServiceClient } from "@azure/web-pubsub";

      const connectionString = process.env['WEB_PUBSUB_CONNECTION_STRING'];

      const client = new WebPubSubServiceClient(connectionString, 'chat');

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new WebPubSubServiceClient(connectionString: string, hubName: string,
        options?: HubAdminClientOptions)
      parameters:
        - id: connectionString
          type: string
          description: The connection string
        - id: hubName
          type: string
          description: 'The name of the hub to connect to. If omitted, ''_default'' is used.'
        - id: options
          type: <xref uid="@azure/web-pubsub.HubAdminClientOptions" />
          description: |
            Options to configure the http pipeline
properties:
  - name: apiVersion
    uid: '@azure/web-pubsub.WebPubSubServiceClient.apiVersion'
    package: '@azure/web-pubsub'
    summary: The Web PubSub API version being used by this client
    fullName: apiVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apiVersion: string'
      return:
        type: string
        description: ''
  - name: endpoint
    uid: '@azure/web-pubsub.WebPubSubServiceClient.endpoint'
    package: '@azure/web-pubsub'
    summary: The Web PubSub endpoint this client is connected to
    fullName: endpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        type: string
        description: ''
  - name: hubName
    uid: '@azure/web-pubsub.WebPubSubServiceClient.hubName'
    package: '@azure/web-pubsub'
    summary: The name of the hub this client is connected to
    fullName: hubName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hubName: string'
      return:
        type: string
        description: ''
methods:
  - name: 'closeConnection(string, CloseConnectionOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.closeConnection'
    package: '@azure/web-pubsub'
    summary: Close a specific connection to this hub
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function closeConnection(connectionId: string, options?:
        CloseConnectionOptions)
      parameters:
        - id: connectionId
          type: string
          description: Connection id to close
        - id: options
          type: <xref uid="@azure/web-pubsub.CloseConnectionOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: getAuthenticationToken(GetAuthenticationTokenOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.getAuthenticationToken'
    package: '@azure/web-pubsub'
    summary: Auth the client connection with userId and custom claims if any
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getAuthenticationToken(options?: GetAuthenticationTokenOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/web-pubsub.GetAuthenticationTokenOptions" />
          description: |
            The options that the client has
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/web-pubsub.GetAuthenticationTokenResponse" />&gt;
        description: ''
  - name: 'grantPermission(string, Permission, HubGrantPermissionOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.grantPermission'
    package: '@azure/web-pubsub'
    summary: Grant permissions to a connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function grantPermission(connectionId: string, permission: Permission,
        options?: HubGrantPermissionOptions)
      parameters:
        - id: connectionId
          type: string
          description: The connection id to grant permissions to
        - id: permission
          type: <xref uid="@azure/web-pubsub.Permission" />
          description: ''
        - id: options
          type: <xref uid="@azure/web-pubsub.HubGrantPermissionOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: group(string)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.group'
    package: '@azure/web-pubsub'
    summary: Get a client for a group
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function group(groupName: string)'
      parameters:
        - id: groupName
          type: string
          description: |
            The name of the group to connect to.
      return:
        type: <xref uid="@azure/web-pubsub.WebPubSubGroup" />
        description: ''
  - name: 'hasConnection(string, HasConnectionOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.hasConnection'
    package: '@azure/web-pubsub'
    summary: Check if a specific connection is connected to this hub
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function hasConnection(connectionId: string, options?:
        HasConnectionOptions)
      parameters:
        - id: connectionId
          type: string
          description: Connection id to check
        - id: options
          type: <xref uid="@azure/web-pubsub.HasConnectionOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: 'hasGroup(string, HubHasGroupOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.hasGroup'
    package: '@azure/web-pubsub'
    summary: Check if a particular group exists (i.e. has active connections).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function hasGroup(groupName: string, options?: HubHasGroupOptions)'
      parameters:
        - id: groupName
          type: string
          description: The group name to check for
        - id: options
          type: <xref uid="@azure/web-pubsub.HubHasGroupOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: 'hasPermission(string, Permission, HubHasPermissionOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.hasPermission'
    package: '@azure/web-pubsub'
    summary: Check if the connection has the specified permission
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function hasPermission(connectionId: string, permission: Permission,
        options?: HubHasPermissionOptions)
      parameters:
        - id: connectionId
          type: string
          description: The connection id to check permission
        - id: permission
          type: <xref uid="@azure/web-pubsub.Permission" />
          description: ''
        - id: options
          type: <xref uid="@azure/web-pubsub.HubHasPermissionOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: 'hasUser(string, HubHasUserOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.hasUser'
    package: '@azure/web-pubsub'
    summary: Check if a particular user is connected to this hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function hasUser(username: string, options?: HubHasUserOptions)'
      parameters:
        - id: username
          type: string
          description: The user name to check for
        - id: options
          type: <xref uid="@azure/web-pubsub.HubHasUserOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: 'removeUserFromAllGroups(string, CloseConnectionOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.removeUserFromAllGroups'
    package: '@azure/web-pubsub'
    summary: Remove a specific user from all groups they are joined to
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeUserFromAllGroups(userId: string, options?:
        CloseConnectionOptions)
      parameters:
        - id: userId
          type: string
          description: The user id to remove from all groups
        - id: options
          type: <xref uid="@azure/web-pubsub.CloseConnectionOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: 'revokePermission(string, Permission, HubRevokePermissionOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.revokePermission'
    package: '@azure/web-pubsub'
    summary: Revoke permissions from a connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function revokePermission(connectionId: string, permission: Permission,
        options?: HubRevokePermissionOptions)
      parameters:
        - id: connectionId
          type: string
          description: The connection id to revoke permissions from
        - id: permission
          type: <xref uid="@azure/web-pubsub.Permission" />
          description: ''
        - id: options
          type: <xref uid="@azure/web-pubsub.HubRevokePermissionOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: 'sendToAll(HttpRequestBody, HubSendToAllOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToAll_2'
    package: '@azure/web-pubsub'
    summary: Broadcast a binary message to all connections on this hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToAll(message: HttpRequestBody, options?:
        HubSendToAllOptions)
      parameters:
        - id: message
          type: HttpRequestBody
          description: The message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToAllOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: 'sendToAll(JSONTypes, HubSendToAllOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToAll_1'
    package: '@azure/web-pubsub'
    summary: Broadcast a JSON message to all connections on this hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendToAll(message: JSONTypes, options?: HubSendToAllOptions)'
      parameters:
        - id: message
          type: <xref uid="@azure/web-pubsub.JSONTypes" />
          description: The JSON message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToAllOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: 'sendToAll(string, HubSendTextToAllOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToAll'
    package: '@azure/web-pubsub'
    summary: Broadcast a text message to all connections on this hub.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendToAll(message: string, options: HubSendTextToAllOptions)'
      parameters:
        - id: message
          type: string
          description: The text message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendTextToAllOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: >-
      sendToConnection(string, HttpRequestBody | JSONTypes,
      HubSendToConnectionOptions | HubSendTextToConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToConnection_2'
    package: '@azure/web-pubsub'
    summary: Send a binary message to a specific connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToConnection(connectionId: string, message: HttpRequestBody
        | JSONTypes, options?: HubSendToConnectionOptions |
        HubSendTextToConnectionOptions)
      parameters:
        - id: connectionId
          type: string
          description: Connection id to send to
        - id: message
          type: HttpRequestBody | <xref uid="@azure/web-pubsub.JSONTypes" />
          description: The binary message
        - id: options
          type: >-
            <xref uid="@azure/web-pubsub.HubSendToConnectionOptions" /> | <xref
            uid="@azure/web-pubsub.HubSendTextToConnectionOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: 'sendToConnection(string, JSONTypes, HubSendToConnectionOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToConnection_1'
    package: '@azure/web-pubsub'
    summary: Send a binary message to a specific connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToConnection(connectionId: string, message: JSONTypes,
        options?: HubSendToConnectionOptions)
      parameters:
        - id: connectionId
          type: string
          description: Connection id to send to
        - id: message
          type: <xref uid="@azure/web-pubsub.JSONTypes" />
          description: The JSON message
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToConnectionOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: 'sendToConnection(string, string, HubSendTextToConnectionOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToConnection'
    package: '@azure/web-pubsub'
    summary: Send a text message to a specific connection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToConnection(connectionId: string, message: string,
        options: HubSendTextToConnectionOptions)
      parameters:
        - id: connectionId
          type: string
          description: Connection id to send to
        - id: message
          type: string
          description: The text message
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendTextToConnectionOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: >-
      sendToUser(string, HttpRequestBody, HubSendToUserOptions |
      HubSendTextToUserOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToUser_2'
    package: '@azure/web-pubsub'
    summary: Send a binary message to a specific user
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToUser(username: string, message: HttpRequestBody,
        options?: HubSendToUserOptions | HubSendTextToUserOptions)
      parameters:
        - id: username
          type: string
          description: The user name to send to
        - id: message
          type: HttpRequestBody
          description: The binary message to send
        - id: options
          type: >-
            <xref uid="@azure/web-pubsub.HubSendToUserOptions" /> | <xref
            uid="@azure/web-pubsub.HubSendTextToUserOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: 'sendToUser(string, JSONTypes, HubSendToUserOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToUser_1'
    package: '@azure/web-pubsub'
    summary: Send a JSON message to a specific user
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToUser(username: string, message: JSONTypes, options?:
        HubSendToUserOptions)
      parameters:
        - id: username
          type: string
          description: User name to send to
        - id: message
          type: <xref uid="@azure/web-pubsub.JSONTypes" />
          description: The josn message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToUserOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: 'sendToUser(string, string, HubSendTextToUserOptions)'
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToUser'
    package: '@azure/web-pubsub'
    summary: Send a text message to a specific user
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendToUser(username: string, message: string, options:
        HubSendTextToUserOptions)
      parameters:
        - id: username
          type: string
          description: User name to send to
        - id: message
          type: string
          description: The text message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendTextToUserOptions" />
          description: |
            Additional options
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
