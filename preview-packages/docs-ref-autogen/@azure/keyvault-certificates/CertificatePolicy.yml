### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-certificates.CertificatePolicy'
    name: CertificatePolicy
    fullName: CertificatePolicy
    children:
      - '@azure/keyvault-certificates.CertificatePolicy.certificateTransparency'
      - '@azure/keyvault-certificates.CertificatePolicy.certificateType'
      - '@azure/keyvault-certificates.CertificatePolicy.contentType'
      - '@azure/keyvault-certificates.CertificatePolicy.created'
      - '@azure/keyvault-certificates.CertificatePolicy.ekus'
      - '@azure/keyvault-certificates.CertificatePolicy.enabled'
      - '@azure/keyvault-certificates.CertificatePolicy.expires'
      - '@azure/keyvault-certificates.CertificatePolicy.exportable'
      - '@azure/keyvault-certificates.CertificatePolicy.id'
      - '@azure/keyvault-certificates.CertificatePolicy.issuerName'
      - '@azure/keyvault-certificates.CertificatePolicy.keyCurveType'
      - '@azure/keyvault-certificates.CertificatePolicy.keySize'
      - '@azure/keyvault-certificates.CertificatePolicy.keyType'
      - '@azure/keyvault-certificates.CertificatePolicy.keyUsage'
      - '@azure/keyvault-certificates.CertificatePolicy.lifetimeActions'
      - '@azure/keyvault-certificates.CertificatePolicy.notBefore'
      - '@azure/keyvault-certificates.CertificatePolicy.recoveryLevel'
      - '@azure/keyvault-certificates.CertificatePolicy.reuseKey'
      - '@azure/keyvault-certificates.CertificatePolicy.subjectAlternativeNames'
      - '@azure/keyvault-certificates.CertificatePolicy.subjectName'
      - '@azure/keyvault-certificates.CertificatePolicy.updated'
      - '@azure/keyvault-certificates.CertificatePolicy.validityInMonths'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/keyvault-certificates.SecretProperties'
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.certificateTransparency'
    name: certificateTransparency
    fullName: certificateTransparency
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates if the certificates generated under this policy should be
      published to certificate

      transparency logs.
    optional: true
    syntax:
      content: 'certificateTransparency?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.certificateType'
    name: certificateType
    fullName: certificateType
    children: []
    langs:
      - typeScript
    type: property
    summary: Type of certificate to be requested from the issuer provider.
    optional: true
    syntax:
      content: 'certificateType?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.contentType'
    name: contentType
    fullName: contentType
    children: []
    langs:
      - typeScript
    type: property
    summary: The media type (MIME type).
    optional: true
    syntax:
      content: 'contentType?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.created'
    name: created
    fullName: created
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Creation time in UTC.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'created?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.ekus'
    name: ekus
    fullName: ekus
    children: []
    langs:
      - typeScript
    type: property
    summary: The enhanced key usage.
    optional: true
    syntax:
      content: 'ekus?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.enabled'
    name: enabled
    fullName: enabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Determines whether the object is enabled.
    optional: true
    syntax:
      content: 'enabled?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.expires'
    name: expires
    fullName: expires
    children: []
    langs:
      - typeScript
    type: property
    summary: Expiry date in UTC.
    optional: true
    syntax:
      content: 'expires?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.exportable'
    name: exportable
    fullName: exportable
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates if the private key can be exported.
    optional: true
    syntax:
      content: 'exportable?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The certificate id.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.issuerName'
    name: issuerName
    fullName: issuerName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Name of the referenced issuer object or reserved names; for example,
      'Self' or 'Unknown'.
    optional: true
    syntax:
      content: 'issuerName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.keyCurveType'
    name: keyCurveType
    fullName: keyCurveType
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Elliptic curve name. For valid values, see KeyCurveName. Possible values
      include:

      'P-256', 'P-384', 'P-521', 'P-256K'
    optional: true
    syntax:
      content: 'keyCurveType?: KeyCurveName'
      return:
        type:
          - '@azure/keyvault-certificates.KeyCurveName'
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.keySize'
    name: keySize
    fullName: keySize
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The key size in bits. For example: 2048, 3072, or 4096 for RSA.'
    optional: true
    syntax:
      content: 'keySize?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.keyType'
    name: keyType
    fullName: keyType
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The type of key pair to be used for the certificate. Possible values
      include: 'EC', 'EC-HSM',

      'RSA', 'RSA-HSM', 'oct'
    optional: true
    syntax:
      content: 'keyType?: KeyType'
      return:
        type:
          - '@azure/keyvault-certificates.KeyType'
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.keyUsage'
    name: keyUsage
    fullName: keyUsage
    children: []
    langs:
      - typeScript
    type: property
    summary: List of key usages.
    optional: true
    syntax:
      content: 'keyUsage?: KeyUsageType[]'
      return:
        type:
          - '@azure/keyvault-certificates.KeyUsageType[]'
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.lifetimeActions'
    name: lifetimeActions
    fullName: lifetimeActions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Actions that will be performed by Key Vault over the lifetime of a
      certificate.
    optional: true
    syntax:
      content: 'lifetimeActions?: LifetimeAction[]'
      return:
        type:
          - '@azure/keyvault-certificates.LifetimeAction[]'
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.notBefore'
    name: notBefore
    fullName: notBefore
    children: []
    langs:
      - typeScript
    type: property
    summary: Not before date in UTC.
    optional: true
    syntax:
      content: 'notBefore?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.recoveryLevel'
    name: recoveryLevel
    fullName: recoveryLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Reflects the deletion recovery level currently in effect for certificates
      in the current

      vault. If it contains 'Purgeable', the certificate can be permanently
      deleted by a privileged

      user; otherwise, only the system can purge the certificate, at the end of
      the retention

      interval. Possible values include: 'Purgeable', 'Recoverable+Purgeable',
      'Recoverable',

      'Recoverable+ProtectedSubscription'

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'recoveryLevel?: DeletionRecoveryLevel'
      return:
        type:
          - '@azure/keyvault-certificates.DeletionRecoveryLevel'
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.reuseKey'
    name: reuseKey
    fullName: reuseKey
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates if the same key pair will be used on certificate renewal.
    optional: true
    syntax:
      content: 'reuseKey?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.subjectAlternativeNames'
    name: subjectAlternativeNames
    fullName: subjectAlternativeNames
    children: []
    langs:
      - typeScript
    type: property
    summary: The subject alternative names.
    optional: true
    syntax:
      content: 'subjectAlternativeNames?: SubjectAlternativeNames'
      return:
        type:
          - '@azure/keyvault-certificates.SubjectAlternativeNames'
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.subjectName'
    name: subjectName
    fullName: subjectName
    children: []
    langs:
      - typeScript
    type: property
    summary: The subject name. Should be a valid X509 distinguished Name.
    optional: true
    syntax:
      content: 'subjectName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.updated'
    name: updated
    fullName: updated
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Last updated time in UTC.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'updated?: Date'
      return:
        type:
          - Date
    package: '@azure/keyvault-certificates'
  - uid: '@azure/keyvault-certificates.CertificatePolicy.validityInMonths'
    name: validityInMonths
    fullName: validityInMonths
    children: []
    langs:
      - typeScript
    type: property
    summary: The duration that the certificate is valid in months.
    optional: true
    syntax:
      content: 'validityInMonths?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/keyvault-certificates'
references:
  - uid: '@azure/keyvault-certificates.SecretProperties'
    name: SecretProperties
    spec.typeScript:
      - name: SecretProperties
        fullName: SecretProperties
        uid: '@azure/keyvault-certificates.SecretProperties'
  - uid: '@azure/keyvault-certificates.KeyCurveName'
    name: KeyCurveName
    spec.typeScript:
      - name: KeyCurveName
        fullName: KeyCurveName
        uid: '@azure/keyvault-certificates.KeyCurveName'
  - uid: '@azure/keyvault-certificates.KeyType'
    name: KeyType
    spec.typeScript:
      - name: KeyType
        fullName: KeyType
        uid: '@azure/keyvault-certificates.KeyType'
  - uid: '@azure/keyvault-certificates.KeyUsageType[]'
    name: 'KeyUsageType[]'
    spec.typeScript:
      - name: KeyUsageType
        fullName: KeyUsageType
        uid: '@azure/keyvault-certificates.KeyUsageType'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/keyvault-certificates.LifetimeAction[]'
    name: 'LifetimeAction[]'
    spec.typeScript:
      - name: LifetimeAction
        fullName: LifetimeAction
        uid: '@azure/keyvault-certificates.LifetimeAction'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/keyvault-certificates.DeletionRecoveryLevel'
    name: DeletionRecoveryLevel
    spec.typeScript:
      - name: DeletionRecoveryLevel
        fullName: DeletionRecoveryLevel
        uid: '@azure/keyvault-certificates.DeletionRecoveryLevel'
  - uid: '@azure/keyvault-certificates.SubjectAlternativeNames'
    name: SubjectAlternativeNames
    spec.typeScript:
      - name: SubjectAlternativeNames
        fullName: SubjectAlternativeNames
        uid: '@azure/keyvault-certificates.SubjectAlternativeNames'
