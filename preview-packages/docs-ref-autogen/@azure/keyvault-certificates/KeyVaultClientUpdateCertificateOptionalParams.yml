### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams'
    name: KeyVaultClientUpdateCertificateOptionalParams
    fullName: KeyVaultClientUpdateCertificateOptionalParams
    children:
      - >-
        @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.abortSignal
      - >-
        @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.certificateAttributes
      - >-
        @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.certificatePolicy
      - >-
        @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.customHeaders
      - >-
        @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.onDownloadProgress
      - >-
        @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.onUploadProgress
      - >-
        @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.spanOptions
      - >-
        @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.tags
      - >-
        @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.timeout
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/keyvault-certificates'
  - uid: >-
      @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/keyvault-certificates'
  - uid: >-
      @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.certificateAttributes
    name: certificateAttributes
    fullName: certificateAttributes
    children: []
    langs:
      - typeScript
    type: property
    summary: The attributes of the certificate (optional).
    optional: true
    syntax:
      content: 'certificateAttributes?: CertificateAttributes'
      return:
        type:
          - '@azure/keyvault-certificates.CertificateAttributes'
    package: '@azure/keyvault-certificates'
  - uid: >-
      @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.certificatePolicy
    name: certificatePolicy
    fullName: certificatePolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: The management policy for the certificate.
    optional: true
    syntax:
      content: 'certificatePolicy?: CoreCertificatePolicy'
      return:
        type:
          - '@azure/keyvault-certificates.CoreCertificatePolicy'
    package: '@azure/keyvault-certificates'
  - uid: >-
      @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/keyvault-certificates'
  - uid: >-
      @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/keyvault-certificates'
  - uid: >-
      @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/keyvault-certificates'
  - uid: >-
      @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.spanOptions
    name: spanOptions
    fullName: spanOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options used to create a span when tracing is enabled.
    optional: true
    syntax:
      content: 'spanOptions?: SpanOptions'
      return:
        type:
          - SpanOptions
    package: '@azure/keyvault-certificates'
  - uid: >-
      @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.tags
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: Application specific metadata in the form of key-value pairs.
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/keyvault-certificates'
  - uid: >-
      @azure/keyvault-certificates.KeyVaultClientUpdateCertificateOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/keyvault-certificates'
references:
  - uid: '@azure/keyvault-certificates.CertificateAttributes'
    name: CertificateAttributes
    spec.typeScript:
      - name: CertificateAttributes
        fullName: CertificateAttributes
        uid: '@azure/keyvault-certificates.CertificateAttributes'
  - uid: '@azure/keyvault-certificates.CoreCertificatePolicy'
    name: CoreCertificatePolicy
    spec.typeScript:
      - name: CoreCertificatePolicy
        fullName: CoreCertificatePolicy
        uid: '@azure/keyvault-certificates.CoreCertificatePolicy'
