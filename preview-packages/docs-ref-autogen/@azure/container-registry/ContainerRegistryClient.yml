### YamlMime:TSType
name: ContainerRegistryClient
uid: '@azure/container-registry.ContainerRegistryClient'
package: '@azure/container-registry'
summary: The client class used to interact with the Container Registry service.
fullName: ContainerRegistryClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'ContainerRegistryClient(string, ContainerRegistryClientOptions)'
    uid: '@azure/container-registry.ContainerRegistryClient.constructor_1'
    package: '@azure/container-registry'
    summary: |-
      Creates an instance of a ContainerRegistryClient to interact with
      an Azure Container Registry that has anonymous pull access enabled.
      Example usage:
      ```ts
      import { ContainerRegistryClient } from "@azure/container-registry";

      const client = new ContainerRegistryClient(
         "<container registry API endpoint>",
      );
      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ContainerRegistryClient(endpoint: string, options?:
        ContainerRegistryClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: the URL to the Container Registry endpoint
        - id: options
          type: >-
            <xref uid="@azure/container-registry.ContainerRegistryClientOptions"
            />
          description: |
            optional configuration used to send requests to the service
  - name: >-
      ContainerRegistryClient(string, TokenCredential,
      ContainerRegistryClientOptions)
    uid: '@azure/container-registry.ContainerRegistryClient.constructor'
    package: '@azure/container-registry'
    summary: |-
      Creates an instance of a ContainerRegistryClient.
      Example usage:
      ```ts
      import { ContainerRegistryClient } from "@azure/container-registry";
      import { DefaultAzureCredential} from "@azure/identity";

      const client = new ContainerRegistryClient(
         "<container registry API endpoint>",
         new DefaultAzureCredential()
      );
      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ContainerRegistryClient(endpoint: string, credential:
        TokenCredential, options?: ContainerRegistryClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: the URL to the Container Registry endpoint
        - id: credential
          type: TokenCredential
          description: used to authenticate requests to the service
        - id: options
          type: >-
            <xref uid="@azure/container-registry.ContainerRegistryClientOptions"
            />
          description: |
            optional configuration used to send requests to the service
properties:
  - name: endpoint
    uid: '@azure/container-registry.ContainerRegistryClient.endpoint'
    package: '@azure/container-registry'
    summary: The Azure Container Registry endpoint.
    fullName: endpoint
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        type: string
        description: ''
methods:
  - name: 'deleteRepository(string, DeleteRepositoryOptions)'
    uid: '@azure/container-registry.ContainerRegistryClient.deleteRepository'
    package: '@azure/container-registry'
    summary: Deletes the repository identified by the given name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteRepository(repositoryName: string, options?:
        DeleteRepositoryOptions)
      parameters:
        - id: repositoryName
          type: string
          description: the name of repository to delete
        - id: options
          type: <xref uid="@azure/container-registry.DeleteRepositoryOptions" />
          description: |
            optional configuration for the operation
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'getArtifact(string, string)'
    uid: '@azure/container-registry.ContainerRegistryClient.getArtifact'
    package: '@azure/container-registry'
    summary: 'Returns an artifact for given repository name, and a tag or digest.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getArtifact(repositoryName: string, tagOrDigest: string)'
      parameters:
        - id: repositoryName
          type: string
          description: the name of repository
        - id: tagOrDigest
          type: string
          description: |
            tag or digest of the artifact to retrieve
      return:
        type: <xref uid="@azure/container-registry.RegistryArtifact" />
        description: ''
  - name: getRepository(string)
    uid: '@azure/container-registry.ContainerRegistryClient.getRepository'
    package: '@azure/container-registry'
    summary: Returns a ContainerRepositoryClient instance for the given repository.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getRepository(repositoryName: string)'
      parameters:
        - id: repositoryName
          type: string
          description: the name of repository to delete
      return:
        type: <xref uid="@azure/container-registry.ContainerRepository" />
        description: ''
  - name: listRepositoryNames(ListRepositoriesOptions)
    uid: '@azure/container-registry.ContainerRegistryClient.listRepositoryNames'
    package: '@azure/container-registry'
    summary: |-
      Iterates repositories.
      Example usage:
      ```ts
      let client = new ContainerRegistryClient(url, credentials);
      for await (const repository of client.listRepositoryNames()) {
        console.log("repository name: ", repository);
      }
      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listRepositoryNames(options?: ListRepositoriesOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/container-registry.ListRepositoriesOptions" />
          description: |
            -
      return:
        type: >-
          PagedAsyncIterableIterator&lt;string, <xref
          uid="@azure/container-registry.RepositoryPageResponse" />&gt;
        description: ''
