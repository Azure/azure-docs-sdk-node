### YamlMime:TSType
name: AttestationAdministrationClient
uid: '@azure/attestation.AttestationAdministrationClient'
package: '@azure/attestation'
summary: |
  Attestation Client class.
  The AttestationClient class enables access to the Attestation related APIs:

  - getPolicy
  - setPolicy
  - resetPolicy
  - getPolicyManagementCertificates
  - addPolicyManagementCertificate
  - removePolicyManagementCertificate
fullName: AttestationAdministrationClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      AttestationAdministrationClient(TokenCredential, string,
      AttestationAdministrationClientOptions)
    uid: '@azure/attestation.AttestationAdministrationClient.constructor'
    package: '@azure/attestation'
    summary: |
      Creates an instance of AttestationAdministrationClient.
      Example usage:
      ```ts
      import { AttestationAdministrationClient } from "@azure/attestation";

      const client = new AttestationAdministrationClient(
         "<service endpoint>",
         new TokenCredential("<>")
      );
      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new AttestationAdministrationClient(credentials: TokenCredential,
        instanceUrl: string, options?: AttestationAdministrationClientOptions)
      parameters:
        - id: credentials
          type: TokenCredential
          description: ''
        - id: instanceUrl
          type: string
          description: >-
            The attestation instance base URI, for example
            https://mytenant.attest.azure.net.
        - id: options
          type: >-
            <xref
            uid="@azure/attestation.AttestationAdministrationClientOptions" />
          description: |
            Used to configure the Form Recognizer client.
methods:
  - name: >-
      getPolicy(AttestationType,
      AttestationAdministrationClientOperationOptions)
    uid: '@azure/attestation.AttestationAdministrationClient.getPolicy'
    package: '@azure/attestation'
    summary: |-
      Retrieves the attestation policy document from the server, and returns it
      to the caller.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPolicy(attestationType: AttestationType, options?:
        AttestationAdministrationClientOperationOptions)
      parameters:
        - id: attestationType
          type: <xref uid="@azure/attestation.AttestationType" />
          description: AttestationType for which to retrieve policy.
        - id: options
          type: >-
            <xref
            uid="@azure/attestation.AttestationAdministrationClientOperationOptions"
            />
          description: Pipeline and client options for the `getPolicy` call.
      return:
        type: >-
          Promise&lt;<xref uid="@azure/attestation.AttestationResponse"
          />&lt;string&gt;&gt;
        description: |-
          `AttestationResponse<string>` - the `value` property is the
               attestation policy,  the `token` property will be the actual token
               returned by the attestation service.
  - name: >-
      resetPolicy(AttestationType, AttestationSigningKey,
      AttestationAdministrationClientOperationOptions)
    uid: '@azure/attestation.AttestationAdministrationClient.resetPolicy'
    package: '@azure/attestation'
    summary: |-
      Resets the attestation policy for the specified <xref:attestationType> to
      the default value.
    remarks: >-
      Please note that if the attestation service instance is running in
      "Isolated"

      mode, the <xref:signingKey> must be one of the signing keys configured for
      the

      service instance.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resetPolicy(attestationType: AttestationType, signingKey?:
        AttestationSigningKey, options?:
        AttestationAdministrationClientOperationOptions)
      parameters:
        - id: attestationType
          type: <xref uid="@azure/attestation.AttestationType" />
          description: Attestation Type for which to set policy.
        - id: signingKey
          type: <xref uid="@azure/attestation.AttestationSigningKey" />
          description: optional signing key used to sign the policy document
        - id: options
          type: >-
            <xref
            uid="@azure/attestation.AttestationAdministrationClientOperationOptions"
            />
          description: call options.
      return:
        type: >-
          Promise&lt;<xref uid="@azure/attestation.AttestationResponse"
          />&lt;<xref uid="@azure/attestation.PolicyResult" />&gt;&gt;
        description: |-
          An {@link AttestationResponse} wrapping a {@link PolicyResult}.
           Clients can use the PolicyResult to validate that the policy was actually
           reset by the attestation service.
  - name: >-
      setPolicy(AttestationType, string, AttestationSigningKey,
      AttestationAdministrationClientOperationOptions)
    uid: '@azure/attestation.AttestationAdministrationClient.setPolicy'
    package: '@azure/attestation'
    summary: 'Sets the attestation policy for the specified <xref:attestationType>.'
    remarks: >-
      Please note that if the attestation service instance is running in
      "Isolated"

      mode, the <xref:signingKey> must be one of the signing keys configured for
      the

      service instance.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setPolicy(attestationType: AttestationType, newPolicyDocument:
        string, signingKey?: AttestationSigningKey, options?:
        AttestationAdministrationClientOperationOptions)
      parameters:
        - id: attestationType
          type: <xref uid="@azure/attestation.AttestationType" />
          description: Attestation Type for which to set policy.
        - id: newPolicyDocument
          type: string
          description: Policy document to be set.
        - id: signingKey
          type: <xref uid="@azure/attestation.AttestationSigningKey" />
          description: optional signing key used to sign the policy document
        - id: options
          type: >-
            <xref
            uid="@azure/attestation.AttestationAdministrationClientOperationOptions"
            />
          description: call options.
      return:
        type: >-
          Promise&lt;<xref uid="@azure/attestation.AttestationResponse"
          />&lt;<xref uid="@azure/attestation.PolicyResult" />&gt;&gt;
        description: |-
          An {@link AttestationResponse} wrapping a {@link PolicyResult}.
           Clients can use the PolicyResult to validate that the policy was actually
           set by the attestation service.
