### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams'
    name: PathLeaseOptionalParams
    fullName: PathLeaseOptionalParams
    children:
      - '@azure/storage-datalake.PathLeaseOptionalParams.abortSignal'
      - '@azure/storage-datalake.PathLeaseOptionalParams.customHeaders'
      - '@azure/storage-datalake.PathLeaseOptionalParams.ifMatch'
      - '@azure/storage-datalake.PathLeaseOptionalParams.ifModifiedSince'
      - '@azure/storage-datalake.PathLeaseOptionalParams.ifNoneMatch'
      - '@azure/storage-datalake.PathLeaseOptionalParams.ifUnmodifiedSince'
      - '@azure/storage-datalake.PathLeaseOptionalParams.onDownloadProgress'
      - '@azure/storage-datalake.PathLeaseOptionalParams.onUploadProgress'
      - '@azure/storage-datalake.PathLeaseOptionalParams.timeout'
      - '@azure/storage-datalake.PathLeaseOptionalParams.timeoutParameter'
      - '@azure/storage-datalake.PathLeaseOptionalParams.xMsClientRequestId'
      - '@azure/storage-datalake.PathLeaseOptionalParams.xMsDate'
      - '@azure/storage-datalake.PathLeaseOptionalParams.xMsLeaseBreakPeriod'
      - '@azure/storage-datalake.PathLeaseOptionalParams.xMsLeaseDuration'
      - '@azure/storage-datalake.PathLeaseOptionalParams.xMsLeaseId'
      - '@azure/storage-datalake.PathLeaseOptionalParams.xMsProposedLeaseId'
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.ifMatch'
    name: ifMatch
    fullName: ifMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  An ETag value. Specify this header to perform the operation
      only if the resource's

      ETag matches the value specified. The ETag must be specified in quotes.
    optional: true
    syntax:
      content: 'ifMatch?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.ifModifiedSince'
    name: ifModifiedSince
    fullName: ifModifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. A date and time value. Specify this header to perform the
      operation only if the

      resource has been modified since the specified date and time.
    optional: true
    syntax:
      content: 'ifModifiedSince?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.ifNoneMatch'
    name: ifNoneMatch
    fullName: ifNoneMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  An ETag value or the special wildcard ("*") value. Specify this
      header to perform

      the operation only if the resource's ETag does not match the value
      specified. The ETag must be

      specified in quotes.
    optional: true
    syntax:
      content: 'ifNoneMatch?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.ifUnmodifiedSince'
    name: ifUnmodifiedSince
    fullName: ifUnmodifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. A date and time value. Specify this header to perform the
      operation only if the

      resource has not been modified since the specified date and time.
    optional: true
    syntax:
      content: 'ifUnmodifiedSince?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.timeoutParameter'
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An optional operation timeout value in seconds. The period begins when the
      request is received

      by the service. If the timeout value elapses before the operation
      completes, the operation

      fails.
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.xMsClientRequestId'
    name: xMsClientRequestId
    fullName: xMsClientRequestId
    children: []
    langs:
      - typeScript
    type: property
    summary: A UUID recorded in the analytics logs for troubleshooting and correlation.
    optional: true
    syntax:
      content: 'xMsClientRequestId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.xMsDate'
    name: xMsDate
    fullName: xMsDate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies the Coordinated Universal Time (UTC) for the request.  This is
      required when using

      shared key authorization.
    optional: true
    syntax:
      content: 'xMsDate?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.xMsLeaseBreakPeriod'
    name: xMsLeaseBreakPeriod
    fullName: xMsLeaseBreakPeriod
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The lease break period duration is optional to break a lease, and 
      specifies the break period

      of the lease in seconds.  The lease break  duration must be between 0 and
      60 seconds.
    optional: true
    syntax:
      content: 'xMsLeaseBreakPeriod?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.xMsLeaseDuration'
    name: xMsLeaseDuration
    fullName: xMsLeaseDuration
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The lease duration is required to acquire a lease, and specifies the
      duration of the lease in

      seconds.  The lease duration must be between 15 and 60 seconds or -1 for
      infinite lease.
    optional: true
    syntax:
      content: 'xMsLeaseDuration?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.xMsLeaseId'
    name: xMsLeaseId
    fullName: xMsLeaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Required when "x-ms-lease-action" is "renew", "change" or "release". For
      the renew and release

      actions, this must match the current lease ID.
    optional: true
    syntax:
      content: 'xMsLeaseId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams.xMsProposedLeaseId'
    name: xMsProposedLeaseId
    fullName: xMsProposedLeaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Required when "x-ms-lease-action" is "acquire" or "change".  A lease will
      be acquired with

      this lease ID if the operation is successful.
    optional: true
    syntax:
      content: 'xMsProposedLeaseId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
