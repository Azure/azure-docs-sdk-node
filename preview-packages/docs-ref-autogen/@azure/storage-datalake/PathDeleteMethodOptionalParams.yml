### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams'
    name: PathDeleteMethodOptionalParams
    fullName: PathDeleteMethodOptionalParams
    children:
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.abortSignal'
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.continuation'
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.customHeaders'
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.ifMatch'
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.ifModifiedSince'
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.ifNoneMatch'
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.ifUnmodifiedSince'
      - >-
        @azure/storage-datalake.PathDeleteMethodOptionalParams.onDownloadProgress
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.onUploadProgress'
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.recursive'
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.timeout'
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.timeoutParameter'
      - >-
        @azure/storage-datalake.PathDeleteMethodOptionalParams.xMsClientRequestId
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.xMsDate'
      - '@azure/storage-datalake.PathDeleteMethodOptionalParams.xMsLeaseId'
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.continuation'
    name: continuation
    fullName: continuation
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  When deleting a directory, the number of paths that are deleted
      with each

      invocation is limited.  If the number of paths to be deleted exceeds this
      limit, a

      continuation token is returned in this response header.  When a
      continuation token is returned

      in the response, it must be specified in a subsequent invocation of the
      delete operation to

      continue deleting the directory.
    optional: true
    syntax:
      content: 'continuation?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.ifMatch'
    name: ifMatch
    fullName: ifMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  An ETag value. Specify this header to perform the operation
      only if the resource's

      ETag matches the value specified. The ETag must be specified in quotes.
    optional: true
    syntax:
      content: 'ifMatch?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.ifModifiedSince'
    name: ifModifiedSince
    fullName: ifModifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. A date and time value. Specify this header to perform the
      operation only if the

      resource has been modified since the specified date and time.
    optional: true
    syntax:
      content: 'ifModifiedSince?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.ifNoneMatch'
    name: ifNoneMatch
    fullName: ifNoneMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  An ETag value or the special wildcard ("*") value. Specify this
      header to perform

      the operation only if the resource's ETag does not match the value
      specified. The ETag must be

      specified in quotes.
    optional: true
    syntax:
      content: 'ifNoneMatch?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.ifUnmodifiedSince'
    name: ifUnmodifiedSince
    fullName: ifUnmodifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. A date and time value. Specify this header to perform the
      operation only if the

      resource has not been modified since the specified date and time.
    optional: true
    syntax:
      content: 'ifUnmodifiedSince?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.recursive'
    name: recursive
    fullName: recursive
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Required and valid only when the resource is a directory.  If "true", all
      paths beneath the

      directory will be deleted. If "false" and the directory is non-empty, an
      error occurs.
    optional: true
    syntax:
      content: 'recursive?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.timeoutParameter'
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An optional operation timeout value in seconds. The period begins when the
      request is received

      by the service. If the timeout value elapses before the operation
      completes, the operation

      fails.
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.xMsClientRequestId'
    name: xMsClientRequestId
    fullName: xMsClientRequestId
    children: []
    langs:
      - typeScript
    type: property
    summary: A UUID recorded in the analytics logs for troubleshooting and correlation.
    optional: true
    syntax:
      content: 'xMsClientRequestId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.xMsDate'
    name: xMsDate
    fullName: xMsDate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies the Coordinated Universal Time (UTC) for the request.  This is
      required when using

      shared key authorization.
    optional: true
    syntax:
      content: 'xMsDate?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams.xMsLeaseId'
    name: xMsLeaseId
    fullName: xMsLeaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: The lease ID must be specified if there is an active lease.
    optional: true
    syntax:
      content: 'xMsLeaseId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
