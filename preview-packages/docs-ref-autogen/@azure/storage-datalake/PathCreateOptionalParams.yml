### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-datalake.PathCreateOptionalParams'
    name: PathCreateOptionalParams
    fullName: PathCreateOptionalParams
    children:
      - '@azure/storage-datalake.PathCreateOptionalParams.abortSignal'
      - '@azure/storage-datalake.PathCreateOptionalParams.cacheControl'
      - '@azure/storage-datalake.PathCreateOptionalParams.contentDisposition'
      - '@azure/storage-datalake.PathCreateOptionalParams.contentEncoding'
      - '@azure/storage-datalake.PathCreateOptionalParams.contentLanguage'
      - '@azure/storage-datalake.PathCreateOptionalParams.continuation'
      - '@azure/storage-datalake.PathCreateOptionalParams.customHeaders'
      - '@azure/storage-datalake.PathCreateOptionalParams.ifMatch'
      - '@azure/storage-datalake.PathCreateOptionalParams.ifModifiedSince'
      - '@azure/storage-datalake.PathCreateOptionalParams.ifNoneMatch'
      - '@azure/storage-datalake.PathCreateOptionalParams.ifUnmodifiedSince'
      - '@azure/storage-datalake.PathCreateOptionalParams.mode'
      - '@azure/storage-datalake.PathCreateOptionalParams.onDownloadProgress'
      - '@azure/storage-datalake.PathCreateOptionalParams.onUploadProgress'
      - '@azure/storage-datalake.PathCreateOptionalParams.resource'
      - '@azure/storage-datalake.PathCreateOptionalParams.timeout'
      - '@azure/storage-datalake.PathCreateOptionalParams.timeoutParameter'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsCacheControl'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsClientRequestId'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsContentDisposition'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsContentEncoding'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsContentLanguage'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsContentType'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsDate'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsLeaseId'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsPermissions'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsProperties'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsRenameSource'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsSourceIfMatch'
      - >-
        @azure/storage-datalake.PathCreateOptionalParams.xMsSourceIfModifiedSince
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsSourceIfNoneMatch'
      - >-
        @azure/storage-datalake.PathCreateOptionalParams.xMsSourceIfUnmodifiedSince
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsSourceLeaseId'
      - '@azure/storage-datalake.PathCreateOptionalParams.xMsUmask'
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.cacheControl'
    name: cacheControl
    fullName: cacheControl
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  The service stores this value and includes it in the
      "Cache-Control" response

      header for "Read File" operations for "Read File" operations.
    optional: true
    syntax:
      content: 'cacheControl?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.contentDisposition'
    name: contentDisposition
    fullName: contentDisposition
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  The service stores this value and includes it in the
      "Content-Disposition" response

      header for "Read File" operations.
    optional: true
    syntax:
      content: 'contentDisposition?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.contentEncoding'
    name: contentEncoding
    fullName: contentEncoding
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  Specifies which content encodings have been applied to the
      file. This value is

      returned to the client when the "Read File" operation is performed.
    optional: true
    syntax:
      content: 'contentEncoding?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.contentLanguage'
    name: contentLanguage
    fullName: contentLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  Specifies the natural language used by the intended audience
      for the file.
    optional: true
    syntax:
      content: 'contentLanguage?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.continuation'
    name: continuation
    fullName: continuation
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  When renaming a directory, the number of paths that are renamed
      with each

      invocation is limited.  If the number of paths to be renamed exceeds this
      limit, a

      continuation token is returned in this response header.  When a
      continuation token is returned

      in the response, it must be specified in a subsequent invocation of the
      rename operation to

      continue renaming the directory.
    optional: true
    syntax:
      content: 'continuation?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.ifMatch'
    name: ifMatch
    fullName: ifMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  An ETag value. Specify this header to perform the operation
      only if the resource's

      ETag matches the value specified. The ETag must be specified in quotes.
    optional: true
    syntax:
      content: 'ifMatch?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.ifModifiedSince'
    name: ifModifiedSince
    fullName: ifModifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. A date and time value. Specify this header to perform the
      operation only if the

      resource has been modified since the specified date and time.
    optional: true
    syntax:
      content: 'ifModifiedSince?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.ifNoneMatch'
    name: ifNoneMatch
    fullName: ifNoneMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  An ETag value or the special wildcard ("*") value. Specify this
      header to perform

      the operation only if the resource's ETag does not match the value
      specified. The ETag must be

      specified in quotes.
    optional: true
    syntax:
      content: 'ifNoneMatch?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.ifUnmodifiedSince'
    name: ifUnmodifiedSince
    fullName: ifUnmodifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. A date and time value. Specify this header to perform the
      operation only if the

      resource has not been modified since the specified date and time.
    optional: true
    syntax:
      content: 'ifUnmodifiedSince?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.mode'
    name: mode
    fullName: mode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. Valid only when namespace is enabled. This parameter determines
      the behavior of the

      rename operation. The value must be "legacy" or "posix", and the default
      value will be

      "posix". Possible values include: 'legacy', 'posix'
    optional: true
    syntax:
      content: 'mode?: PathRenameMode'
      return:
        type:
          - '@azure/storage-datalake.PathRenameMode'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.resource'
    name: resource
    fullName: resource
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Required only for Create File and Create Directory. The value must be
      "file" or "directory".

      Possible values include: 'directory', 'file'
    optional: true
    syntax:
      content: 'resource?: PathResourceType'
      return:
        type:
          - '@azure/storage-datalake.PathResourceType'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.timeoutParameter'
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An optional operation timeout value in seconds. The period begins when the
      request is received

      by the service. If the timeout value elapses before the operation
      completes, the operation

      fails.
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsCacheControl'
    name: xMsCacheControl
    fullName: xMsCacheControl
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  The service stores this value and includes it in the
      "Cache-Control" response

      header for "Read File" operations.
    optional: true
    syntax:
      content: 'xMsCacheControl?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsClientRequestId'
    name: xMsClientRequestId
    fullName: xMsClientRequestId
    children: []
    langs:
      - typeScript
    type: property
    summary: A UUID recorded in the analytics logs for troubleshooting and correlation.
    optional: true
    syntax:
      content: 'xMsClientRequestId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsContentDisposition'
    name: xMsContentDisposition
    fullName: xMsContentDisposition
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  The service stores this value and includes it in the
      "Content-Disposition" response

      header for "Read File" operations.
    optional: true
    syntax:
      content: 'xMsContentDisposition?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsContentEncoding'
    name: xMsContentEncoding
    fullName: xMsContentEncoding
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  The service stores this value and includes it in the
      "Content-Encoding" response

      header for "Read File" operations.
    optional: true
    syntax:
      content: 'xMsContentEncoding?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsContentLanguage'
    name: xMsContentLanguage
    fullName: xMsContentLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  The service stores this value and includes it in the
      "Content-Language" response

      header for "Read File" operations.
    optional: true
    syntax:
      content: 'xMsContentLanguage?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsContentType'
    name: xMsContentType
    fullName: xMsContentType
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  The service stores this value and includes it in the
      "Content-Type" response header

      for "Read File" operations.
    optional: true
    syntax:
      content: 'xMsContentType?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsDate'
    name: xMsDate
    fullName: xMsDate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies the Coordinated Universal Time (UTC) for the request.  This is
      required when using

      shared key authorization.
    optional: true
    syntax:
      content: 'xMsDate?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsLeaseId'
    name: xMsLeaseId
    fullName: xMsLeaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  A lease ID for the path specified in the URI.  The path to be
      overwritten must have

      an active lease and the lease ID must match.
    optional: true
    syntax:
      content: 'xMsLeaseId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsPermissions'
    name: xMsPermissions
    fullName: xMsPermissions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional and only valid if Hierarchical Namespace is enabled for the
      account. Sets POSIX

      access permissions for the file owner, the file owning group, and others.
      Each class may be

      granted read, write, or execute permission.  The sticky bit is also
      supported.  Both symbolic

      (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.
    optional: true
    syntax:
      content: 'xMsPermissions?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsProperties'
    name: xMsProperties
    fullName: xMsProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  User-defined properties to be stored with the file or
      directory, in the format of a

      comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where
      each value is a base64

      encoded string. Note that the string may only contain ASCII characters in
      the ISO-8859-1

      character set.
    optional: true
    syntax:
      content: 'xMsProperties?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsRenameSource'
    name: xMsRenameSource
    fullName: xMsRenameSource
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An optional file or directory to be renamed.  The value must have the
      following format:

      "/{filesystem}/{path}".  If "x-ms-properties" is specified, the properties
      will overwrite the

      existing properties; otherwise, the existing properties will be preserved.
      This value must be

      a URL percent-encoded string. Note that the string may only contain ASCII
      characters in the

      ISO-8859-1 character set.
    optional: true
    syntax:
      content: 'xMsRenameSource?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsSourceIfMatch'
    name: xMsSourceIfMatch
    fullName: xMsSourceIfMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  An ETag value. Specify this header to perform the rename
      operation only if the

      source's ETag matches the value specified. The ETag must be specified in
      quotes.
    optional: true
    syntax:
      content: 'xMsSourceIfMatch?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsSourceIfModifiedSince'
    name: xMsSourceIfModifiedSince
    fullName: xMsSourceIfModifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. A date and time value. Specify this header to perform the rename
      operation only if

      the source has been modified since the specified date and time.
    optional: true
    syntax:
      content: 'xMsSourceIfModifiedSince?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsSourceIfNoneMatch'
    name: xMsSourceIfNoneMatch
    fullName: xMsSourceIfNoneMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  An ETag value or the special wildcard ("*") value. Specify this
      header to perform

      the rename operation only if the source's ETag does not match the value
      specified. The ETag

      must be specified in quotes.
    optional: true
    syntax:
      content: 'xMsSourceIfNoneMatch?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: >-
      @azure/storage-datalake.PathCreateOptionalParams.xMsSourceIfUnmodifiedSince
    name: xMsSourceIfUnmodifiedSince
    fullName: xMsSourceIfUnmodifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. A date and time value. Specify this header to perform the rename
      operation only if

      the source has not been modified since the specified date and time.
    optional: true
    syntax:
      content: 'xMsSourceIfUnmodifiedSince?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsSourceLeaseId'
    name: xMsSourceLeaseId
    fullName: xMsSourceLeaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional for rename operations.  A lease ID for the source path.  The
      source path must have an

      active lease and the lease ID must match.
    optional: true
    syntax:
      content: 'xMsSourceLeaseId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams.xMsUmask'
    name: xMsUmask
    fullName: xMsUmask
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional and only valid if Hierarchical Namespace is enabled for the
      account. When creating a

      file or directory and the parent folder does not have a default ACL, the
      umask restricts the

      permissions of the file or directory to be created.  The resulting
      permission is given by p &

      ^u, where p is the permission and u is the umask.  For example, if p is
      0777 and u is 0057,

      then the resulting permission is 0720.  The default permission is 0777 for
      a directory and

      0666 for a file.  The default umask is 0027.  The umask must be specified
      in 4-digit octal

      notation (e.g. 0766).
    optional: true
    syntax:
      content: 'xMsUmask?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/storage-datalake'
references:
  - uid: '@azure/storage-datalake.PathRenameMode'
    name: PathRenameMode
    spec.typeScript:
      - name: PathRenameMode
        fullName: PathRenameMode
        uid: '@azure/storage-datalake.PathRenameMode'
  - uid: '@azure/storage-datalake.PathResourceType'
    name: PathResourceType
    spec.typeScript:
      - name: PathResourceType
        fullName: PathResourceType
        uid: '@azure/storage-datalake.PathResourceType'
