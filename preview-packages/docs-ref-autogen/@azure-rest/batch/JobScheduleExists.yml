### YamlMime:TSType
name: JobScheduleExists
uid: '@azure-rest/batch.JobScheduleExists'
package: '@azure-rest/batch'
summary: ''
fullName: JobScheduleExists
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: delete(DeleteJobScheduleParameters)
    uid: '@azure-rest/batch.JobScheduleExists.delete'
    package: '@azure-rest/batch'
    summary: >-
      When you delete a Job Schedule, this also deletes all Jobs and Tasks under
      that

      schedule. When Tasks are deleted, all the files in their working
      directories on

      the Compute Nodes are also deleted (the retention period is ignored). The
      Job

      Schedule statistics are no longer accessible once the Job Schedule is
      deleted,

      though they are still counted towards Account lifetime statistics.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(options?: DeleteJobScheduleParameters):
        StreamableMethod<DeleteJobSchedule202Response |
        DeleteJobScheduleDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.DeleteJobScheduleParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.DeleteJobSchedule202Response" /> | <xref
          uid="@azure-rest/batch.DeleteJobScheduleDefaultResponse" />&gt;
  - name: get(GetJobScheduleParameters)
    uid: '@azure-rest/batch.JobScheduleExists.get'
    package: '@azure-rest/batch'
    summary: Gets information about the specified Job Schedule.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(options?: GetJobScheduleParameters):
        StreamableMethod<GetJobSchedule200Response |
        GetJobScheduleDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.GetJobScheduleParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.GetJobSchedule200Response" /> | <xref
          uid="@azure-rest/batch.GetJobScheduleDefaultResponse" />&gt;
  - name: head(JobScheduleExistsParameters)
    uid: '@azure-rest/batch.JobScheduleExists.head'
    package: '@azure-rest/batch'
    summary: Checks the specified Job Schedule exists.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function head(options?: JobScheduleExistsParameters):
        StreamableMethod<JobScheduleExists200Response |
        JobScheduleExists404Response | JobScheduleExistsDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.JobScheduleExistsParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.JobScheduleExists200Response" /> | <xref
          uid="@azure-rest/batch.JobScheduleExists404Response" /> | <xref
          uid="@azure-rest/batch.JobScheduleExistsDefaultResponse" />&gt;
  - name: patch(UpdateJobScheduleParameters)
    uid: '@azure-rest/batch.JobScheduleExists.patch'
    package: '@azure-rest/batch'
    summary: >-
      This replaces only the Job Schedule properties specified in the request.
      For

      example, if the schedule property is not specified with this request, then
      the

      Batch service will keep the existing schedule. Changes to a Job Schedule
      only

      impact Jobs created by the schedule after the update has taken place;
      currently

      running Jobs are unaffected.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function patch(options: UpdateJobScheduleParameters):
        StreamableMethod<UpdateJobSchedule200Response |
        UpdateJobScheduleDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.UpdateJobScheduleParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.UpdateJobSchedule200Response" /> | <xref
          uid="@azure-rest/batch.UpdateJobScheduleDefaultResponse" />&gt;
  - name: put(ReplaceJobScheduleParameters)
    uid: '@azure-rest/batch.JobScheduleExists.put'
    package: '@azure-rest/batch'
    summary: >-
      This fully replaces all the updatable properties of the Job Schedule. For

      example, if the schedule property is not specified with this request, then
      the

      Batch service will remove the existing schedule. Changes to a Job Schedule
      only

      impact Jobs created by the schedule after the update has taken place;
      currently

      running Jobs are unaffected.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function put(options: ReplaceJobScheduleParameters):
        StreamableMethod<ReplaceJobSchedule200Response |
        ReplaceJobScheduleDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.ReplaceJobScheduleParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.ReplaceJobSchedule200Response" /> | <xref
          uid="@azure-rest/batch.ReplaceJobScheduleDefaultResponse" />&gt;
