### YamlMime:TSType
name: DeleteTask
uid: '@azure-rest/batch.DeleteTask'
package: '@azure-rest/batch'
summary: ''
fullName: DeleteTask
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: delete(DeleteTaskParameters)
    uid: '@azure-rest/batch.DeleteTask.delete'
    package: '@azure-rest/batch'
    summary: >-
      When a Task is deleted, all of the files in its directory on the Compute
      Node

      where it ran are also deleted (regardless of the retention time). For

      multi-instance Tasks, the delete Task operation applies synchronously to
      the

      primary task; subtasks and their files are then deleted asynchronously in
      the

      background.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(options?: DeleteTaskParameters):
        StreamableMethod<DeleteTask200Response | DeleteTaskDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.DeleteTaskParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.DeleteTask200Response" /> | <xref
          uid="@azure-rest/batch.DeleteTaskDefaultResponse" />&gt;
  - name: get(GetTaskParameters)
    uid: '@azure-rest/batch.DeleteTask.get'
    package: '@azure-rest/batch'
    summary: >-
      For multi-instance Tasks, information such as affinityId, executionInfo
      and

      nodeInfo refer to the primary Task. Use the list subtasks API to retrieve

      information about subtasks.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(options?: GetTaskParameters):
        StreamableMethod<GetTask200Response | GetTaskDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.GetTaskParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.GetTask200Response" /> | <xref
          uid="@azure-rest/batch.GetTaskDefaultResponse" />&gt;
  - name: put(ReplaceTaskParameters)
    uid: '@azure-rest/batch.DeleteTask.put'
    package: '@azure-rest/batch'
    summary: Updates the properties of the specified Task.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function put(options: ReplaceTaskParameters):
        StreamableMethod<ReplaceTask200Response | ReplaceTaskDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.ReplaceTaskParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.ReplaceTask200Response" /> | <xref
          uid="@azure-rest/batch.ReplaceTaskDefaultResponse" />&gt;
