### YamlMime:TSType
name: TerminateJob
uid: '@azure-rest/batch.TerminateJob'
package: '@azure-rest/batch'
summary: ''
fullName: TerminateJob
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: post(TerminateJobParameters)
    uid: '@azure-rest/batch.TerminateJob.post'
    package: '@azure-rest/batch'
    summary: >-
      When a Terminate Job request is received, the Batch service sets the Job
      to the

      terminating state. The Batch service then terminates any running Tasks

      associated with the Job and runs any required Job release Tasks. Then the
      Job

      moves into the completed state. If there are any Tasks in the Job in the
      active

      state, they will remain in the active state. Once a Job is terminated, new

      Tasks cannot be added and any remaining active Tasks will not be
      scheduled.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function post(options: TerminateJobParameters):
        StreamableMethod<TerminateJob202Response | TerminateJobDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.TerminateJobParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.TerminateJob202Response" /> | <xref
          uid="@azure-rest/batch.TerminateJobDefaultResponse" />&gt;
