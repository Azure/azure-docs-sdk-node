### YamlMime:TSType
name: BatchTaskExecutionInfo
uid: '@azure-rest/batch.BatchTaskExecutionInfo'
package: '@azure-rest/batch'
summary: Information about the execution of a Task.
fullName: BatchTaskExecutionInfo
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: containerInfo
    uid: '@azure-rest/batch.BatchTaskExecutionInfo.containerInfo'
    package: '@azure-rest/batch'
    summary: >-
      Information about the container under which the Task is executing. This
      property is set only if the Task runs in a container context.
    fullName: containerInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'containerInfo?: BatchTaskContainerExecutionInfo'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchTaskContainerExecutionInfo" />
  - name: endTime
    uid: '@azure-rest/batch.BatchTaskExecutionInfo.endTime'
    package: '@azure-rest/batch'
    summary: >-
      The time at which the Task completed. This property is set only if the
      Task is in the Completed state.
    fullName: endTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'endTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: exitCode
    uid: '@azure-rest/batch.BatchTaskExecutionInfo.exitCode'
    package: '@azure-rest/batch'
    summary: >-
      The exit code of the program specified on the Task command line. This
      property is set only if the Task is in the completed state. In general,
      the exit code for a process reflects the specific convention implemented
      by the application developer for that process. If you use the exit code
      value to make decisions in your code, be sure that you know the exit code
      convention used by the application process. However, if the Batch service
      terminates the Task (due to timeout, or user termination via the API) you
      may see an operating system-defined exit code.
    fullName: exitCode
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'exitCode?: number'
      return:
        description: ''
        type: number
  - name: failureInfo
    uid: '@azure-rest/batch.BatchTaskExecutionInfo.failureInfo'
    package: '@azure-rest/batch'
    summary: >-
      Information describing the Task failure, if any. This property is set only
      if the Task is in the completed state and encountered a failure.
    fullName: failureInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'failureInfo?: BatchTaskFailureInfo'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchTaskFailureInfo" />
  - name: lastRequeueTime
    uid: '@azure-rest/batch.BatchTaskExecutionInfo.lastRequeueTime'
    package: '@azure-rest/batch'
    summary: >-
      The most recent time at which the Task has been requeued by the Batch
      service as the result of a user request. This property is set only if the
      requeueCount is nonzero.
    fullName: lastRequeueTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lastRequeueTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: lastRetryTime
    uid: '@azure-rest/batch.BatchTaskExecutionInfo.lastRetryTime'
    package: '@azure-rest/batch'
    summary: >-
      The most recent time at which a retry of the Task started running. This
      element is present only if the Task was retried (i.e. retryCount is
      nonzero). If present, this is typically the same as startTime, but may be
      different if the Task has been restarted for reasons other than retry; for
      example, if the Compute Node was rebooted during a retry, then the
      startTime is updated but the lastRetryTime is not.
    fullName: lastRetryTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lastRetryTime?: string | Date'
      return:
        description: ''
        type: string | Date
  - name: requeueCount
    uid: '@azure-rest/batch.BatchTaskExecutionInfo.requeueCount'
    package: '@azure-rest/batch'
    summary: >-
      The number of times the Task has been requeued by the Batch service as the
      result of a user request. When the user removes Compute Nodes from a Pool
      (by resizing/shrinking the pool) or when the Job is being disabled, the
      user can specify that running Tasks on the Compute Nodes be requeued for
      execution. This count tracks how many times the Task has been requeued for
      these reasons.
    fullName: requeueCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'requeueCount: number'
      return:
        description: ''
        type: number
  - name: result
    uid: '@azure-rest/batch.BatchTaskExecutionInfo.result'
    package: '@azure-rest/batch'
    summary: >-
      The result of the Task execution. If the value is 'failed', then the
      details of the failure can be found in the failureInfo property.
    fullName: result
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'result?: string'
      return:
        description: ''
        type: string
  - name: retryCount
    uid: '@azure-rest/batch.BatchTaskExecutionInfo.retryCount'
    package: '@azure-rest/batch'
    summary: >-
      The number of times the Task has been retried by the Batch service. Task
      application failures (non-zero exit code) are retried, pre-processing
      errors (the Task could not be run) and file upload errors are not retried.
      The Batch service will retry the Task up to the limit specified by the
      constraints.
    fullName: retryCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'retryCount: number'
      return:
        description: ''
        type: number
  - name: startTime
    uid: '@azure-rest/batch.BatchTaskExecutionInfo.startTime'
    package: '@azure-rest/batch'
    summary: >-
      The time at which the Task started running. 'Running' corresponds to the
      running state, so if the Task specifies resource files or Packages, then
      the start time reflects the time at which the Task started downloading or
      deploying these. If the Task has been restarted or retried, this is the
      most recent time at which the Task started running. This property is
      present only for Tasks that are in the running or completed state.
    fullName: startTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'startTime?: string | Date'
      return:
        description: ''
        type: string | Date
