### YamlMime:TSType
name: DisableJob
uid: '@azure-rest/batch.DisableJob'
package: '@azure-rest/batch'
summary: ''
fullName: DisableJob
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: post(DisableJobParameters)
    uid: '@azure-rest/batch.DisableJob.post'
    package: '@azure-rest/batch'
    summary: >-
      The Batch Service immediately moves the Job to the disabling state. Batch
      then

      uses the disableTasks parameter to determine what to do with the currently

      running Tasks of the Job. The Job remains in the disabling state until the

      disable operation is completed and all Tasks have been dealt with
      according to

      the disableTasks option; the Job then moves to the disabled state. No new
      Tasks

      are started under the Job until it moves back to active state. If you try
      to

      disable a Job that is in any state other than active, disabling, or
      disabled,

      the request fails with status code 409.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function post(options: DisableJobParameters):
        StreamableMethod<DisableJob202Response | DisableJobDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.DisableJobParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.DisableJob202Response" /> | <xref
          uid="@azure-rest/batch.DisableJobDefaultResponse" />&gt;
