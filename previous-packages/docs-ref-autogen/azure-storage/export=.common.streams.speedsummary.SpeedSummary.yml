### YamlMime:TSType
name: SpeedSummary
uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary
package: azure-storage
summary: ''
fullName: SpeedSummary
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: completeSize
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.completeSize
    package: azure-storage
    summary: ''
    fullName: completeSize
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'completeSize: number'
      return:
        description: ''
        type: number
  - name: name
    uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary.name
    package: azure-storage
    summary: ''
    fullName: name
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        description: ''
        type: string
  - name: totalSize
    uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary.totalSize
    package: azure-storage
    summary: ''
    fullName: totalSize
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'totalSize: number'
      return:
        description: ''
        type: number
inheritedMethods:
  - name: addListener(string, Function)
    uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary.addListener
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function addListener(event: string, listener: Function): SpeedSummary'
      parameters:
        - id: event
          type: string
          description: ''
        - id: listener
          type: Function
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="common.streams.speedsummary.SpeedSummary" />
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.addListener
  - name: emit(string, any[])
    uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary.emit
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function emit(event: string, args: any[]): boolean'
      parameters:
        - id: event
          type: string
          description: ''
        - id: args
          type: any[]
          description: ''
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.emit
  - name: eventNames()
    uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary.eventNames
    package: azure-storage
    summary: |-
      Returns an array listing the events for which the emitter has registered
      listeners. The values in the array are strings or `Symbol`s.

      ```js
      import { EventEmitter } from 'node:events';

      const myEE = new EventEmitter();
      myEE.on('foo', () => {});
      myEE.on('bar', () => {});

      const sym = Symbol('symbol');
      myEE.on(sym, () => {});

      console.log(myEE.eventNames());
      // Prints: [ 'foo', 'bar', Symbol(symbol) ]
      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function eventNames(): (string | symbol)[]'
      return:
        description: ''
        type: (string | symbol)[]
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.eventNames
  - name: getMaxListeners()
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.getMaxListeners
    package: azure-storage
    summary: >-
      Returns the current max listener value for the `EventEmitter` which is
      either

      set by `emitter.setMaxListeners(n)` or defaults to
      <xref:azure-storage.export=.services.queue.QueueService.defaultMaxListeners>.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getMaxListeners(): number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.getMaxListeners
  - name: listenerCount(string | symbol, Function)
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.listenerCount
    package: azure-storage
    summary: >-
      Returns the number of listeners listening for the event named `eventName`.

      If `listener` is provided, it will return how many times the listener is
      found

      in the list of the listeners of the event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listenerCount(eventName: string | symbol, listener?: Function):
        number
      parameters:
        - id: eventName
          type: string | symbol
          description: The name of the event being listened for
        - id: listener
          type: Function
          description: The event handler function
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.listenerCount
  - name: listeners(string)
    uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary.listeners
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function listeners(event: string): Function[]'
      parameters:
        - id: event
          type: string
          description: ''
      return:
        description: ''
        type: Function[]
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.listeners
  - name: 'off(string | symbol, (args: any[]) => void)'
    uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary.off
    package: azure-storage
    summary: Alias for `emitter.removeListener()`.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(eventName: string | symbol, listener: (args: any[]) =>
        void): SpeedSummary
      parameters:
        - id: eventName
          type: string | symbol
          description: ''
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="common.streams.speedsummary.SpeedSummary" />
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.off
  - name: on(string, Function)
    uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary.on
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: string, listener: Function): SpeedSummary'
      parameters:
        - id: event
          type: string
          description: ''
        - id: listener
          type: Function
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="common.streams.speedsummary.SpeedSummary" />
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.on
  - name: once(string, Function)
    uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary.once
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function once(event: string, listener: Function): SpeedSummary'
      parameters:
        - id: event
          type: string
          description: ''
        - id: listener
          type: Function
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="common.streams.speedsummary.SpeedSummary" />
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.once
  - name: 'prependListener(string | symbol, (args: any[]) => void)'
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.prependListener
    package: azure-storage
    summary: >-
      Adds the `listener` function to the _beginning_ of the listeners array for
      the

      event named `eventName`. No checks are made to see if the `listener` has

      already been added. Multiple calls passing the same combination of
      `eventName`and `listener` will result in the `listener` being added, and
      called, multiple

      times.


      ```js

      server.prependListener('connection', (stream) => {
        console.log('someone connected!');
      });

      ```


      Returns a reference to the `EventEmitter`, so that calls can be chained.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function prependListener(eventName: string | symbol, listener: (args:
        any[]) => void): SpeedSummary
      parameters:
        - id: eventName
          type: string | symbol
          description: The name of the event.
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: The callback function
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="common.streams.speedsummary.SpeedSummary" />
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.prependListener
  - name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.prependOnceListener
    package: azure-storage
    summary: >-
      Adds a **one-time**`listener` function for the event named `eventName` to
      the _beginning_ of the listeners array. The next time `eventName` is
      triggered, this

      listener is removed, and then invoked.


      ```js

      server.prependOnceListener('connection', (stream) => {
        console.log('Ah, we have our first user!');
      });

      ```


      Returns a reference to the `EventEmitter`, so that calls can be chained.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function prependOnceListener(eventName: string | symbol, listener:
        (args: any[]) => void): SpeedSummary
      parameters:
        - id: eventName
          type: string | symbol
          description: The name of the event.
        - id: listener
          type: '(args: any[]) =&gt; void'
          description: The callback function
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="common.streams.speedsummary.SpeedSummary" />
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.prependOnceListener
  - name: rawListeners(string | symbol)
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.rawListeners
    package: azure-storage
    summary: |-
      Returns a copy of the array of listeners for the event named `eventName`,
      including any wrappers (such as those created by `.once()`).

      ```js
      import { EventEmitter } from 'node:events';
      const emitter = new EventEmitter();
      emitter.once('log', () => console.log('log once'));

      // Returns a new Array with a function `onceWrapper` which has a property
      // `listener` which contains the original listener bound above
      const listeners = emitter.rawListeners('log');
      const logFnWrapper = listeners[0];

      // Logs "log once" to the console and does not unbind the `once` event
      logFnWrapper.listener();

      // Logs "log once" to the console and removes the listener
      logFnWrapper();

      emitter.on('log', () => console.log('log persistently'));
      // Will return a new Array with a single function bound by `.on()` above
      const newListeners = emitter.rawListeners('log');

      // Logs "log persistently" twice
      newListeners[0]();
      emitter.emit('log');
      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function rawListeners(eventName: string | symbol): Function[]'
      parameters:
        - id: eventName
          type: string | symbol
          description: ''
      return:
        description: ''
        type: Function[]
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.rawListeners
  - name: removeAllListeners(string)
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.removeAllListeners
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeAllListeners(event?: string): SpeedSummary'
      parameters:
        - id: event
          type: string
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="common.streams.speedsummary.SpeedSummary" />
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.removeAllListeners
  - name: removeListener(string, Function)
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.removeListener
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeListener(event: string, listener: Function): SpeedSummary'
      parameters:
        - id: event
          type: string
          description: ''
        - id: listener
          type: Function
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="azure-storage.export" />=.<xref
          uid="common.streams.speedsummary.SpeedSummary" />
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.removeListener
  - name: setMaxListeners(number)
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.setMaxListeners
    package: azure-storage
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type: number
          description: ''
    inheritanceDescription: <b>Inherited From</b> events.EventEmitter.setMaxListeners
methods:
  - name: getAutoIncrementFunction(number)
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.getAutoIncrementFunction
    package: azure-storage
    summary: Get auto increment function
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAutoIncrementFunction(size: number): (error: any, retValue:
        number) => void
      parameters:
        - id: size
          type: number
          description: ''
      return:
        description: ''
        type: '(error: any, retValue: number) =&gt; void'
  - name: getAverageSpeed(boolean)
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.getAverageSpeed
    package: azure-storage
    summary: Get average upload/download speed
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAverageSpeed(humanReadable: boolean): string'
      parameters:
        - id: humanReadable
          type: boolean
          description: ''
      return:
        description: ''
        type: string
  - name: getCompletePercent(number)
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.getCompletePercent
    package: azure-storage
    summary: Get complete percentage
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getCompletePercent(len: number): number'
      parameters:
        - id: len
          type: number
          description: The number of digits after the decimal point.
      return:
        description: ''
        type: number
  - name: getCompleteSize(boolean)
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.getCompleteSize
    package: azure-storage
    summary: Get completed data size
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getCompleteSize(humanReadable: boolean): string | number'
      parameters:
        - id: humanReadable
          type: boolean
          description: ''
      return:
        description: ''
        type: string | number
  - name: getElapsedSeconds(boolean)
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.getElapsedSeconds
    package: azure-storage
    summary: Get running seconds
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getElapsedSeconds(humanReadable: boolean): number'
      parameters:
        - id: humanReadable
          type: boolean
          description: ''
      return:
        description: ''
        type: number
  - name: getSpeed(boolean)
    uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary.getSpeed
    package: azure-storage
    summary: Get instant speed
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getSpeed(humanReadable: boolean): string | number'
      parameters:
        - id: humanReadable
          type: boolean
          description: ''
      return:
        description: ''
        type: string | number
  - name: getTotalSize(boolean)
    uid: >-
      azure-storage.export=.common.streams.speedsummary.SpeedSummary.getTotalSize
    package: azure-storage
    summary: Get total size
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getTotalSize(humanReadable: boolean): string | number'
      parameters:
        - id: humanReadable
          type: boolean
          description: ''
      return:
        description: ''
        type: string | number
  - name: increment(number)
    uid: azure-storage.export=.common.streams.speedsummary.SpeedSummary.increment
    package: azure-storage
    summary: Increment the complete data size
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function increment(len: number): number'
      parameters:
        - id: len
          type: number
          description: ''
      return:
        description: ''
        type: number
extends: EventEmitter
