### YamlMime:UniversalReference
items:
  - uid: azure-keyvault.DeletedKeyBundle
    name: DeletedKeyBundle
    fullName: DeletedKeyBundle
    children:
      - azure-keyvault.DeletedKeyBundle.attributes
      - azure-keyvault.DeletedKeyBundle.deletedDate
      - azure-keyvault.DeletedKeyBundle.key
      - azure-keyvault.DeletedKeyBundle.managed
      - azure-keyvault.DeletedKeyBundle.recoveryId
      - azure-keyvault.DeletedKeyBundle.scheduledPurgeDate
      - azure-keyvault.DeletedKeyBundle.tags
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: azure-keyvault.KeyBundle
    package: azure-keyvault
  - uid: azure-keyvault.DeletedKeyBundle.attributes
    name: attributes
    fullName: attributes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'attributes?: KeyAttributes'
      return:
        type:
          - azure-keyvault.KeyAttributes
    package: azure-keyvault
  - uid: azure-keyvault.DeletedKeyBundle.deletedDate
    name: deletedDate
    fullName: deletedDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'deletedDate?: Date'
      return:
        type:
          - Date
    package: azure-keyvault
  - uid: azure-keyvault.DeletedKeyBundle.key
    name: key
    fullName: key
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'key?: JsonWebKey'
      return:
        type:
          - azure-keyvault.JsonWebKey
    package: azure-keyvault
  - uid: azure-keyvault.DeletedKeyBundle.managed
    name: managed
    fullName: managed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'managed?: boolean'
      return:
        type:
          - boolean
    package: azure-keyvault
  - uid: azure-keyvault.DeletedKeyBundle.recoveryId
    name: recoveryId
    fullName: recoveryId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'recoveryId?: string'
      return:
        type:
          - string
    package: azure-keyvault
  - uid: azure-keyvault.DeletedKeyBundle.scheduledPurgeDate
    name: scheduledPurgeDate
    fullName: scheduledPurgeDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'scheduledPurgeDate?: Date'
      return:
        type:
          - Date
    package: azure-keyvault
  - uid: azure-keyvault.DeletedKeyBundle.tags
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'tags?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
    package: azure-keyvault
references:
  - uid: azure-keyvault.KeyBundle
    name: KeyBundle
    spec.typeScript:
      - name: KeyBundle
        fullName: KeyBundle
        uid: azure-keyvault.KeyBundle
  - uid: azure-keyvault.KeyAttributes
    name: KeyAttributes
    spec.typeScript:
      - name: KeyAttributes
        fullName: KeyAttributes
        uid: azure-keyvault.KeyAttributes
  - uid: azure-keyvault.JsonWebKey
    name: JsonWebKey
    spec.typeScript:
      - name: JsonWebKey
        fullName: JsonWebKey
        uid: azure-keyvault.JsonWebKey
