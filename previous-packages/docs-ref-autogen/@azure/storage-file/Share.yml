### YamlMime:TSType
name: Share
uid: '@azure/storage-file.Share'
package: '@azure/storage-file'
summary: Class representing a Share.
fullName: Share
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: Share(StorageClientContext)
    uid: '@azure/storage-file.Share.constructor'
    package: '@azure/storage-file'
    summary: Create a Share.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new Share(client: StorageClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/storage-file.StorageClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: create(Models.ShareCreateOptionalParams)
    uid: '@azure/storage-file.Share.create'
    package: '@azure/storage-file'
    summary: >-
      Creates a new share under the specified account. If the share with the
      same name already exists,

      the operation fails.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(options?: Models.ShareCreateOptionalParams):
        Promise<Models.ShareCreateResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ShareCreateOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ShareCreateResponse>
        type: Promise&lt;<xref uid="Models.ShareCreateResponse" />&gt;
  - name: create(ServiceCallback<void>)
    uid: '@azure/storage-file.Share.create_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function create(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'create(ShareCreateOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-file.Share.create_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(options: ShareCreateOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file.ShareCreateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'createPermission(Permission, Models.ShareCreatePermissionOptionalParams)'
    uid: '@azure/storage-file.Share.createPermission'
    package: '@azure/storage-file'
    summary: Create a permission (a security descriptor).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createPermission(permission: Permission, options?:
        Models.ShareCreatePermissionOptionalParams):
        Promise<Models.ShareCreatePermissionResponse>
      parameters:
        - id: permission
          type: <xref uid="@azure/storage-file.Permission" />
          description: Permission(a security descriptor) described in the SDDL.
        - id: options
          type: <xref uid="Models.ShareCreatePermissionOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ShareCreatePermissionResponse>
        type: Promise&lt;<xref uid="Models.ShareCreatePermissionResponse" />&gt;
  - name: 'createPermission(Permission, ServiceCallback<void>)'
    uid: '@azure/storage-file.Share.createPermission_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createPermission(permission: Permission, callback:
        ServiceCallback<void>)
      parameters:
        - id: permission
          type: <xref uid="@azure/storage-file.Permission" />
          description: Permission(a security descriptor) described in the SDDL.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      createPermission(Permission, ShareCreatePermissionOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/storage-file.Share.createPermission_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createPermission(permission: Permission, options:
        ShareCreatePermissionOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: permission
          type: <xref uid="@azure/storage-file.Permission" />
          description: Permission(a security descriptor) described in the SDDL.
        - id: options
          type: >-
            <xref uid="@azure/storage-file.ShareCreatePermissionOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: createSnapshot(Models.ShareCreateSnapshotOptionalParams)
    uid: '@azure/storage-file.Share.createSnapshot'
    package: '@azure/storage-file'
    summary: Creates a read-only snapshot of a share.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createSnapshot(options?:
        Models.ShareCreateSnapshotOptionalParams):
        Promise<Models.ShareCreateSnapshotResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ShareCreateSnapshotOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ShareCreateSnapshotResponse>
        type: Promise&lt;<xref uid="Models.ShareCreateSnapshotResponse" />&gt;
  - name: createSnapshot(ServiceCallback<void>)
    uid: '@azure/storage-file.Share.createSnapshot_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createSnapshot(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'createSnapshot(ShareCreateSnapshotOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-file.Share.createSnapshot_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createSnapshot(options: ShareCreateSnapshotOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file.ShareCreateSnapshotOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: deleteMethod(Models.ShareDeleteMethodOptionalParams)
    uid: '@azure/storage-file.Share.deleteMethod'
    package: '@azure/storage-file'
    summary: >-
      Operation marks the specified share or share snapshot for deletion. The
      share or share snapshot

      and any files contained within it are later deleted during garbage
      collection.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(options?: Models.ShareDeleteMethodOptionalParams):
        Promise<Models.ShareDeleteResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ShareDeleteMethodOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ShareDeleteResponse>
        type: Promise&lt;<xref uid="Models.ShareDeleteResponse" />&gt;
  - name: deleteMethod(ServiceCallback<void>)
    uid: '@azure/storage-file.Share.deleteMethod_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function deleteMethod(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(ShareDeleteMethodOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-file.Share.deleteMethod_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(options: ShareDeleteMethodOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file.ShareDeleteMethodOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: getAccessPolicy(Models.ShareGetAccessPolicyOptionalParams)
    uid: '@azure/storage-file.Share.getAccessPolicy'
    package: '@azure/storage-file'
    summary: Returns information about stored access policies specified on the share.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccessPolicy(options?:
        Models.ShareGetAccessPolicyOptionalParams):
        Promise<Models.ShareGetAccessPolicyResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ShareGetAccessPolicyOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ShareGetAccessPolicyResponse>
        type: Promise&lt;<xref uid="Models.ShareGetAccessPolicyResponse" />&gt;
  - name: 'getAccessPolicy(ServiceCallback<SignedIdentifier[]>)'
    uid: '@azure/storage-file.Share.getAccessPolicy_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAccessPolicy(callback: ServiceCallback<SignedIdentifier[]>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/storage-file.SignedIdentifier"
            />[]&gt;
          description: |
            The callback
  - name: >-
      getAccessPolicy(ShareGetAccessPolicyOptionalParams,
      ServiceCallback<SignedIdentifier[]>)
    uid: '@azure/storage-file.Share.getAccessPolicy_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAccessPolicy(options: ShareGetAccessPolicyOptionalParams,
        callback: ServiceCallback<SignedIdentifier[]>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-file.ShareGetAccessPolicyOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/storage-file.SignedIdentifier"
            />[]&gt;
          description: |
            The callback
  - name: 'getPermission(string, Models.ShareGetPermissionOptionalParams)'
    uid: '@azure/storage-file.Share.getPermission'
    package: '@azure/storage-file'
    summary: Returns the permission (security descriptor) for a given key
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getPermission(filePermissionKey: string, options?:
        Models.ShareGetPermissionOptionalParams):
        Promise<Models.ShareGetPermissionResponse>
      parameters:
        - id: filePermissionKey
          type: string
          description: >-
            Key of the permission to be set for the directory/file. Note: Only
            one

            of the x-ms-file-permission or x-ms-file-permission-key should be
            specified.
        - id: options
          type: <xref uid="Models.ShareGetPermissionOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ShareGetPermissionResponse>
        type: Promise&lt;<xref uid="Models.ShareGetPermissionResponse" />&gt;
  - name: 'getPermission(string, ServiceCallback<Permission>)'
    uid: '@azure/storage-file.Share.getPermission_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getPermission(filePermissionKey: string, callback:
        ServiceCallback<Permission>)
      parameters:
        - id: filePermissionKey
          type: string
          description: >-
            Key of the permission to be set for the directory/file. Note: Only
            one

            of the x-ms-file-permission or x-ms-file-permission-key should be
            specified.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/storage-file.Permission" />&gt;
          description: |
            The callback
  - name: >-
      getPermission(string, ShareGetPermissionOptionalParams,
      ServiceCallback<Permission>)
    uid: '@azure/storage-file.Share.getPermission_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getPermission(filePermissionKey: string, options:
        ShareGetPermissionOptionalParams, callback: ServiceCallback<Permission>)
      parameters:
        - id: filePermissionKey
          type: string
          description: >-
            Key of the permission to be set for the directory/file. Note: Only
            one

            of the x-ms-file-permission or x-ms-file-permission-key should be
            specified.
        - id: options
          type: <xref uid="@azure/storage-file.ShareGetPermissionOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/storage-file.Permission" />&gt;
          description: |
            The callback
  - name: getProperties(Models.ShareGetPropertiesOptionalParams)
    uid: '@azure/storage-file.Share.getProperties'
    package: '@azure/storage-file'
    summary: >-
      Returns all user-defined metadata and system properties for the specified
      share or share

      snapshot. The data returned does not include the share's list of files.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(options?:
        Models.ShareGetPropertiesOptionalParams):
        Promise<Models.ShareGetPropertiesResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ShareGetPropertiesOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ShareGetPropertiesResponse>
        type: Promise&lt;<xref uid="Models.ShareGetPropertiesResponse" />&gt;
  - name: getProperties(ServiceCallback<void>)
    uid: '@azure/storage-file.Share.getProperties_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getProperties(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'getProperties(ShareGetPropertiesOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-file.Share.getProperties_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(options: ShareGetPropertiesOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file.ShareGetPropertiesOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: getStatistics(Models.ShareGetStatisticsOptionalParams)
    uid: '@azure/storage-file.Share.getStatistics'
    package: '@azure/storage-file'
    summary: Retrieves statistics related to the share.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getStatistics(options?:
        Models.ShareGetStatisticsOptionalParams):
        Promise<Models.ShareGetStatisticsResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ShareGetStatisticsOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ShareGetStatisticsResponse>
        type: Promise&lt;<xref uid="Models.ShareGetStatisticsResponse" />&gt;
  - name: getStatistics(ServiceCallback<ShareStats>)
    uid: '@azure/storage-file.Share.getStatistics_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getStatistics(callback: ServiceCallback<ShareStats>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/storage-file.ShareStats" />&gt;
          description: |
            The callback
  - name: >-
      getStatistics(ShareGetStatisticsOptionalParams,
      ServiceCallback<ShareStats>)
    uid: '@azure/storage-file.Share.getStatistics_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getStatistics(options: ShareGetStatisticsOptionalParams,
        callback: ServiceCallback<ShareStats>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file.ShareGetStatisticsOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/storage-file.ShareStats" />&gt;
          description: |
            The callback
  - name: setAccessPolicy(Models.ShareSetAccessPolicyOptionalParams)
    uid: '@azure/storage-file.Share.setAccessPolicy'
    package: '@azure/storage-file'
    summary: Sets a stored access policy for use with shared access signatures.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setAccessPolicy(options?:
        Models.ShareSetAccessPolicyOptionalParams):
        Promise<Models.ShareSetAccessPolicyResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ShareSetAccessPolicyOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ShareSetAccessPolicyResponse>
        type: Promise&lt;<xref uid="Models.ShareSetAccessPolicyResponse" />&gt;
  - name: setAccessPolicy(ServiceCallback<void>)
    uid: '@azure/storage-file.Share.setAccessPolicy_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setAccessPolicy(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'setAccessPolicy(ShareSetAccessPolicyOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-file.Share.setAccessPolicy_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setAccessPolicy(options: ShareSetAccessPolicyOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-file.ShareSetAccessPolicyOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: setMetadata(Models.ShareSetMetadataOptionalParams)
    uid: '@azure/storage-file.Share.setMetadata'
    package: '@azure/storage-file'
    summary: Sets one or more user-defined name-value pairs for the specified share.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setMetadata(options?: Models.ShareSetMetadataOptionalParams):
        Promise<Models.ShareSetMetadataResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ShareSetMetadataOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ShareSetMetadataResponse>
        type: Promise&lt;<xref uid="Models.ShareSetMetadataResponse" />&gt;
  - name: setMetadata(ServiceCallback<void>)
    uid: '@azure/storage-file.Share.setMetadata_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setMetadata(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'setMetadata(ShareSetMetadataOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-file.Share.setMetadata_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setMetadata(options: ShareSetMetadataOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file.ShareSetMetadataOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: setQuota(Models.ShareSetQuotaOptionalParams)
    uid: '@azure/storage-file.Share.setQuota'
    package: '@azure/storage-file'
    summary: Sets quota for the specified share.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setQuota(options?: Models.ShareSetQuotaOptionalParams):
        Promise<Models.ShareSetQuotaResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ShareSetQuotaOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ShareSetQuotaResponse>
        type: Promise&lt;<xref uid="Models.ShareSetQuotaResponse" />&gt;
  - name: setQuota(ServiceCallback<void>)
    uid: '@azure/storage-file.Share.setQuota_1'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setQuota(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'setQuota(ShareSetQuotaOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-file.Share.setQuota_2'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setQuota(options: ShareSetQuotaOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file.ShareSetQuotaOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
