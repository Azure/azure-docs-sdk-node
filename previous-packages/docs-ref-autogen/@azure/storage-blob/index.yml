### YamlMime:TSPackage
uid: '@azure/storage-blob'
name: '@azure/storage-blob'
summary: ''
type: package
classes:
  - '@azure/storage-blob.Aborter'
  - '@azure/storage-blob.AccountSASPermissions'
  - '@azure/storage-blob.AccountSASResourceTypes'
  - '@azure/storage-blob.AccountSASServices'
  - '@azure/storage-blob.AppendBlobURL'
  - '@azure/storage-blob.BatchDeleteRequest'
  - '@azure/storage-blob.BatchRequest'
  - '@azure/storage-blob.BatchSetTierRequest'
  - '@azure/storage-blob.InnerBatchRequest'
  - '@azure/storage-blob.BlobSASPermissions'
  - '@azure/storage-blob.BlobURL'
  - '@azure/storage-blob.BlockBlobURL'
  - '@azure/storage-blob.BrowserPolicyFactory'
  - '@azure/storage-blob.ContainerSASPermissions'
  - '@azure/storage-blob.ContainerURL'
  - '@azure/storage-blob.KeepAlivePolicyFactory'
  - '@azure/storage-blob.LoggingPolicyFactory'
  - '@azure/storage-blob.PageBlobURL'
  - '@azure/storage-blob.Pipeline'
  - '@azure/storage-blob.RetryPolicyFactory'
  - '@azure/storage-blob.SASQueryParameters'
  - '@azure/storage-blob.ServiceURL'
  - '@azure/storage-blob.StorageURL'
  - '@azure/storage-blob.TelemetryPolicyFactory'
  - '@azure/storage-blob.UniqueRequestIDPolicyFactory'
  - '@azure/storage-blob.AnonymousCredential'
  - '@azure/storage-blob.Credential'
  - '@azure/storage-blob.SharedKeyCredential'
  - '@azure/storage-blob.TokenCredential'
  - '@azure/storage-blob.StorageClientContext'
  - '@azure/storage-blob.AnonymousCredentialPolicy'
  - '@azure/storage-blob.BrowserPolicy'
  - '@azure/storage-blob.CredentialPolicy'
  - '@azure/storage-blob.KeepAlivePolicy'
  - '@azure/storage-blob.LoggingPolicy'
  - '@azure/storage-blob.RetryPolicy'
  - '@azure/storage-blob.SharedKeyCredentialPolicy'
  - '@azure/storage-blob.TelemetryPolicy'
  - '@azure/storage-blob.TokenCredentialPolicy'
  - '@azure/storage-blob.UniqueRequestIDPolicy'
interfaces:
  - '@azure/storage-blob.IAppendBlobAppendBlockFromURLOptions'
  - '@azure/storage-blob.IAppendBlobAppendBlockOptions'
  - '@azure/storage-blob.IAppendBlobCreateOptions'
  - '@azure/storage-blob.BatchSubRequest'
  - '@azure/storage-blob.BatchSubResponse'
  - '@azure/storage-blob.ParsedBatchResponse'
  - '@azure/storage-blob.IBlobAbortCopyFromURLOptions'
  - '@azure/storage-blob.IBlobAcquireLeaseOptions'
  - '@azure/storage-blob.IBlobBreakLeaseOptions'
  - '@azure/storage-blob.IBlobChangeLeaseOptions'
  - '@azure/storage-blob.IBlobCreateSnapshotOptions'
  - '@azure/storage-blob.IBlobDeleteOptions'
  - '@azure/storage-blob.IBlobDownloadOptions'
  - '@azure/storage-blob.IBlobGetPropertiesOptions'
  - '@azure/storage-blob.IBlobReleaseLeaseOptions'
  - '@azure/storage-blob.IBlobRenewLeaseOptions'
  - '@azure/storage-blob.IBlobSetHTTPHeadersOptions'
  - '@azure/storage-blob.IBlobSetMetadataOptions'
  - '@azure/storage-blob.IBlobSetTierOptions'
  - '@azure/storage-blob.IBlobStartCopyFromURLOptions'
  - '@azure/storage-blob.IBlobSyncCopyFromURLOptions'
  - '@azure/storage-blob.IBlockBlobCommitBlockListOptions'
  - '@azure/storage-blob.IBlockBlobGetBlockListOptions'
  - '@azure/storage-blob.IBlockBlobStageBlockFromURLOptions'
  - '@azure/storage-blob.IBlockBlobStageBlockOptions'
  - '@azure/storage-blob.IBlockBlobUploadOptions'
  - '@azure/storage-blob.IContainerAcquireLeaseOptions'
  - '@azure/storage-blob.IContainerBreakLeaseOptions'
  - '@azure/storage-blob.IContainerChangeLeaseOptions'
  - '@azure/storage-blob.IContainerCreateOptions'
  - '@azure/storage-blob.IContainerDeleteMethodOptions'
  - '@azure/storage-blob.IContainerGetAccessPolicyOptions'
  - '@azure/storage-blob.IContainerGetPropertiesOptions'
  - '@azure/storage-blob.IContainerListBlobsSegmentOptions'
  - '@azure/storage-blob.IContainerReleaseLeaseOptions'
  - '@azure/storage-blob.IContainerRenewLeaseOptions'
  - '@azure/storage-blob.IContainerSetAccessPolicyOptions'
  - '@azure/storage-blob.IContainerSetMetadataOptions'
  - '@azure/storage-blob.ISignedIdentifier'
  - '@azure/storage-blob.IAccountSASSignatureValues'
  - '@azure/storage-blob.IBlobSASSignatureValues'
  - '@azure/storage-blob.IIPRange'
  - '@azure/storage-blob.IRange'
  - '@azure/storage-blob.IKeepAliveOptions'
  - '@azure/storage-blob.IRequestLogOptions'
  - '@azure/storage-blob.IPageBlobClearPagesOptions'
  - '@azure/storage-blob.IPageBlobCreateOptions'
  - '@azure/storage-blob.IPageBlobGetPageRangesDiffOptions'
  - '@azure/storage-blob.IPageBlobGetPageRangesOptions'
  - '@azure/storage-blob.IPageBlobResizeOptions'
  - '@azure/storage-blob.IPageBlobStartCopyIncrementalOptions'
  - '@azure/storage-blob.IPageBlobUpdateSequenceNumberOptions'
  - '@azure/storage-blob.IPageBlobUploadPagesFromURLOptions'
  - '@azure/storage-blob.IPageBlobUploadPagesOptions'
  - '@azure/storage-blob.IPipelineOptions'
  - '@azure/storage-blob.IRetryOptions'
  - '@azure/storage-blob.IServiceListContainersSegmentOptions'
  - '@azure/storage-blob.UserDelegationKey'
  - '@azure/storage-blob.INewPipelineOptions'
  - '@azure/storage-blob.ITelemetryOptions'
  - '@azure/storage-blob.AccessPolicy'
  - '@azure/storage-blob.AppendBlobAppendBlockFromUrlHeaders'
  - '@azure/storage-blob.AppendBlobAppendBlockFromUrlOptionalParams'
  - '@azure/storage-blob.AppendBlobAppendBlockHeaders'
  - '@azure/storage-blob.AppendBlobAppendBlockOptionalParams'
  - '@azure/storage-blob.AppendBlobCreateHeaders'
  - '@azure/storage-blob.AppendBlobCreateOptionalParams'
  - '@azure/storage-blob.AppendPositionAccessConditions'
  - '@azure/storage-blob.BlobAbortCopyFromURLHeaders'
  - '@azure/storage-blob.BlobAbortCopyFromURLOptionalParams'
  - '@azure/storage-blob.BlobAcquireLeaseHeaders'
  - '@azure/storage-blob.BlobAcquireLeaseOptionalParams'
  - '@azure/storage-blob.BlobBreakLeaseHeaders'
  - '@azure/storage-blob.BlobBreakLeaseOptionalParams'
  - '@azure/storage-blob.BlobChangeLeaseHeaders'
  - '@azure/storage-blob.BlobChangeLeaseOptionalParams'
  - '@azure/storage-blob.BlobCopyFromURLHeaders'
  - '@azure/storage-blob.BlobCopyFromURLOptionalParams'
  - '@azure/storage-blob.BlobCreateSnapshotHeaders'
  - '@azure/storage-blob.BlobCreateSnapshotOptionalParams'
  - '@azure/storage-blob.BlobDeleteHeaders'
  - '@azure/storage-blob.BlobDeleteMethodOptionalParams'
  - '@azure/storage-blob.BlobDownloadHeaders'
  - '@azure/storage-blob.BlobDownloadOptionalParams'
  - '@azure/storage-blob.BlobFlatListSegment'
  - '@azure/storage-blob.BlobGetAccessControlHeaders'
  - '@azure/storage-blob.BlobGetAccessControlOptionalParams'
  - '@azure/storage-blob.BlobGetAccountInfoHeaders'
  - '@azure/storage-blob.BlobGetPropertiesHeaders'
  - '@azure/storage-blob.BlobGetPropertiesOptionalParams'
  - '@azure/storage-blob.BlobHTTPHeaders'
  - '@azure/storage-blob.BlobHierarchyListSegment'
  - '@azure/storage-blob.BlobItem'
  - '@azure/storage-blob.BlobMetadata'
  - '@azure/storage-blob.BlobPrefix'
  - '@azure/storage-blob.BlobProperties'
  - '@azure/storage-blob.BlobReleaseLeaseHeaders'
  - '@azure/storage-blob.BlobReleaseLeaseOptionalParams'
  - '@azure/storage-blob.BlobRenameHeaders'
  - '@azure/storage-blob.BlobRenameOptionalParams'
  - '@azure/storage-blob.BlobRenewLeaseHeaders'
  - '@azure/storage-blob.BlobRenewLeaseOptionalParams'
  - '@azure/storage-blob.BlobSetAccessControlHeaders'
  - '@azure/storage-blob.BlobSetAccessControlOptionalParams'
  - '@azure/storage-blob.BlobSetHTTPHeadersHeaders'
  - '@azure/storage-blob.BlobSetHTTPHeadersOptionalParams'
  - '@azure/storage-blob.BlobSetMetadataHeaders'
  - '@azure/storage-blob.BlobSetMetadataOptionalParams'
  - '@azure/storage-blob.BlobSetTierHeaders'
  - '@azure/storage-blob.BlobSetTierOptionalParams'
  - '@azure/storage-blob.BlobStartCopyFromURLHeaders'
  - '@azure/storage-blob.BlobStartCopyFromURLOptionalParams'
  - '@azure/storage-blob.BlobUndeleteHeaders'
  - '@azure/storage-blob.BlobUndeleteOptionalParams'
  - '@azure/storage-blob.Block'
  - '@azure/storage-blob.BlockBlobCommitBlockListHeaders'
  - '@azure/storage-blob.BlockBlobCommitBlockListOptionalParams'
  - '@azure/storage-blob.BlockBlobGetBlockListHeaders'
  - '@azure/storage-blob.BlockBlobGetBlockListOptionalParams'
  - '@azure/storage-blob.BlockBlobStageBlockFromURLHeaders'
  - '@azure/storage-blob.BlockBlobStageBlockFromURLOptionalParams'
  - '@azure/storage-blob.BlockBlobStageBlockHeaders'
  - '@azure/storage-blob.BlockBlobStageBlockOptionalParams'
  - '@azure/storage-blob.BlockBlobUploadHeaders'
  - '@azure/storage-blob.BlockBlobUploadOptionalParams'
  - '@azure/storage-blob.BlockList'
  - '@azure/storage-blob.BlockLookupList'
  - '@azure/storage-blob.ClearRange'
  - '@azure/storage-blob.ContainerAcquireLeaseHeaders'
  - '@azure/storage-blob.ContainerAcquireLeaseOptionalParams'
  - '@azure/storage-blob.ContainerBreakLeaseHeaders'
  - '@azure/storage-blob.ContainerBreakLeaseOptionalParams'
  - '@azure/storage-blob.ContainerChangeLeaseHeaders'
  - '@azure/storage-blob.ContainerChangeLeaseOptionalParams'
  - '@azure/storage-blob.ContainerCreateHeaders'
  - '@azure/storage-blob.ContainerCreateOptionalParams'
  - '@azure/storage-blob.ContainerDeleteHeaders'
  - '@azure/storage-blob.ContainerDeleteMethodOptionalParams'
  - '@azure/storage-blob.ContainerGetAccessPolicyHeaders'
  - '@azure/storage-blob.ContainerGetAccessPolicyOptionalParams'
  - '@azure/storage-blob.ContainerGetAccountInfoHeaders'
  - '@azure/storage-blob.ContainerGetPropertiesHeaders'
  - '@azure/storage-blob.ContainerGetPropertiesOptionalParams'
  - '@azure/storage-blob.ContainerItem'
  - '@azure/storage-blob.ContainerListBlobFlatSegmentHeaders'
  - '@azure/storage-blob.ContainerListBlobFlatSegmentOptionalParams'
  - '@azure/storage-blob.ContainerListBlobHierarchySegmentHeaders'
  - '@azure/storage-blob.ContainerListBlobHierarchySegmentOptionalParams'
  - '@azure/storage-blob.ContainerProperties'
  - '@azure/storage-blob.ContainerReleaseLeaseHeaders'
  - '@azure/storage-blob.ContainerReleaseLeaseOptionalParams'
  - '@azure/storage-blob.ContainerRenewLeaseHeaders'
  - '@azure/storage-blob.ContainerRenewLeaseOptionalParams'
  - '@azure/storage-blob.ContainerSetAccessPolicyHeaders'
  - '@azure/storage-blob.ContainerSetAccessPolicyOptionalParams'
  - '@azure/storage-blob.ContainerSetMetadataHeaders'
  - '@azure/storage-blob.ContainerSetMetadataOptionalParams'
  - '@azure/storage-blob.CorsRule'
  - '@azure/storage-blob.CpkInfo'
  - '@azure/storage-blob.DataLakeStorageError'
  - '@azure/storage-blob.DataLakeStorageErrorError'
  - '@azure/storage-blob.DirectoryCreateHeaders'
  - '@azure/storage-blob.DirectoryCreateOptionalParams'
  - '@azure/storage-blob.DirectoryDeleteHeaders'
  - '@azure/storage-blob.DirectoryDeleteMethodOptionalParams'
  - '@azure/storage-blob.DirectoryGetAccessControlHeaders'
  - '@azure/storage-blob.DirectoryGetAccessControlOptionalParams'
  - '@azure/storage-blob.DirectoryHttpHeaders'
  - '@azure/storage-blob.DirectoryRenameHeaders'
  - '@azure/storage-blob.DirectoryRenameOptionalParams'
  - '@azure/storage-blob.DirectorySetAccessControlHeaders'
  - '@azure/storage-blob.DirectorySetAccessControlOptionalParams'
  - '@azure/storage-blob.GeoReplication'
  - '@azure/storage-blob.KeyInfo'
  - '@azure/storage-blob.LeaseAccessConditions'
  - '@azure/storage-blob.ListBlobsFlatSegmentResponse'
  - '@azure/storage-blob.ListBlobsHierarchySegmentResponse'
  - '@azure/storage-blob.ListContainersSegmentResponse'
  - '@azure/storage-blob.Logging'
  - '@azure/storage-blob.Metrics'
  - '@azure/storage-blob.ModifiedAccessConditions'
  - '@azure/storage-blob.PageBlobClearPagesHeaders'
  - '@azure/storage-blob.PageBlobClearPagesOptionalParams'
  - '@azure/storage-blob.PageBlobCopyIncrementalHeaders'
  - '@azure/storage-blob.PageBlobCopyIncrementalOptionalParams'
  - '@azure/storage-blob.PageBlobCreateHeaders'
  - '@azure/storage-blob.PageBlobCreateOptionalParams'
  - '@azure/storage-blob.PageBlobGetPageRangesDiffHeaders'
  - '@azure/storage-blob.PageBlobGetPageRangesDiffOptionalParams'
  - '@azure/storage-blob.PageBlobGetPageRangesHeaders'
  - '@azure/storage-blob.PageBlobGetPageRangesOptionalParams'
  - '@azure/storage-blob.PageBlobResizeHeaders'
  - '@azure/storage-blob.PageBlobResizeOptionalParams'
  - '@azure/storage-blob.PageBlobUpdateSequenceNumberHeaders'
  - '@azure/storage-blob.PageBlobUpdateSequenceNumberOptionalParams'
  - '@azure/storage-blob.PageBlobUploadPagesFromURLHeaders'
  - '@azure/storage-blob.PageBlobUploadPagesFromURLOptionalParams'
  - '@azure/storage-blob.PageBlobUploadPagesHeaders'
  - '@azure/storage-blob.PageBlobUploadPagesOptionalParams'
  - '@azure/storage-blob.PageList'
  - '@azure/storage-blob.PageRange'
  - '@azure/storage-blob.RetentionPolicy'
  - '@azure/storage-blob.SequenceNumberAccessConditions'
  - '@azure/storage-blob.ServiceGetAccountInfoHeaders'
  - '@azure/storage-blob.ServiceGetPropertiesHeaders'
  - '@azure/storage-blob.ServiceGetPropertiesOptionalParams'
  - '@azure/storage-blob.ServiceGetStatisticsHeaders'
  - '@azure/storage-blob.ServiceGetStatisticsOptionalParams'
  - '@azure/storage-blob.ServiceGetUserDelegationKeyHeaders'
  - '@azure/storage-blob.ServiceGetUserDelegationKeyOptionalParams'
  - '@azure/storage-blob.ServiceListContainersSegmentHeaders'
  - '@azure/storage-blob.ServiceListContainersSegmentOptionalParams'
  - '@azure/storage-blob.ServiceSetPropertiesHeaders'
  - '@azure/storage-blob.ServiceSetPropertiesOptionalParams'
  - '@azure/storage-blob.ServiceSubmitBatchHeaders'
  - '@azure/storage-blob.ServiceSubmitBatchOptionalParams'
  - '@azure/storage-blob.SignedIdentifier'
  - '@azure/storage-blob.SourceModifiedAccessConditions'
  - '@azure/storage-blob.StaticWebsite'
  - '@azure/storage-blob.StorageClientOptions'
  - '@azure/storage-blob.StorageError'
  - '@azure/storage-blob.StorageServiceProperties'
  - '@azure/storage-blob.StorageServiceStats'
  - '@azure/storage-blob.IDownloadFromBlobOptions'
  - '@azure/storage-blob.IUploadToBlockBlobOptions'
  - '@azure/storage-blob.IUploadStreamToBlockBlobOptions'
  - '@azure/storage-blob.IAppendBlobAccessConditions'
  - '@azure/storage-blob.IBlobAccessConditions'
  - '@azure/storage-blob.IContainerAccessConditions'
  - '@azure/storage-blob.IMetadata'
  - '@azure/storage-blob.IPageBlobAccessConditions'
typeAliases:
  - '@azure/storage-blob.ContainerGetAccessPolicyResponse'
  - '@azure/storage-blob.ServiceGetUserDelegationKeyResponse'
  - '@azure/storage-blob.ServiceSubmitBatchResponse'
  - '@azure/storage-blob.CredentialPolicyCreator'
  - '@azure/storage-blob.AccessTier'
  - '@azure/storage-blob.AccountKind'
  - '@azure/storage-blob.AppendBlobAppendBlockFromUrlResponse'
  - '@azure/storage-blob.AppendBlobAppendBlockResponse'
  - '@azure/storage-blob.AppendBlobCreateResponse'
  - '@azure/storage-blob.ArchiveStatus'
  - '@azure/storage-blob.BlobAbortCopyFromURLResponse'
  - '@azure/storage-blob.BlobAcquireLeaseResponse'
  - '@azure/storage-blob.BlobBreakLeaseResponse'
  - '@azure/storage-blob.BlobChangeLeaseResponse'
  - '@azure/storage-blob.BlobCopyFromURLResponse'
  - '@azure/storage-blob.BlobCreateSnapshotResponse'
  - '@azure/storage-blob.BlobDeleteResponse'
  - '@azure/storage-blob.BlobDownloadResponse'
  - '@azure/storage-blob.BlobGetAccessControlResponse'
  - '@azure/storage-blob.BlobGetAccountInfoResponse'
  - '@azure/storage-blob.BlobGetPropertiesResponse'
  - '@azure/storage-blob.BlobReleaseLeaseResponse'
  - '@azure/storage-blob.BlobRenameResponse'
  - '@azure/storage-blob.BlobRenewLeaseResponse'
  - '@azure/storage-blob.BlobSetAccessControlResponse'
  - '@azure/storage-blob.BlobSetHTTPHeadersResponse'
  - '@azure/storage-blob.BlobSetMetadataResponse'
  - '@azure/storage-blob.BlobSetTierResponse'
  - '@azure/storage-blob.BlobStartCopyFromURLResponse'
  - '@azure/storage-blob.BlobType'
  - '@azure/storage-blob.BlobUndeleteResponse'
  - '@azure/storage-blob.BlockBlobCommitBlockListResponse'
  - '@azure/storage-blob.BlockBlobGetBlockListResponse'
  - '@azure/storage-blob.BlockBlobStageBlockFromURLResponse'
  - '@azure/storage-blob.BlockBlobStageBlockResponse'
  - '@azure/storage-blob.BlockBlobUploadResponse'
  - '@azure/storage-blob.BlockListType'
  - '@azure/storage-blob.ContainerAcquireLeaseResponse'
  - '@azure/storage-blob.ContainerBreakLeaseResponse'
  - '@azure/storage-blob.ContainerChangeLeaseResponse'
  - '@azure/storage-blob.ContainerCreateResponse'
  - '@azure/storage-blob.ContainerDeleteResponse'
  - '@azure/storage-blob.ContainerGetAccountInfoResponse'
  - '@azure/storage-blob.ContainerGetPropertiesResponse'
  - '@azure/storage-blob.ContainerListBlobFlatSegmentResponse'
  - '@azure/storage-blob.ContainerListBlobHierarchySegmentResponse'
  - '@azure/storage-blob.ContainerReleaseLeaseResponse'
  - '@azure/storage-blob.ContainerRenewLeaseResponse'
  - '@azure/storage-blob.ContainerSetAccessPolicyResponse'
  - '@azure/storage-blob.ContainerSetMetadataResponse'
  - '@azure/storage-blob.CopyStatusType'
  - '@azure/storage-blob.DeleteSnapshotsOptionType'
  - '@azure/storage-blob.DirectoryCreateResponse'
  - '@azure/storage-blob.DirectoryDeleteResponse'
  - '@azure/storage-blob.DirectoryGetAccessControlResponse'
  - '@azure/storage-blob.DirectoryRenameResponse'
  - '@azure/storage-blob.DirectorySetAccessControlResponse'
  - '@azure/storage-blob.EncryptionAlgorithmType'
  - '@azure/storage-blob.GeoReplicationStatusType'
  - '@azure/storage-blob.LeaseDurationType'
  - '@azure/storage-blob.LeaseStateType'
  - '@azure/storage-blob.LeaseStatusType'
  - '@azure/storage-blob.ListBlobsIncludeItem'
  - '@azure/storage-blob.ListContainersIncludeType'
  - '@azure/storage-blob.PageBlobClearPagesResponse'
  - '@azure/storage-blob.PageBlobCopyIncrementalResponse'
  - '@azure/storage-blob.PageBlobCreateResponse'
  - '@azure/storage-blob.PageBlobGetPageRangesDiffResponse'
  - '@azure/storage-blob.PageBlobGetPageRangesResponse'
  - '@azure/storage-blob.PageBlobResizeResponse'
  - '@azure/storage-blob.PageBlobUpdateSequenceNumberResponse'
  - '@azure/storage-blob.PageBlobUploadPagesFromURLResponse'
  - '@azure/storage-blob.PageBlobUploadPagesResponse'
  - '@azure/storage-blob.PathRenameMode'
  - '@azure/storage-blob.PublicAccessType'
  - '@azure/storage-blob.RehydratePriority'
  - '@azure/storage-blob.SequenceNumberActionType'
  - '@azure/storage-blob.ServiceGetAccountInfoResponse'
  - '@azure/storage-blob.ServiceGetPropertiesResponse'
  - '@azure/storage-blob.ServiceGetStatisticsResponse'
  - '@azure/storage-blob.ServiceListContainersSegmentResponse'
  - '@azure/storage-blob.ServiceSetPropertiesResponse'
  - '@azure/storage-blob.SkuName'
  - '@azure/storage-blob.StorageErrorCode'
  - '@azure/storage-blob.SyncCopyStatusType'
  - '@azure/storage-blob.BlobUploadCommonResponse'
functions:
  - name: >-
      generateAccountSASQueryParameters(IAccountSASSignatureValues,
      SharedKeyCredential)
    uid: '@azure/storage-blob.generateAccountSASQueryParameters'
    package: '@azure/storage-blob'
    summary: >-
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Generates a <xref:@azure/storage-blob.SASQueryParameters> object which
      contains all SAS query parameters needed to make an actual

      REST request.



      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function generateAccountSASQueryParameters(accountSASSignatureValues:
        IAccountSASSignatureValues, sharedKeyCredential: SharedKeyCredential):
        SASQueryParameters
      parameters:
        - id: accountSASSignatureValues
          type: <xref uid="@azure/storage-blob.IAccountSASSignatureValues" />
          description: ''
        - id: sharedKeyCredential
          type: <xref uid="@azure/storage-blob.SharedKeyCredential" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-blob.SASQueryParameters" />
  - name: >-
      generateBlobSASQueryParameters(IBlobSASSignatureValues,
      SharedKeyCredential)
    uid: '@azure/storage-blob.generateBlobSASQueryParameters'
    package: '@azure/storage-blob'
    summary: >+
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Creates an instance of SASQueryParameters.


      Only accepts required settings needed to create a SAS. For optional
      settings please

      set corresponding properties directly, such as permissions, startTime and
      identifier.


      WARNING: When identifier is not provided, permissions and expiryTime are
      required.

      You MUST assign value to identifier or expiryTime & permissions manually
      if you initial with

      this constructor.



      **Example**


      // Generate service level SAS for a container

      const containerSAS = generateBlobSASQueryParameters({
          containerName, // Required
          permissions: ContainerSASPermissions.parse("racwdl").toString(), // Required
          startTime: new Date(), // Required
          expiryTime: tmr, // Optional. Date type
          ipRange: { start: "0.0.0.0", end: "255.255.255.255" }, // Optional
          protocol: SASProtocol.HTTPSandHTTP, // Optional
          version: "2016-05-31" // Optional
        },
        sharedKeyCredential // SharedKeyCredential
      ).toString();




      **Example**


      // Generate service level SAS for a container with identifier

      // startTime & permissions are optional when identifier is provided

      const identifier = "unique-id";

      await containerURL.setAccessPolicy(Aborter.none, undefined, [
        {
          accessPolicy: {
            expiry: tmr, // Date type
            permission: ContainerSASPermissions.parse("racwdl").toString(),
            start: now // Date type
          },
          id: identifier
        }
      ]);


      const containerSAS = generateBlobSASQueryParameters(
        {
          containerName, // Required
          identifier // Required
        },
        sharedKeyCredential // SharedKeyCredential
      ).toString();




      **Example**


      // Generate service level SAS for a blob

      const blobSAS = generateBlobSASQueryParameters({
          containerName, // Required
          blobName, // Required
          permissions: BlobSASPermissions.parse("racwd").toString(), // Required
          startTime: new Date(), // Required
          expiryTime: tmr, // Optional. Date type
          cacheControl: "cache-control-override", // Optional
          contentDisposition: "content-disposition-override", // Optional
          contentEncoding: "content-encoding-override", // Optional
          contentLanguage: "content-language-override", // Optional
          contentType: "content-type-override", // Optional
          ipRange: { start: "0.0.0.0", end: "255.255.255.255" }, // Optional
          protocol: SASProtocol.HTTPSandHTTP, // Optional
          version: "2016-05-31" // Optional
        },
        sharedKeyCredential // SharedKeyCredential
      ).toString();

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function generateBlobSASQueryParameters(blobSASSignatureValues:
        IBlobSASSignatureValues, sharedKeyCredential: SharedKeyCredential):
        SASQueryParameters
      parameters:
        - id: blobSASSignatureValues
          type: <xref uid="@azure/storage-blob.IBlobSASSignatureValues" />
          description: ''
        - id: sharedKeyCredential
          type: <xref uid="@azure/storage-blob.SharedKeyCredential" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-blob.SASQueryParameters" />
  - name: >-
      generateBlobSASQueryParameters(IBlobSASSignatureValues, UserDelegationKey,
      string)
    uid: '@azure/storage-blob.generateBlobSASQueryParameters_1'
    package: '@azure/storage-blob'
    summary: >+
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Creates an instance of SASQueryParameters.

      WARNING: identifier will be ignored when generating user delegation SAS,
      permissions and expiryTime are required.



      **Example**


      // Generate user delegation SAS for a container

      const userDelegationKey = await serviceURL.getUserDelegationKey(aborter,
      startTime, expiryTime);

      const containerSAS = generateBlobSASQueryParameters({
          containerName, // Required
          permissions: ContainerSASPermissions.parse("racwdl").toString(), // Required
          startTime, // Required. Date type
          expiryTime, // Optional. Date type
          ipRange: { start: "0.0.0.0", end: "255.255.255.255" }, // Optional
          protocol: SASProtocol.HTTPSandHTTP, // Optional
          version: "2018-11-09" // Must >= 2018-11-09 to generate user delegation SAS
        },
        userDelegationKey, // UserDelegationKey
        accountName
      ).toString();

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function generateBlobSASQueryParameters(blobSASSignatureValues:
        IBlobSASSignatureValues, userDelegationKey: UserDelegationKey,
        accountName: string): SASQueryParameters
      parameters:
        - id: blobSASSignatureValues
          type: <xref uid="@azure/storage-blob.IBlobSASSignatureValues" />
          description: ''
        - id: userDelegationKey
          type: <xref uid="@azure/storage-blob.UserDelegationKey" />
          description: Return value of `ServiceURL.getUserDelegationKey()`
        - id: accountName
          type: string
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-blob.SASQueryParameters" />
  - name: ipRangeToString(IIPRange)
    uid: '@azure/storage-blob.ipRangeToString'
    package: '@azure/storage-blob'
    summary: |
      Generate IPRange format string. For example:
      "8.8.8.8" or "1.1.1.1-255.255.255.255"
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function ipRangeToString(ipRange: IIPRange): string'
      parameters:
        - id: ipRange
          type: <xref uid="@azure/storage-blob.IIPRange" />
          description: ''
      return:
        description: ''
        type: string
  - name: rangeToString(IRange)
    uid: '@azure/storage-blob.rangeToString'
    package: '@azure/storage-blob'
    summary: |
      Generate a range string. For example:
      "bytes=255-" or "bytes=0-511"
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function rangeToString(iRange: IRange): string'
      parameters:
        - id: iRange
          type: <xref uid="@azure/storage-blob.IRange" />
          description: ''
      return:
        description: ''
        type: string
  - name: >-
      uploadBrowserDataToBlockBlob(Aborter, Blob | ArrayBuffer |
      ArrayBufferView, BlockBlobURL, IUploadToBlockBlobOptions)
    uid: '@azure/storage-blob.uploadBrowserDataToBlockBlob'
    package: '@azure/storage-blob'
    summary: >
      ONLY AVAILABLE IN BROWSERS.

      Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block
      blob.


      When buffer length <= 256MB, this method will use 1 upload call to finish
      the upload.

      Otherwise, this method will call stageBlock to upload blocks, and finally
      call commitBlockList

      to commit the block list.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function uploadBrowserDataToBlockBlob(aborter: Aborter, browserData:
        Blob | ArrayBuffer | ArrayBufferView, blockBlobURL: BlockBlobURL,
        options?: IUploadToBlockBlobOptions): Promise<BlobUploadCommonResponse>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-blob.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: browserData
          type: Blob | ArrayBuffer | ArrayBufferView
          description: 'Blob, File, ArrayBuffer or ArrayBufferView'
        - id: blockBlobURL
          type: <xref uid="@azure/storage-blob.BlockBlobURL" />
          description: ''
        - id: options
          type: <xref uid="@azure/storage-blob.IUploadToBlockBlobOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.BlobUploadCommonResponse"
          />&gt;
  - name: >-
      downloadBlobToBuffer(Aborter, Buffer, BlobURL, number, undefined | number,
      IDownloadFromBlobOptions)
    uid: '@azure/storage-blob.downloadBlobToBuffer'
    package: '@azure/storage-blob'
    summary: >
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Downloads an Azure Blob in parallel to a buffer.

      Offset and count are optional, pass 0 for both to download the entire
      blob.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function downloadBlobToBuffer(aborter: Aborter, buffer: Buffer, blobURL:
        BlobURL, offset: number, count?: undefined | number, options?:
        IDownloadFromBlobOptions): Promise<void>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-blob.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: buffer
          type: Buffer
          description: 'Buffer to be fill, must have length larger than count'
        - id: blobURL
          type: <xref uid="@azure/storage-blob.BlobURL" />
          description: A BlobURL object
        - id: offset
          type: number
          description: 'From which position of the block blob to download, in bytes'
        - id: count
          type: undefined | number
          description: ''
        - id: options
          type: <xref uid="@azure/storage-blob.IDownloadFromBlobOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      uploadFileToBlockBlob(Aborter, string, BlockBlobURL,
      IUploadToBlockBlobOptions)
    uid: '@azure/storage-blob.uploadFileToBlockBlob'
    package: '@azure/storage-blob'
    summary: >
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Uploads a local file in blocks to a block blob.


      When file size <= 256MB, this method will use 1 upload call to finish the
      upload.

      Otherwise, this method will call stageBlock to upload blocks, and finally
      call commitBlockList

      to commit the block list.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function uploadFileToBlockBlob(aborter: Aborter, filePath: string,
        blockBlobURL: BlockBlobURL, options?: IUploadToBlockBlobOptions):
        Promise<BlobUploadCommonResponse>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-blob.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: filePath
          type: string
          description: Full path of local file
        - id: blockBlobURL
          type: <xref uid="@azure/storage-blob.BlockBlobURL" />
          description: BlockBlobURL
        - id: options
          type: <xref uid="@azure/storage-blob.IUploadToBlockBlobOptions" />
          description: ''
      return:
        description: ICommonResponse
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.BlobUploadCommonResponse"
          />&gt;
  - name: >-
      uploadStreamToBlockBlob(Aborter, Readable, BlockBlobURL, number, number,
      IUploadStreamToBlockBlobOptions)
    uid: '@azure/storage-blob.uploadStreamToBlockBlob'
    package: '@azure/storage-blob'
    summary: |
      ONLY AVAILABLE IN NODE.JS RUNTIME.
      Uploads a Node.js Readable stream into block blob.

      PERFORMANCE IMPROVEMENT TIPS:
      * Input stream highWaterMark is better to set a same value with bufferSize
         parameter, which will avoid Buffer.concat() operations.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function uploadStreamToBlockBlob(aborter: Aborter, stream: Readable,
        blockBlobURL: BlockBlobURL, bufferSize: number, maxBuffers: number,
        options?: IUploadStreamToBlockBlobOptions):
        Promise<BlobUploadCommonResponse>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-blob.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: stream
          type: Readable
          description: Node.js Readable stream
        - id: blockBlobURL
          type: <xref uid="@azure/storage-blob.BlockBlobURL" />
          description: A BlockBlobURL instance
        - id: bufferSize
          type: number
          description: >-
            Size of every buffer allocated, also the block size in the uploaded
            block blob
        - id: maxBuffers
          type: number
          description: |-
            Max buffers will allocate during uploading, positive correlation
                                       with max uploading concurrency
        - id: options
          type: <xref uid="@azure/storage-blob.IUploadStreamToBlockBlobOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.BlobUploadCommonResponse"
          />&gt;
  - name: 'ensureCpkIfSpecified(CpkInfo | undefined, boolean)'
    uid: '@azure/storage-blob.ensureCpkIfSpecified'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function ensureCpkIfSpecified(cpk: CpkInfo | undefined, isHttps:
        boolean)
      parameters:
        - id: cpk
          type: <xref uid="@azure/storage-blob.CpkInfo" /> | undefined
          description: ''
        - id: isHttps
          type: boolean
          description: ''
  - name: toAccessTier(BlockBlobTier | PremiumPageBlobTier | string | undefined)
    uid: '@azure/storage-blob.toAccessTier'
    package: '@azure/storage-blob'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function toAccessTier(tier: BlockBlobTier | PremiumPageBlobTier | string
        | undefined): Models.AccessTier | undefined
      parameters:
        - id: tier
          type: >-
            <xref uid="@azure/storage-blob.BlockBlobTier" /> | <xref
            uid="@azure/storage-blob.PremiumPageBlobTier" /> | string |
            undefined
          description: ''
      return:
        description: ''
        type: <xref uid="Models.AccessTier" /> | undefined
  - name: NewRetryPolicyFactory(IRetryOptions)
    uid: '@azure/storage-blob.NewRetryPolicyFactory'
    package: '@azure/storage-blob'
    summary: A factory method used to generated a RetryPolicy factory.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function NewRetryPolicyFactory(retryOptions?: IRetryOptions):
        RequestPolicyFactory
      parameters:
        - id: retryOptions
          type: <xref uid="@azure/storage-blob.IRetryOptions" />
          description: ''
      return:
        description: ''
        type: RequestPolicyFactory
enums:
  - '@azure/storage-blob.SASProtocol'
  - '@azure/storage-blob.BlockBlobTier'
  - '@azure/storage-blob.PremiumPageBlobTier'
  - '@azure/storage-blob.RetryPolicyType'
